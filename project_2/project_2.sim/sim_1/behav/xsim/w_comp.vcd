$date
   Fri Aug  1 16:31:11 2025
$end
$version
  2020.1
$end
$timescale
  1ps
$end
$scope module comp_tb $end
$var reg 1 ! clk $end
$var reg 1 " rst $end
$var reg 1 # add $end
$var reg 5 $ i [4:0] $end
$var reg 5 % j [4:0] $end
$var wire 8 & result [7:0] $end
$var wire 10 ' addr [9:0] $end
$var wire 1 ( comp_done $end
$var parameter 32 ) W [31:0] $end
$var parameter 32 * ADDR_LEN [31:0] $end
$scope module dut $end
$var wire 1 + add $end
$var wire 1 , clk $end
$var wire 1 - rst $end
$var wire 5 . i [4:0] $end
$var wire 5 / j [4:0] $end
$var reg 8 0 result [7:0] $end
$var wire 10 ' addr [9:0] $end
$var reg 1 1 comp_done $end
$var parameter 32 2 W [31:0] $end
$var parameter 32 3 ADDR_LEN [31:0] $end
$scope function clamp $end
$var reg 8 4 clamp [7:0] $end
$var reg 16 5 val [15:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0!
0"
0#
b111 $
b1000 %
bx &
b1101010 '
x(
b1110 )
b1001 *
0+
0,
0-
b111 .
b1000 /
bx 0
x1
b1110 2
b1001 3
bx 4
bx 5
$end
#5000
1!
0(
1,
01
#10000
0!
1"
1#
1+
0,
1-
#15000
1!
1(
1,
11
#20000
0!
0,
#25000
1!
b11111111 &
1,
b11111111 0
b11111111 4
b1111111111111111 5
#30000
0!
0,
#35000
1!
1,
#40000
0!
0,
#45000
1!
1,
#50000
0!
0,
#55000
1!
1,
#60000
0!
0,
#65000
1!
1,
#70000
0!
0,
#75000
1!
1,
#80000
0!
0,
#85000
1!
1,
#90000
0!
0,
#95000
1!
1,
#100000
0!
0,
#105000
1!
1,

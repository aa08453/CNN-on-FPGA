// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="top,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.750000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=12,HLS_SYN_DSP=0,HLS_SYN_FF=9804,HLS_SYN_LUT=30443,HLS_VERSION=2020_1}" *)

module top (
        ap_clk,
        ap_rst_n,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 11'd1;
parameter    ap_ST_fsm_state2 = 11'd2;
parameter    ap_ST_fsm_state3 = 11'd4;
parameter    ap_ST_fsm_state4 = 11'd8;
parameter    ap_ST_fsm_state5 = 11'd16;
parameter    ap_ST_fsm_state6 = 11'd32;
parameter    ap_ST_fsm_state7 = 11'd64;
parameter    ap_ST_fsm_state8 = 11'd128;
parameter    ap_ST_fsm_state9 = 11'd256;
parameter    ap_ST_fsm_state10 = 11'd512;
parameter    ap_ST_fsm_state11 = 11'd1024;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 7;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM_ADDR_WIDTH = 32;
parameter    C_M_AXI_GMEM_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_USER_VALUE = 0;
parameter    C_M_AXI_GMEM_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1:0] m_axi_gmem_AWADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_AWID;
output  [7:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [C_M_AXI_GMEM_AWUSER_WIDTH - 1:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [C_M_AXI_GMEM_DATA_WIDTH - 1:0] m_axi_gmem_WDATA;
output  [C_M_AXI_GMEM_WSTRB_WIDTH - 1:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_WID;
output  [C_M_AXI_GMEM_WUSER_WIDTH - 1:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1:0] m_axi_gmem_ARADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_ARID;
output  [7:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [C_M_AXI_GMEM_ARUSER_WIDTH - 1:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [C_M_AXI_GMEM_DATA_WIDTH - 1:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_RID;
input  [C_M_AXI_GMEM_RUSER_WIDTH - 1:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_BID;
input  [C_M_AXI_GMEM_BUSER_WIDTH - 1:0] m_axi_gmem_BUSER;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
output   interrupt;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [10:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [31:0] input_V;
wire   [31:0] outputConv_V;
wire   [31:0] weight_V;
wire   [31:0] bias_V;
wire   [31:0] outputPool_V;
wire   [31:0] weight2_V;
wire   [31:0] bias2_V;
wire   [31:0] outputConv2_V;
wire   [31:0] outputPool2_V;
wire   [31:0] outputDense_V;
wire   [31:0] fcWeight_V;
wire   [31:0] fcBias_V;
reg    gmem_AWVALID;
wire    gmem_AWREADY;
reg   [31:0] gmem_AWADDR;
reg   [0:0] gmem_AWID;
reg   [31:0] gmem_AWLEN;
reg   [2:0] gmem_AWSIZE;
reg   [1:0] gmem_AWBURST;
reg   [1:0] gmem_AWLOCK;
reg   [3:0] gmem_AWCACHE;
reg   [2:0] gmem_AWPROT;
reg   [3:0] gmem_AWQOS;
reg   [3:0] gmem_AWREGION;
reg   [0:0] gmem_AWUSER;
reg    gmem_WVALID;
wire    gmem_WREADY;
reg   [7:0] gmem_WDATA;
reg   [0:0] gmem_WSTRB;
reg    gmem_WLAST;
reg   [0:0] gmem_WID;
reg   [0:0] gmem_WUSER;
reg    gmem_ARVALID;
wire    gmem_ARREADY;
reg   [31:0] gmem_ARADDR;
reg   [0:0] gmem_ARID;
reg   [31:0] gmem_ARLEN;
reg   [2:0] gmem_ARSIZE;
reg   [1:0] gmem_ARBURST;
reg   [1:0] gmem_ARLOCK;
reg   [3:0] gmem_ARCACHE;
reg   [2:0] gmem_ARPROT;
reg   [3:0] gmem_ARQOS;
reg   [3:0] gmem_ARREGION;
reg   [0:0] gmem_ARUSER;
wire    gmem_RVALID;
reg    gmem_RREADY;
wire   [7:0] gmem_RDATA;
wire    gmem_RLAST;
wire   [0:0] gmem_RID;
wire   [0:0] gmem_RUSER;
wire   [1:0] gmem_RRESP;
wire    gmem_BVALID;
reg    gmem_BREADY;
wire   [1:0] gmem_BRESP;
wire   [0:0] gmem_BID;
wire   [0:0] gmem_BUSER;
reg   [31:0] fcBias_V_read_reg_253;
reg   [31:0] fcWeight_V_read_reg_258;
reg   [31:0] outputDense_V_read_reg_263;
reg   [31:0] outputPool2_V_read_reg_268;
reg   [31:0] outputConv2_V_read_reg_274;
reg   [31:0] bias2_V_read_reg_280;
reg   [31:0] weight2_V_read_reg_285;
reg   [31:0] outputPool_V_read_reg_290;
reg   [31:0] bias_V_read_reg_296;
reg   [31:0] weight_V_read_reg_301;
reg   [31:0] outputConv_V_read_reg_306;
reg   [31:0] input_V_read_reg_312;
wire    grp_conv2_fu_206_ap_start;
wire    grp_conv2_fu_206_ap_done;
wire    grp_conv2_fu_206_ap_idle;
wire    grp_conv2_fu_206_ap_ready;
wire    grp_conv2_fu_206_m_axi_input_V_AWVALID;
wire   [31:0] grp_conv2_fu_206_m_axi_input_V_AWADDR;
wire   [0:0] grp_conv2_fu_206_m_axi_input_V_AWID;
wire   [31:0] grp_conv2_fu_206_m_axi_input_V_AWLEN;
wire   [2:0] grp_conv2_fu_206_m_axi_input_V_AWSIZE;
wire   [1:0] grp_conv2_fu_206_m_axi_input_V_AWBURST;
wire   [1:0] grp_conv2_fu_206_m_axi_input_V_AWLOCK;
wire   [3:0] grp_conv2_fu_206_m_axi_input_V_AWCACHE;
wire   [2:0] grp_conv2_fu_206_m_axi_input_V_AWPROT;
wire   [3:0] grp_conv2_fu_206_m_axi_input_V_AWQOS;
wire   [3:0] grp_conv2_fu_206_m_axi_input_V_AWREGION;
wire   [0:0] grp_conv2_fu_206_m_axi_input_V_AWUSER;
wire    grp_conv2_fu_206_m_axi_input_V_WVALID;
wire   [7:0] grp_conv2_fu_206_m_axi_input_V_WDATA;
wire   [0:0] grp_conv2_fu_206_m_axi_input_V_WSTRB;
wire    grp_conv2_fu_206_m_axi_input_V_WLAST;
wire   [0:0] grp_conv2_fu_206_m_axi_input_V_WID;
wire   [0:0] grp_conv2_fu_206_m_axi_input_V_WUSER;
wire    grp_conv2_fu_206_m_axi_input_V_ARVALID;
wire   [31:0] grp_conv2_fu_206_m_axi_input_V_ARADDR;
wire   [0:0] grp_conv2_fu_206_m_axi_input_V_ARID;
wire   [31:0] grp_conv2_fu_206_m_axi_input_V_ARLEN;
wire   [2:0] grp_conv2_fu_206_m_axi_input_V_ARSIZE;
wire   [1:0] grp_conv2_fu_206_m_axi_input_V_ARBURST;
wire   [1:0] grp_conv2_fu_206_m_axi_input_V_ARLOCK;
wire   [3:0] grp_conv2_fu_206_m_axi_input_V_ARCACHE;
wire   [2:0] grp_conv2_fu_206_m_axi_input_V_ARPROT;
wire   [3:0] grp_conv2_fu_206_m_axi_input_V_ARQOS;
wire   [3:0] grp_conv2_fu_206_m_axi_input_V_ARREGION;
wire   [0:0] grp_conv2_fu_206_m_axi_input_V_ARUSER;
wire    grp_conv2_fu_206_m_axi_input_V_RREADY;
wire    grp_conv2_fu_206_m_axi_input_V_BREADY;
wire    grp_dense_fu_216_ap_start;
wire    grp_dense_fu_216_ap_done;
wire    grp_dense_fu_216_ap_idle;
wire    grp_dense_fu_216_ap_ready;
wire    grp_dense_fu_216_m_axi_input_V_AWVALID;
wire   [31:0] grp_dense_fu_216_m_axi_input_V_AWADDR;
wire   [0:0] grp_dense_fu_216_m_axi_input_V_AWID;
wire   [31:0] grp_dense_fu_216_m_axi_input_V_AWLEN;
wire   [2:0] grp_dense_fu_216_m_axi_input_V_AWSIZE;
wire   [1:0] grp_dense_fu_216_m_axi_input_V_AWBURST;
wire   [1:0] grp_dense_fu_216_m_axi_input_V_AWLOCK;
wire   [3:0] grp_dense_fu_216_m_axi_input_V_AWCACHE;
wire   [2:0] grp_dense_fu_216_m_axi_input_V_AWPROT;
wire   [3:0] grp_dense_fu_216_m_axi_input_V_AWQOS;
wire   [3:0] grp_dense_fu_216_m_axi_input_V_AWREGION;
wire   [0:0] grp_dense_fu_216_m_axi_input_V_AWUSER;
wire    grp_dense_fu_216_m_axi_input_V_WVALID;
wire   [7:0] grp_dense_fu_216_m_axi_input_V_WDATA;
wire   [0:0] grp_dense_fu_216_m_axi_input_V_WSTRB;
wire    grp_dense_fu_216_m_axi_input_V_WLAST;
wire   [0:0] grp_dense_fu_216_m_axi_input_V_WID;
wire   [0:0] grp_dense_fu_216_m_axi_input_V_WUSER;
wire    grp_dense_fu_216_m_axi_input_V_ARVALID;
wire   [31:0] grp_dense_fu_216_m_axi_input_V_ARADDR;
wire   [0:0] grp_dense_fu_216_m_axi_input_V_ARID;
wire   [31:0] grp_dense_fu_216_m_axi_input_V_ARLEN;
wire   [2:0] grp_dense_fu_216_m_axi_input_V_ARSIZE;
wire   [1:0] grp_dense_fu_216_m_axi_input_V_ARBURST;
wire   [1:0] grp_dense_fu_216_m_axi_input_V_ARLOCK;
wire   [3:0] grp_dense_fu_216_m_axi_input_V_ARCACHE;
wire   [2:0] grp_dense_fu_216_m_axi_input_V_ARPROT;
wire   [3:0] grp_dense_fu_216_m_axi_input_V_ARQOS;
wire   [3:0] grp_dense_fu_216_m_axi_input_V_ARREGION;
wire   [0:0] grp_dense_fu_216_m_axi_input_V_ARUSER;
wire    grp_dense_fu_216_m_axi_input_V_RREADY;
wire    grp_dense_fu_216_m_axi_input_V_BREADY;
wire    grp_conv1_fu_226_ap_start;
wire    grp_conv1_fu_226_ap_done;
wire    grp_conv1_fu_226_ap_idle;
wire    grp_conv1_fu_226_ap_ready;
wire    grp_conv1_fu_226_m_axi_input_V_AWVALID;
wire   [31:0] grp_conv1_fu_226_m_axi_input_V_AWADDR;
wire   [0:0] grp_conv1_fu_226_m_axi_input_V_AWID;
wire   [31:0] grp_conv1_fu_226_m_axi_input_V_AWLEN;
wire   [2:0] grp_conv1_fu_226_m_axi_input_V_AWSIZE;
wire   [1:0] grp_conv1_fu_226_m_axi_input_V_AWBURST;
wire   [1:0] grp_conv1_fu_226_m_axi_input_V_AWLOCK;
wire   [3:0] grp_conv1_fu_226_m_axi_input_V_AWCACHE;
wire   [2:0] grp_conv1_fu_226_m_axi_input_V_AWPROT;
wire   [3:0] grp_conv1_fu_226_m_axi_input_V_AWQOS;
wire   [3:0] grp_conv1_fu_226_m_axi_input_V_AWREGION;
wire   [0:0] grp_conv1_fu_226_m_axi_input_V_AWUSER;
wire    grp_conv1_fu_226_m_axi_input_V_WVALID;
wire   [7:0] grp_conv1_fu_226_m_axi_input_V_WDATA;
wire   [0:0] grp_conv1_fu_226_m_axi_input_V_WSTRB;
wire    grp_conv1_fu_226_m_axi_input_V_WLAST;
wire   [0:0] grp_conv1_fu_226_m_axi_input_V_WID;
wire   [0:0] grp_conv1_fu_226_m_axi_input_V_WUSER;
wire    grp_conv1_fu_226_m_axi_input_V_ARVALID;
wire   [31:0] grp_conv1_fu_226_m_axi_input_V_ARADDR;
wire   [0:0] grp_conv1_fu_226_m_axi_input_V_ARID;
wire   [31:0] grp_conv1_fu_226_m_axi_input_V_ARLEN;
wire   [2:0] grp_conv1_fu_226_m_axi_input_V_ARSIZE;
wire   [1:0] grp_conv1_fu_226_m_axi_input_V_ARBURST;
wire   [1:0] grp_conv1_fu_226_m_axi_input_V_ARLOCK;
wire   [3:0] grp_conv1_fu_226_m_axi_input_V_ARCACHE;
wire   [2:0] grp_conv1_fu_226_m_axi_input_V_ARPROT;
wire   [3:0] grp_conv1_fu_226_m_axi_input_V_ARQOS;
wire   [3:0] grp_conv1_fu_226_m_axi_input_V_ARREGION;
wire   [0:0] grp_conv1_fu_226_m_axi_input_V_ARUSER;
wire    grp_conv1_fu_226_m_axi_input_V_RREADY;
wire    grp_conv1_fu_226_m_axi_input_V_BREADY;
wire    grp_pool_fu_236_ap_start;
wire    grp_pool_fu_236_ap_done;
wire    grp_pool_fu_236_ap_idle;
wire    grp_pool_fu_236_ap_ready;
wire    grp_pool_fu_236_m_axi_input_V_AWVALID;
wire   [31:0] grp_pool_fu_236_m_axi_input_V_AWADDR;
wire   [0:0] grp_pool_fu_236_m_axi_input_V_AWID;
wire   [31:0] grp_pool_fu_236_m_axi_input_V_AWLEN;
wire   [2:0] grp_pool_fu_236_m_axi_input_V_AWSIZE;
wire   [1:0] grp_pool_fu_236_m_axi_input_V_AWBURST;
wire   [1:0] grp_pool_fu_236_m_axi_input_V_AWLOCK;
wire   [3:0] grp_pool_fu_236_m_axi_input_V_AWCACHE;
wire   [2:0] grp_pool_fu_236_m_axi_input_V_AWPROT;
wire   [3:0] grp_pool_fu_236_m_axi_input_V_AWQOS;
wire   [3:0] grp_pool_fu_236_m_axi_input_V_AWREGION;
wire   [0:0] grp_pool_fu_236_m_axi_input_V_AWUSER;
wire    grp_pool_fu_236_m_axi_input_V_WVALID;
wire   [7:0] grp_pool_fu_236_m_axi_input_V_WDATA;
wire   [0:0] grp_pool_fu_236_m_axi_input_V_WSTRB;
wire    grp_pool_fu_236_m_axi_input_V_WLAST;
wire   [0:0] grp_pool_fu_236_m_axi_input_V_WID;
wire   [0:0] grp_pool_fu_236_m_axi_input_V_WUSER;
wire    grp_pool_fu_236_m_axi_input_V_ARVALID;
wire   [31:0] grp_pool_fu_236_m_axi_input_V_ARADDR;
wire   [0:0] grp_pool_fu_236_m_axi_input_V_ARID;
wire   [31:0] grp_pool_fu_236_m_axi_input_V_ARLEN;
wire   [2:0] grp_pool_fu_236_m_axi_input_V_ARSIZE;
wire   [1:0] grp_pool_fu_236_m_axi_input_V_ARBURST;
wire   [1:0] grp_pool_fu_236_m_axi_input_V_ARLOCK;
wire   [3:0] grp_pool_fu_236_m_axi_input_V_ARCACHE;
wire   [2:0] grp_pool_fu_236_m_axi_input_V_ARPROT;
wire   [3:0] grp_pool_fu_236_m_axi_input_V_ARQOS;
wire   [3:0] grp_pool_fu_236_m_axi_input_V_ARREGION;
wire   [0:0] grp_pool_fu_236_m_axi_input_V_ARUSER;
wire    grp_pool_fu_236_m_axi_input_V_RREADY;
wire    grp_pool_fu_236_m_axi_input_V_BREADY;
reg   [31:0] grp_pool_fu_236_input_V_offset;
reg   [31:0] grp_pool_fu_236_outputPool_V_offset;
reg   [5:0] grp_pool_fu_236_Cin;
reg   [5:0] grp_pool_fu_236_H;
reg   [5:0] grp_pool_fu_236_W;
reg    grp_conv2_fu_206_ap_start_reg;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
reg    grp_dense_fu_216_ap_start_reg;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
reg    grp_conv1_fu_226_ap_start_reg;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
reg    grp_pool_fu_236_ap_start_reg;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state9;
reg   [10:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 11'd1;
#0 grp_conv2_fu_206_ap_start_reg = 1'b0;
#0 grp_dense_fu_216_ap_start_reg = 1'b0;
#0 grp_conv1_fu_226_ap_start_reg = 1'b0;
#0 grp_pool_fu_236_ap_start_reg = 1'b0;
end

top_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
top_control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .input_V(input_V),
    .outputConv_V(outputConv_V),
    .weight_V(weight_V),
    .bias_V(bias_V),
    .outputPool_V(outputPool_V),
    .weight2_V(weight2_V),
    .bias2_V(bias2_V),
    .outputConv2_V(outputConv2_V),
    .outputPool2_V(outputPool2_V),
    .outputDense_V(outputDense_V),
    .fcWeight_V(fcWeight_V),
    .fcBias_V(fcBias_V)
);

top_gmem_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 8 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM_CACHE_VALUE ))
top_gmem_m_axi_U(
    .AWVALID(m_axi_gmem_AWVALID),
    .AWREADY(m_axi_gmem_AWREADY),
    .AWADDR(m_axi_gmem_AWADDR),
    .AWID(m_axi_gmem_AWID),
    .AWLEN(m_axi_gmem_AWLEN),
    .AWSIZE(m_axi_gmem_AWSIZE),
    .AWBURST(m_axi_gmem_AWBURST),
    .AWLOCK(m_axi_gmem_AWLOCK),
    .AWCACHE(m_axi_gmem_AWCACHE),
    .AWPROT(m_axi_gmem_AWPROT),
    .AWQOS(m_axi_gmem_AWQOS),
    .AWREGION(m_axi_gmem_AWREGION),
    .AWUSER(m_axi_gmem_AWUSER),
    .WVALID(m_axi_gmem_WVALID),
    .WREADY(m_axi_gmem_WREADY),
    .WDATA(m_axi_gmem_WDATA),
    .WSTRB(m_axi_gmem_WSTRB),
    .WLAST(m_axi_gmem_WLAST),
    .WID(m_axi_gmem_WID),
    .WUSER(m_axi_gmem_WUSER),
    .ARVALID(m_axi_gmem_ARVALID),
    .ARREADY(m_axi_gmem_ARREADY),
    .ARADDR(m_axi_gmem_ARADDR),
    .ARID(m_axi_gmem_ARID),
    .ARLEN(m_axi_gmem_ARLEN),
    .ARSIZE(m_axi_gmem_ARSIZE),
    .ARBURST(m_axi_gmem_ARBURST),
    .ARLOCK(m_axi_gmem_ARLOCK),
    .ARCACHE(m_axi_gmem_ARCACHE),
    .ARPROT(m_axi_gmem_ARPROT),
    .ARQOS(m_axi_gmem_ARQOS),
    .ARREGION(m_axi_gmem_ARREGION),
    .ARUSER(m_axi_gmem_ARUSER),
    .RVALID(m_axi_gmem_RVALID),
    .RREADY(m_axi_gmem_RREADY),
    .RDATA(m_axi_gmem_RDATA),
    .RLAST(m_axi_gmem_RLAST),
    .RID(m_axi_gmem_RID),
    .RUSER(m_axi_gmem_RUSER),
    .RRESP(m_axi_gmem_RRESP),
    .BVALID(m_axi_gmem_BVALID),
    .BREADY(m_axi_gmem_BREADY),
    .BRESP(m_axi_gmem_BRESP),
    .BID(m_axi_gmem_BID),
    .BUSER(m_axi_gmem_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(gmem_ARVALID),
    .I_ARREADY(gmem_ARREADY),
    .I_ARADDR(gmem_ARADDR),
    .I_ARID(gmem_ARID),
    .I_ARLEN(gmem_ARLEN),
    .I_ARSIZE(gmem_ARSIZE),
    .I_ARLOCK(gmem_ARLOCK),
    .I_ARCACHE(gmem_ARCACHE),
    .I_ARQOS(gmem_ARQOS),
    .I_ARPROT(gmem_ARPROT),
    .I_ARUSER(gmem_ARUSER),
    .I_ARBURST(gmem_ARBURST),
    .I_ARREGION(gmem_ARREGION),
    .I_RVALID(gmem_RVALID),
    .I_RREADY(gmem_RREADY),
    .I_RDATA(gmem_RDATA),
    .I_RID(gmem_RID),
    .I_RUSER(gmem_RUSER),
    .I_RRESP(gmem_RRESP),
    .I_RLAST(gmem_RLAST),
    .I_AWVALID(gmem_AWVALID),
    .I_AWREADY(gmem_AWREADY),
    .I_AWADDR(gmem_AWADDR),
    .I_AWID(gmem_AWID),
    .I_AWLEN(gmem_AWLEN),
    .I_AWSIZE(gmem_AWSIZE),
    .I_AWLOCK(gmem_AWLOCK),
    .I_AWCACHE(gmem_AWCACHE),
    .I_AWQOS(gmem_AWQOS),
    .I_AWPROT(gmem_AWPROT),
    .I_AWUSER(gmem_AWUSER),
    .I_AWBURST(gmem_AWBURST),
    .I_AWREGION(gmem_AWREGION),
    .I_WVALID(gmem_WVALID),
    .I_WREADY(gmem_WREADY),
    .I_WDATA(gmem_WDATA),
    .I_WID(gmem_WID),
    .I_WUSER(gmem_WUSER),
    .I_WLAST(gmem_WLAST),
    .I_WSTRB(gmem_WSTRB),
    .I_BVALID(gmem_BVALID),
    .I_BREADY(gmem_BREADY),
    .I_BRESP(gmem_BRESP),
    .I_BID(gmem_BID),
    .I_BUSER(gmem_BUSER)
);

conv2 grp_conv2_fu_206(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_conv2_fu_206_ap_start),
    .ap_done(grp_conv2_fu_206_ap_done),
    .ap_idle(grp_conv2_fu_206_ap_idle),
    .ap_ready(grp_conv2_fu_206_ap_ready),
    .m_axi_input_V_AWVALID(grp_conv2_fu_206_m_axi_input_V_AWVALID),
    .m_axi_input_V_AWREADY(gmem_AWREADY),
    .m_axi_input_V_AWADDR(grp_conv2_fu_206_m_axi_input_V_AWADDR),
    .m_axi_input_V_AWID(grp_conv2_fu_206_m_axi_input_V_AWID),
    .m_axi_input_V_AWLEN(grp_conv2_fu_206_m_axi_input_V_AWLEN),
    .m_axi_input_V_AWSIZE(grp_conv2_fu_206_m_axi_input_V_AWSIZE),
    .m_axi_input_V_AWBURST(grp_conv2_fu_206_m_axi_input_V_AWBURST),
    .m_axi_input_V_AWLOCK(grp_conv2_fu_206_m_axi_input_V_AWLOCK),
    .m_axi_input_V_AWCACHE(grp_conv2_fu_206_m_axi_input_V_AWCACHE),
    .m_axi_input_V_AWPROT(grp_conv2_fu_206_m_axi_input_V_AWPROT),
    .m_axi_input_V_AWQOS(grp_conv2_fu_206_m_axi_input_V_AWQOS),
    .m_axi_input_V_AWREGION(grp_conv2_fu_206_m_axi_input_V_AWREGION),
    .m_axi_input_V_AWUSER(grp_conv2_fu_206_m_axi_input_V_AWUSER),
    .m_axi_input_V_WVALID(grp_conv2_fu_206_m_axi_input_V_WVALID),
    .m_axi_input_V_WREADY(gmem_WREADY),
    .m_axi_input_V_WDATA(grp_conv2_fu_206_m_axi_input_V_WDATA),
    .m_axi_input_V_WSTRB(grp_conv2_fu_206_m_axi_input_V_WSTRB),
    .m_axi_input_V_WLAST(grp_conv2_fu_206_m_axi_input_V_WLAST),
    .m_axi_input_V_WID(grp_conv2_fu_206_m_axi_input_V_WID),
    .m_axi_input_V_WUSER(grp_conv2_fu_206_m_axi_input_V_WUSER),
    .m_axi_input_V_ARVALID(grp_conv2_fu_206_m_axi_input_V_ARVALID),
    .m_axi_input_V_ARREADY(gmem_ARREADY),
    .m_axi_input_V_ARADDR(grp_conv2_fu_206_m_axi_input_V_ARADDR),
    .m_axi_input_V_ARID(grp_conv2_fu_206_m_axi_input_V_ARID),
    .m_axi_input_V_ARLEN(grp_conv2_fu_206_m_axi_input_V_ARLEN),
    .m_axi_input_V_ARSIZE(grp_conv2_fu_206_m_axi_input_V_ARSIZE),
    .m_axi_input_V_ARBURST(grp_conv2_fu_206_m_axi_input_V_ARBURST),
    .m_axi_input_V_ARLOCK(grp_conv2_fu_206_m_axi_input_V_ARLOCK),
    .m_axi_input_V_ARCACHE(grp_conv2_fu_206_m_axi_input_V_ARCACHE),
    .m_axi_input_V_ARPROT(grp_conv2_fu_206_m_axi_input_V_ARPROT),
    .m_axi_input_V_ARQOS(grp_conv2_fu_206_m_axi_input_V_ARQOS),
    .m_axi_input_V_ARREGION(grp_conv2_fu_206_m_axi_input_V_ARREGION),
    .m_axi_input_V_ARUSER(grp_conv2_fu_206_m_axi_input_V_ARUSER),
    .m_axi_input_V_RVALID(gmem_RVALID),
    .m_axi_input_V_RREADY(grp_conv2_fu_206_m_axi_input_V_RREADY),
    .m_axi_input_V_RDATA(gmem_RDATA),
    .m_axi_input_V_RLAST(gmem_RLAST),
    .m_axi_input_V_RID(gmem_RID),
    .m_axi_input_V_RUSER(gmem_RUSER),
    .m_axi_input_V_RRESP(gmem_RRESP),
    .m_axi_input_V_BVALID(gmem_BVALID),
    .m_axi_input_V_BREADY(grp_conv2_fu_206_m_axi_input_V_BREADY),
    .m_axi_input_V_BRESP(gmem_BRESP),
    .m_axi_input_V_BID(gmem_BID),
    .m_axi_input_V_BUSER(gmem_BUSER),
    .input_V_offset(outputPool_V_read_reg_290),
    .outputConv_V_offset(outputConv2_V_read_reg_274),
    .weight_V_offset(weight2_V_read_reg_285),
    .bias_V_offset(bias2_V_read_reg_280)
);

dense grp_dense_fu_216(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_dense_fu_216_ap_start),
    .ap_done(grp_dense_fu_216_ap_done),
    .ap_idle(grp_dense_fu_216_ap_idle),
    .ap_ready(grp_dense_fu_216_ap_ready),
    .m_axi_input_V_AWVALID(grp_dense_fu_216_m_axi_input_V_AWVALID),
    .m_axi_input_V_AWREADY(gmem_AWREADY),
    .m_axi_input_V_AWADDR(grp_dense_fu_216_m_axi_input_V_AWADDR),
    .m_axi_input_V_AWID(grp_dense_fu_216_m_axi_input_V_AWID),
    .m_axi_input_V_AWLEN(grp_dense_fu_216_m_axi_input_V_AWLEN),
    .m_axi_input_V_AWSIZE(grp_dense_fu_216_m_axi_input_V_AWSIZE),
    .m_axi_input_V_AWBURST(grp_dense_fu_216_m_axi_input_V_AWBURST),
    .m_axi_input_V_AWLOCK(grp_dense_fu_216_m_axi_input_V_AWLOCK),
    .m_axi_input_V_AWCACHE(grp_dense_fu_216_m_axi_input_V_AWCACHE),
    .m_axi_input_V_AWPROT(grp_dense_fu_216_m_axi_input_V_AWPROT),
    .m_axi_input_V_AWQOS(grp_dense_fu_216_m_axi_input_V_AWQOS),
    .m_axi_input_V_AWREGION(grp_dense_fu_216_m_axi_input_V_AWREGION),
    .m_axi_input_V_AWUSER(grp_dense_fu_216_m_axi_input_V_AWUSER),
    .m_axi_input_V_WVALID(grp_dense_fu_216_m_axi_input_V_WVALID),
    .m_axi_input_V_WREADY(gmem_WREADY),
    .m_axi_input_V_WDATA(grp_dense_fu_216_m_axi_input_V_WDATA),
    .m_axi_input_V_WSTRB(grp_dense_fu_216_m_axi_input_V_WSTRB),
    .m_axi_input_V_WLAST(grp_dense_fu_216_m_axi_input_V_WLAST),
    .m_axi_input_V_WID(grp_dense_fu_216_m_axi_input_V_WID),
    .m_axi_input_V_WUSER(grp_dense_fu_216_m_axi_input_V_WUSER),
    .m_axi_input_V_ARVALID(grp_dense_fu_216_m_axi_input_V_ARVALID),
    .m_axi_input_V_ARREADY(gmem_ARREADY),
    .m_axi_input_V_ARADDR(grp_dense_fu_216_m_axi_input_V_ARADDR),
    .m_axi_input_V_ARID(grp_dense_fu_216_m_axi_input_V_ARID),
    .m_axi_input_V_ARLEN(grp_dense_fu_216_m_axi_input_V_ARLEN),
    .m_axi_input_V_ARSIZE(grp_dense_fu_216_m_axi_input_V_ARSIZE),
    .m_axi_input_V_ARBURST(grp_dense_fu_216_m_axi_input_V_ARBURST),
    .m_axi_input_V_ARLOCK(grp_dense_fu_216_m_axi_input_V_ARLOCK),
    .m_axi_input_V_ARCACHE(grp_dense_fu_216_m_axi_input_V_ARCACHE),
    .m_axi_input_V_ARPROT(grp_dense_fu_216_m_axi_input_V_ARPROT),
    .m_axi_input_V_ARQOS(grp_dense_fu_216_m_axi_input_V_ARQOS),
    .m_axi_input_V_ARREGION(grp_dense_fu_216_m_axi_input_V_ARREGION),
    .m_axi_input_V_ARUSER(grp_dense_fu_216_m_axi_input_V_ARUSER),
    .m_axi_input_V_RVALID(gmem_RVALID),
    .m_axi_input_V_RREADY(grp_dense_fu_216_m_axi_input_V_RREADY),
    .m_axi_input_V_RDATA(gmem_RDATA),
    .m_axi_input_V_RLAST(gmem_RLAST),
    .m_axi_input_V_RID(gmem_RID),
    .m_axi_input_V_RUSER(gmem_RUSER),
    .m_axi_input_V_RRESP(gmem_RRESP),
    .m_axi_input_V_BVALID(gmem_BVALID),
    .m_axi_input_V_BREADY(grp_dense_fu_216_m_axi_input_V_BREADY),
    .m_axi_input_V_BRESP(gmem_BRESP),
    .m_axi_input_V_BID(gmem_BID),
    .m_axi_input_V_BUSER(gmem_BUSER),
    .input_V_offset(outputPool2_V_read_reg_268),
    .outputDense_V_offset(outputDense_V_read_reg_263),
    .fcWeight_V_offset(fcWeight_V_read_reg_258),
    .fcBias_V_offset(fcBias_V_read_reg_253)
);

conv1 grp_conv1_fu_226(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_conv1_fu_226_ap_start),
    .ap_done(grp_conv1_fu_226_ap_done),
    .ap_idle(grp_conv1_fu_226_ap_idle),
    .ap_ready(grp_conv1_fu_226_ap_ready),
    .m_axi_input_V_AWVALID(grp_conv1_fu_226_m_axi_input_V_AWVALID),
    .m_axi_input_V_AWREADY(gmem_AWREADY),
    .m_axi_input_V_AWADDR(grp_conv1_fu_226_m_axi_input_V_AWADDR),
    .m_axi_input_V_AWID(grp_conv1_fu_226_m_axi_input_V_AWID),
    .m_axi_input_V_AWLEN(grp_conv1_fu_226_m_axi_input_V_AWLEN),
    .m_axi_input_V_AWSIZE(grp_conv1_fu_226_m_axi_input_V_AWSIZE),
    .m_axi_input_V_AWBURST(grp_conv1_fu_226_m_axi_input_V_AWBURST),
    .m_axi_input_V_AWLOCK(grp_conv1_fu_226_m_axi_input_V_AWLOCK),
    .m_axi_input_V_AWCACHE(grp_conv1_fu_226_m_axi_input_V_AWCACHE),
    .m_axi_input_V_AWPROT(grp_conv1_fu_226_m_axi_input_V_AWPROT),
    .m_axi_input_V_AWQOS(grp_conv1_fu_226_m_axi_input_V_AWQOS),
    .m_axi_input_V_AWREGION(grp_conv1_fu_226_m_axi_input_V_AWREGION),
    .m_axi_input_V_AWUSER(grp_conv1_fu_226_m_axi_input_V_AWUSER),
    .m_axi_input_V_WVALID(grp_conv1_fu_226_m_axi_input_V_WVALID),
    .m_axi_input_V_WREADY(gmem_WREADY),
    .m_axi_input_V_WDATA(grp_conv1_fu_226_m_axi_input_V_WDATA),
    .m_axi_input_V_WSTRB(grp_conv1_fu_226_m_axi_input_V_WSTRB),
    .m_axi_input_V_WLAST(grp_conv1_fu_226_m_axi_input_V_WLAST),
    .m_axi_input_V_WID(grp_conv1_fu_226_m_axi_input_V_WID),
    .m_axi_input_V_WUSER(grp_conv1_fu_226_m_axi_input_V_WUSER),
    .m_axi_input_V_ARVALID(grp_conv1_fu_226_m_axi_input_V_ARVALID),
    .m_axi_input_V_ARREADY(gmem_ARREADY),
    .m_axi_input_V_ARADDR(grp_conv1_fu_226_m_axi_input_V_ARADDR),
    .m_axi_input_V_ARID(grp_conv1_fu_226_m_axi_input_V_ARID),
    .m_axi_input_V_ARLEN(grp_conv1_fu_226_m_axi_input_V_ARLEN),
    .m_axi_input_V_ARSIZE(grp_conv1_fu_226_m_axi_input_V_ARSIZE),
    .m_axi_input_V_ARBURST(grp_conv1_fu_226_m_axi_input_V_ARBURST),
    .m_axi_input_V_ARLOCK(grp_conv1_fu_226_m_axi_input_V_ARLOCK),
    .m_axi_input_V_ARCACHE(grp_conv1_fu_226_m_axi_input_V_ARCACHE),
    .m_axi_input_V_ARPROT(grp_conv1_fu_226_m_axi_input_V_ARPROT),
    .m_axi_input_V_ARQOS(grp_conv1_fu_226_m_axi_input_V_ARQOS),
    .m_axi_input_V_ARREGION(grp_conv1_fu_226_m_axi_input_V_ARREGION),
    .m_axi_input_V_ARUSER(grp_conv1_fu_226_m_axi_input_V_ARUSER),
    .m_axi_input_V_RVALID(gmem_RVALID),
    .m_axi_input_V_RREADY(grp_conv1_fu_226_m_axi_input_V_RREADY),
    .m_axi_input_V_RDATA(gmem_RDATA),
    .m_axi_input_V_RLAST(gmem_RLAST),
    .m_axi_input_V_RID(gmem_RID),
    .m_axi_input_V_RUSER(gmem_RUSER),
    .m_axi_input_V_RRESP(gmem_RRESP),
    .m_axi_input_V_BVALID(gmem_BVALID),
    .m_axi_input_V_BREADY(grp_conv1_fu_226_m_axi_input_V_BREADY),
    .m_axi_input_V_BRESP(gmem_BRESP),
    .m_axi_input_V_BID(gmem_BID),
    .m_axi_input_V_BUSER(gmem_BUSER),
    .input_V_offset(input_V_read_reg_312),
    .outputConv_V_offset(outputConv_V_read_reg_306),
    .weight_V_offset(weight_V_read_reg_301),
    .bias_V_offset(bias_V_read_reg_296)
);

pool grp_pool_fu_236(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_pool_fu_236_ap_start),
    .ap_done(grp_pool_fu_236_ap_done),
    .ap_idle(grp_pool_fu_236_ap_idle),
    .ap_ready(grp_pool_fu_236_ap_ready),
    .m_axi_input_V_AWVALID(grp_pool_fu_236_m_axi_input_V_AWVALID),
    .m_axi_input_V_AWREADY(gmem_AWREADY),
    .m_axi_input_V_AWADDR(grp_pool_fu_236_m_axi_input_V_AWADDR),
    .m_axi_input_V_AWID(grp_pool_fu_236_m_axi_input_V_AWID),
    .m_axi_input_V_AWLEN(grp_pool_fu_236_m_axi_input_V_AWLEN),
    .m_axi_input_V_AWSIZE(grp_pool_fu_236_m_axi_input_V_AWSIZE),
    .m_axi_input_V_AWBURST(grp_pool_fu_236_m_axi_input_V_AWBURST),
    .m_axi_input_V_AWLOCK(grp_pool_fu_236_m_axi_input_V_AWLOCK),
    .m_axi_input_V_AWCACHE(grp_pool_fu_236_m_axi_input_V_AWCACHE),
    .m_axi_input_V_AWPROT(grp_pool_fu_236_m_axi_input_V_AWPROT),
    .m_axi_input_V_AWQOS(grp_pool_fu_236_m_axi_input_V_AWQOS),
    .m_axi_input_V_AWREGION(grp_pool_fu_236_m_axi_input_V_AWREGION),
    .m_axi_input_V_AWUSER(grp_pool_fu_236_m_axi_input_V_AWUSER),
    .m_axi_input_V_WVALID(grp_pool_fu_236_m_axi_input_V_WVALID),
    .m_axi_input_V_WREADY(gmem_WREADY),
    .m_axi_input_V_WDATA(grp_pool_fu_236_m_axi_input_V_WDATA),
    .m_axi_input_V_WSTRB(grp_pool_fu_236_m_axi_input_V_WSTRB),
    .m_axi_input_V_WLAST(grp_pool_fu_236_m_axi_input_V_WLAST),
    .m_axi_input_V_WID(grp_pool_fu_236_m_axi_input_V_WID),
    .m_axi_input_V_WUSER(grp_pool_fu_236_m_axi_input_V_WUSER),
    .m_axi_input_V_ARVALID(grp_pool_fu_236_m_axi_input_V_ARVALID),
    .m_axi_input_V_ARREADY(gmem_ARREADY),
    .m_axi_input_V_ARADDR(grp_pool_fu_236_m_axi_input_V_ARADDR),
    .m_axi_input_V_ARID(grp_pool_fu_236_m_axi_input_V_ARID),
    .m_axi_input_V_ARLEN(grp_pool_fu_236_m_axi_input_V_ARLEN),
    .m_axi_input_V_ARSIZE(grp_pool_fu_236_m_axi_input_V_ARSIZE),
    .m_axi_input_V_ARBURST(grp_pool_fu_236_m_axi_input_V_ARBURST),
    .m_axi_input_V_ARLOCK(grp_pool_fu_236_m_axi_input_V_ARLOCK),
    .m_axi_input_V_ARCACHE(grp_pool_fu_236_m_axi_input_V_ARCACHE),
    .m_axi_input_V_ARPROT(grp_pool_fu_236_m_axi_input_V_ARPROT),
    .m_axi_input_V_ARQOS(grp_pool_fu_236_m_axi_input_V_ARQOS),
    .m_axi_input_V_ARREGION(grp_pool_fu_236_m_axi_input_V_ARREGION),
    .m_axi_input_V_ARUSER(grp_pool_fu_236_m_axi_input_V_ARUSER),
    .m_axi_input_V_RVALID(gmem_RVALID),
    .m_axi_input_V_RREADY(grp_pool_fu_236_m_axi_input_V_RREADY),
    .m_axi_input_V_RDATA(gmem_RDATA),
    .m_axi_input_V_RLAST(gmem_RLAST),
    .m_axi_input_V_RID(gmem_RID),
    .m_axi_input_V_RUSER(gmem_RUSER),
    .m_axi_input_V_RRESP(gmem_RRESP),
    .m_axi_input_V_BVALID(gmem_BVALID),
    .m_axi_input_V_BREADY(grp_pool_fu_236_m_axi_input_V_BREADY),
    .m_axi_input_V_BRESP(gmem_BRESP),
    .m_axi_input_V_BID(gmem_BID),
    .m_axi_input_V_BUSER(gmem_BUSER),
    .input_V_offset(grp_pool_fu_236_input_V_offset),
    .outputPool_V_offset(grp_pool_fu_236_outputPool_V_offset),
    .Cin(grp_pool_fu_236_Cin),
    .H(grp_pool_fu_236_H),
    .W(grp_pool_fu_236_W)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_conv1_fu_226_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state2)) begin
            grp_conv1_fu_226_ap_start_reg <= 1'b1;
        end else if ((grp_conv1_fu_226_ap_ready == 1'b1)) begin
            grp_conv1_fu_226_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_conv2_fu_206_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state6)) begin
            grp_conv2_fu_206_ap_start_reg <= 1'b1;
        end else if ((grp_conv2_fu_206_ap_ready == 1'b1)) begin
            grp_conv2_fu_206_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_dense_fu_216_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state10)) begin
            grp_dense_fu_216_ap_start_reg <= 1'b1;
        end else if ((grp_dense_fu_216_ap_ready == 1'b1)) begin
            grp_dense_fu_216_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_pool_fu_236_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state4))) begin
            grp_pool_fu_236_ap_start_reg <= 1'b1;
        end else if ((grp_pool_fu_236_ap_ready == 1'b1)) begin
            grp_pool_fu_236_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        bias2_V_read_reg_280 <= bias2_V;
        bias_V_read_reg_296 <= bias_V;
        fcBias_V_read_reg_253 <= fcBias_V;
        fcWeight_V_read_reg_258 <= fcWeight_V;
        input_V_read_reg_312 <= input_V;
        outputConv2_V_read_reg_274 <= outputConv2_V;
        outputConv_V_read_reg_306 <= outputConv_V;
        outputDense_V_read_reg_263 <= outputDense_V;
        outputPool2_V_read_reg_268 <= outputPool2_V;
        outputPool_V_read_reg_290 <= outputPool_V;
        weight2_V_read_reg_285 <= weight2_V;
        weight_V_read_reg_301 <= weight_V;
    end
end

always @ (*) begin
    if (((grp_dense_fu_216_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((grp_dense_fu_216_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state4))) begin
        gmem_ARADDR = grp_pool_fu_236_m_axi_input_V_ARADDR;
    end else if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        gmem_ARADDR = grp_conv1_fu_226_m_axi_input_V_ARADDR;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10))) begin
        gmem_ARADDR = grp_dense_fu_216_m_axi_input_V_ARADDR;
    end else if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        gmem_ARADDR = grp_conv2_fu_206_m_axi_input_V_ARADDR;
    end else begin
        gmem_ARADDR = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state4))) begin
        gmem_ARBURST = grp_pool_fu_236_m_axi_input_V_ARBURST;
    end else if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        gmem_ARBURST = grp_conv1_fu_226_m_axi_input_V_ARBURST;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10))) begin
        gmem_ARBURST = grp_dense_fu_216_m_axi_input_V_ARBURST;
    end else if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        gmem_ARBURST = grp_conv2_fu_206_m_axi_input_V_ARBURST;
    end else begin
        gmem_ARBURST = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state4))) begin
        gmem_ARCACHE = grp_pool_fu_236_m_axi_input_V_ARCACHE;
    end else if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        gmem_ARCACHE = grp_conv1_fu_226_m_axi_input_V_ARCACHE;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10))) begin
        gmem_ARCACHE = grp_dense_fu_216_m_axi_input_V_ARCACHE;
    end else if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        gmem_ARCACHE = grp_conv2_fu_206_m_axi_input_V_ARCACHE;
    end else begin
        gmem_ARCACHE = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state4))) begin
        gmem_ARID = grp_pool_fu_236_m_axi_input_V_ARID;
    end else if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        gmem_ARID = grp_conv1_fu_226_m_axi_input_V_ARID;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10))) begin
        gmem_ARID = grp_dense_fu_216_m_axi_input_V_ARID;
    end else if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        gmem_ARID = grp_conv2_fu_206_m_axi_input_V_ARID;
    end else begin
        gmem_ARID = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state4))) begin
        gmem_ARLEN = grp_pool_fu_236_m_axi_input_V_ARLEN;
    end else if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        gmem_ARLEN = grp_conv1_fu_226_m_axi_input_V_ARLEN;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10))) begin
        gmem_ARLEN = grp_dense_fu_216_m_axi_input_V_ARLEN;
    end else if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        gmem_ARLEN = grp_conv2_fu_206_m_axi_input_V_ARLEN;
    end else begin
        gmem_ARLEN = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state4))) begin
        gmem_ARLOCK = grp_pool_fu_236_m_axi_input_V_ARLOCK;
    end else if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        gmem_ARLOCK = grp_conv1_fu_226_m_axi_input_V_ARLOCK;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10))) begin
        gmem_ARLOCK = grp_dense_fu_216_m_axi_input_V_ARLOCK;
    end else if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        gmem_ARLOCK = grp_conv2_fu_206_m_axi_input_V_ARLOCK;
    end else begin
        gmem_ARLOCK = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state4))) begin
        gmem_ARPROT = grp_pool_fu_236_m_axi_input_V_ARPROT;
    end else if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        gmem_ARPROT = grp_conv1_fu_226_m_axi_input_V_ARPROT;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10))) begin
        gmem_ARPROT = grp_dense_fu_216_m_axi_input_V_ARPROT;
    end else if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        gmem_ARPROT = grp_conv2_fu_206_m_axi_input_V_ARPROT;
    end else begin
        gmem_ARPROT = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state4))) begin
        gmem_ARQOS = grp_pool_fu_236_m_axi_input_V_ARQOS;
    end else if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        gmem_ARQOS = grp_conv1_fu_226_m_axi_input_V_ARQOS;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10))) begin
        gmem_ARQOS = grp_dense_fu_216_m_axi_input_V_ARQOS;
    end else if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        gmem_ARQOS = grp_conv2_fu_206_m_axi_input_V_ARQOS;
    end else begin
        gmem_ARQOS = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state4))) begin
        gmem_ARREGION = grp_pool_fu_236_m_axi_input_V_ARREGION;
    end else if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        gmem_ARREGION = grp_conv1_fu_226_m_axi_input_V_ARREGION;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10))) begin
        gmem_ARREGION = grp_dense_fu_216_m_axi_input_V_ARREGION;
    end else if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        gmem_ARREGION = grp_conv2_fu_206_m_axi_input_V_ARREGION;
    end else begin
        gmem_ARREGION = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state4))) begin
        gmem_ARSIZE = grp_pool_fu_236_m_axi_input_V_ARSIZE;
    end else if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        gmem_ARSIZE = grp_conv1_fu_226_m_axi_input_V_ARSIZE;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10))) begin
        gmem_ARSIZE = grp_dense_fu_216_m_axi_input_V_ARSIZE;
    end else if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        gmem_ARSIZE = grp_conv2_fu_206_m_axi_input_V_ARSIZE;
    end else begin
        gmem_ARSIZE = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state4))) begin
        gmem_ARUSER = grp_pool_fu_236_m_axi_input_V_ARUSER;
    end else if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        gmem_ARUSER = grp_conv1_fu_226_m_axi_input_V_ARUSER;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10))) begin
        gmem_ARUSER = grp_dense_fu_216_m_axi_input_V_ARUSER;
    end else if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        gmem_ARUSER = grp_conv2_fu_206_m_axi_input_V_ARUSER;
    end else begin
        gmem_ARUSER = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state4))) begin
        gmem_ARVALID = grp_pool_fu_236_m_axi_input_V_ARVALID;
    end else if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        gmem_ARVALID = grp_conv1_fu_226_m_axi_input_V_ARVALID;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10))) begin
        gmem_ARVALID = grp_dense_fu_216_m_axi_input_V_ARVALID;
    end else if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        gmem_ARVALID = grp_conv2_fu_206_m_axi_input_V_ARVALID;
    end else begin
        gmem_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state4))) begin
        gmem_AWADDR = grp_pool_fu_236_m_axi_input_V_AWADDR;
    end else if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        gmem_AWADDR = grp_conv1_fu_226_m_axi_input_V_AWADDR;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10))) begin
        gmem_AWADDR = grp_dense_fu_216_m_axi_input_V_AWADDR;
    end else if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        gmem_AWADDR = grp_conv2_fu_206_m_axi_input_V_AWADDR;
    end else begin
        gmem_AWADDR = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state4))) begin
        gmem_AWBURST = grp_pool_fu_236_m_axi_input_V_AWBURST;
    end else if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        gmem_AWBURST = grp_conv1_fu_226_m_axi_input_V_AWBURST;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10))) begin
        gmem_AWBURST = grp_dense_fu_216_m_axi_input_V_AWBURST;
    end else if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        gmem_AWBURST = grp_conv2_fu_206_m_axi_input_V_AWBURST;
    end else begin
        gmem_AWBURST = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state4))) begin
        gmem_AWCACHE = grp_pool_fu_236_m_axi_input_V_AWCACHE;
    end else if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        gmem_AWCACHE = grp_conv1_fu_226_m_axi_input_V_AWCACHE;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10))) begin
        gmem_AWCACHE = grp_dense_fu_216_m_axi_input_V_AWCACHE;
    end else if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        gmem_AWCACHE = grp_conv2_fu_206_m_axi_input_V_AWCACHE;
    end else begin
        gmem_AWCACHE = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state4))) begin
        gmem_AWID = grp_pool_fu_236_m_axi_input_V_AWID;
    end else if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        gmem_AWID = grp_conv1_fu_226_m_axi_input_V_AWID;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10))) begin
        gmem_AWID = grp_dense_fu_216_m_axi_input_V_AWID;
    end else if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        gmem_AWID = grp_conv2_fu_206_m_axi_input_V_AWID;
    end else begin
        gmem_AWID = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state4))) begin
        gmem_AWLEN = grp_pool_fu_236_m_axi_input_V_AWLEN;
    end else if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        gmem_AWLEN = grp_conv1_fu_226_m_axi_input_V_AWLEN;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10))) begin
        gmem_AWLEN = grp_dense_fu_216_m_axi_input_V_AWLEN;
    end else if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        gmem_AWLEN = grp_conv2_fu_206_m_axi_input_V_AWLEN;
    end else begin
        gmem_AWLEN = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state4))) begin
        gmem_AWLOCK = grp_pool_fu_236_m_axi_input_V_AWLOCK;
    end else if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        gmem_AWLOCK = grp_conv1_fu_226_m_axi_input_V_AWLOCK;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10))) begin
        gmem_AWLOCK = grp_dense_fu_216_m_axi_input_V_AWLOCK;
    end else if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        gmem_AWLOCK = grp_conv2_fu_206_m_axi_input_V_AWLOCK;
    end else begin
        gmem_AWLOCK = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state4))) begin
        gmem_AWPROT = grp_pool_fu_236_m_axi_input_V_AWPROT;
    end else if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        gmem_AWPROT = grp_conv1_fu_226_m_axi_input_V_AWPROT;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10))) begin
        gmem_AWPROT = grp_dense_fu_216_m_axi_input_V_AWPROT;
    end else if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        gmem_AWPROT = grp_conv2_fu_206_m_axi_input_V_AWPROT;
    end else begin
        gmem_AWPROT = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state4))) begin
        gmem_AWQOS = grp_pool_fu_236_m_axi_input_V_AWQOS;
    end else if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        gmem_AWQOS = grp_conv1_fu_226_m_axi_input_V_AWQOS;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10))) begin
        gmem_AWQOS = grp_dense_fu_216_m_axi_input_V_AWQOS;
    end else if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        gmem_AWQOS = grp_conv2_fu_206_m_axi_input_V_AWQOS;
    end else begin
        gmem_AWQOS = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state4))) begin
        gmem_AWREGION = grp_pool_fu_236_m_axi_input_V_AWREGION;
    end else if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        gmem_AWREGION = grp_conv1_fu_226_m_axi_input_V_AWREGION;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10))) begin
        gmem_AWREGION = grp_dense_fu_216_m_axi_input_V_AWREGION;
    end else if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        gmem_AWREGION = grp_conv2_fu_206_m_axi_input_V_AWREGION;
    end else begin
        gmem_AWREGION = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state4))) begin
        gmem_AWSIZE = grp_pool_fu_236_m_axi_input_V_AWSIZE;
    end else if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        gmem_AWSIZE = grp_conv1_fu_226_m_axi_input_V_AWSIZE;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10))) begin
        gmem_AWSIZE = grp_dense_fu_216_m_axi_input_V_AWSIZE;
    end else if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        gmem_AWSIZE = grp_conv2_fu_206_m_axi_input_V_AWSIZE;
    end else begin
        gmem_AWSIZE = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state4))) begin
        gmem_AWUSER = grp_pool_fu_236_m_axi_input_V_AWUSER;
    end else if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        gmem_AWUSER = grp_conv1_fu_226_m_axi_input_V_AWUSER;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10))) begin
        gmem_AWUSER = grp_dense_fu_216_m_axi_input_V_AWUSER;
    end else if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        gmem_AWUSER = grp_conv2_fu_206_m_axi_input_V_AWUSER;
    end else begin
        gmem_AWUSER = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state4))) begin
        gmem_AWVALID = grp_pool_fu_236_m_axi_input_V_AWVALID;
    end else if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        gmem_AWVALID = grp_conv1_fu_226_m_axi_input_V_AWVALID;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10))) begin
        gmem_AWVALID = grp_dense_fu_216_m_axi_input_V_AWVALID;
    end else if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        gmem_AWVALID = grp_conv2_fu_206_m_axi_input_V_AWVALID;
    end else begin
        gmem_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state4))) begin
        gmem_BREADY = grp_pool_fu_236_m_axi_input_V_BREADY;
    end else if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        gmem_BREADY = grp_conv1_fu_226_m_axi_input_V_BREADY;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10))) begin
        gmem_BREADY = grp_dense_fu_216_m_axi_input_V_BREADY;
    end else if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        gmem_BREADY = grp_conv2_fu_206_m_axi_input_V_BREADY;
    end else begin
        gmem_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state4))) begin
        gmem_RREADY = grp_pool_fu_236_m_axi_input_V_RREADY;
    end else if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        gmem_RREADY = grp_conv1_fu_226_m_axi_input_V_RREADY;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10))) begin
        gmem_RREADY = grp_dense_fu_216_m_axi_input_V_RREADY;
    end else if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        gmem_RREADY = grp_conv2_fu_206_m_axi_input_V_RREADY;
    end else begin
        gmem_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state4))) begin
        gmem_WDATA = grp_pool_fu_236_m_axi_input_V_WDATA;
    end else if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        gmem_WDATA = grp_conv1_fu_226_m_axi_input_V_WDATA;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10))) begin
        gmem_WDATA = grp_dense_fu_216_m_axi_input_V_WDATA;
    end else if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        gmem_WDATA = grp_conv2_fu_206_m_axi_input_V_WDATA;
    end else begin
        gmem_WDATA = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state4))) begin
        gmem_WID = grp_pool_fu_236_m_axi_input_V_WID;
    end else if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        gmem_WID = grp_conv1_fu_226_m_axi_input_V_WID;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10))) begin
        gmem_WID = grp_dense_fu_216_m_axi_input_V_WID;
    end else if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        gmem_WID = grp_conv2_fu_206_m_axi_input_V_WID;
    end else begin
        gmem_WID = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state4))) begin
        gmem_WLAST = grp_pool_fu_236_m_axi_input_V_WLAST;
    end else if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        gmem_WLAST = grp_conv1_fu_226_m_axi_input_V_WLAST;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10))) begin
        gmem_WLAST = grp_dense_fu_216_m_axi_input_V_WLAST;
    end else if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        gmem_WLAST = grp_conv2_fu_206_m_axi_input_V_WLAST;
    end else begin
        gmem_WLAST = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state4))) begin
        gmem_WSTRB = grp_pool_fu_236_m_axi_input_V_WSTRB;
    end else if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        gmem_WSTRB = grp_conv1_fu_226_m_axi_input_V_WSTRB;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10))) begin
        gmem_WSTRB = grp_dense_fu_216_m_axi_input_V_WSTRB;
    end else if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        gmem_WSTRB = grp_conv2_fu_206_m_axi_input_V_WSTRB;
    end else begin
        gmem_WSTRB = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state4))) begin
        gmem_WUSER = grp_pool_fu_236_m_axi_input_V_WUSER;
    end else if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        gmem_WUSER = grp_conv1_fu_226_m_axi_input_V_WUSER;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10))) begin
        gmem_WUSER = grp_dense_fu_216_m_axi_input_V_WUSER;
    end else if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        gmem_WUSER = grp_conv2_fu_206_m_axi_input_V_WUSER;
    end else begin
        gmem_WUSER = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state4))) begin
        gmem_WVALID = grp_pool_fu_236_m_axi_input_V_WVALID;
    end else if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        gmem_WVALID = grp_conv1_fu_226_m_axi_input_V_WVALID;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10))) begin
        gmem_WVALID = grp_dense_fu_216_m_axi_input_V_WVALID;
    end else if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        gmem_WVALID = grp_conv2_fu_206_m_axi_input_V_WVALID;
    end else begin
        gmem_WVALID = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_pool_fu_236_Cin = 6'd16;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_pool_fu_236_Cin = 6'd8;
    end else begin
        grp_pool_fu_236_Cin = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_pool_fu_236_H = 6'd14;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_pool_fu_236_H = 6'd28;
    end else begin
        grp_pool_fu_236_H = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_pool_fu_236_W = 6'd14;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_pool_fu_236_W = 6'd28;
    end else begin
        grp_pool_fu_236_W = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_pool_fu_236_input_V_offset = outputConv2_V_read_reg_274;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_pool_fu_236_input_V_offset = outputConv_V_read_reg_306;
    end else begin
        grp_pool_fu_236_input_V_offset = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_pool_fu_236_outputPool_V_offset = outputPool2_V_read_reg_268;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_pool_fu_236_outputPool_V_offset = outputPool_V_read_reg_290;
    end else begin
        grp_pool_fu_236_outputPool_V_offset = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((grp_conv1_fu_226_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((grp_pool_fu_236_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if (((grp_conv2_fu_206_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            if (((grp_pool_fu_236_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            if (((grp_dense_fu_216_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign grp_conv1_fu_226_ap_start = grp_conv1_fu_226_ap_start_reg;

assign grp_conv2_fu_206_ap_start = grp_conv2_fu_206_ap_start_reg;

assign grp_dense_fu_216_ap_start = grp_dense_fu_216_ap_start_reg;

assign grp_pool_fu_236_ap_start = grp_pool_fu_236_ap_start_reg;

endmodule //top

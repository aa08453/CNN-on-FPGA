// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _pool_HH_
#define _pool_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct pool : public sc_module {
    // Port declarations 56
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > m_axi_input_V_AWVALID;
    sc_in< sc_logic > m_axi_input_V_AWREADY;
    sc_out< sc_lv<32> > m_axi_input_V_AWADDR;
    sc_out< sc_lv<1> > m_axi_input_V_AWID;
    sc_out< sc_lv<32> > m_axi_input_V_AWLEN;
    sc_out< sc_lv<3> > m_axi_input_V_AWSIZE;
    sc_out< sc_lv<2> > m_axi_input_V_AWBURST;
    sc_out< sc_lv<2> > m_axi_input_V_AWLOCK;
    sc_out< sc_lv<4> > m_axi_input_V_AWCACHE;
    sc_out< sc_lv<3> > m_axi_input_V_AWPROT;
    sc_out< sc_lv<4> > m_axi_input_V_AWQOS;
    sc_out< sc_lv<4> > m_axi_input_V_AWREGION;
    sc_out< sc_lv<1> > m_axi_input_V_AWUSER;
    sc_out< sc_logic > m_axi_input_V_WVALID;
    sc_in< sc_logic > m_axi_input_V_WREADY;
    sc_out< sc_lv<8> > m_axi_input_V_WDATA;
    sc_out< sc_lv<1> > m_axi_input_V_WSTRB;
    sc_out< sc_logic > m_axi_input_V_WLAST;
    sc_out< sc_lv<1> > m_axi_input_V_WID;
    sc_out< sc_lv<1> > m_axi_input_V_WUSER;
    sc_out< sc_logic > m_axi_input_V_ARVALID;
    sc_in< sc_logic > m_axi_input_V_ARREADY;
    sc_out< sc_lv<32> > m_axi_input_V_ARADDR;
    sc_out< sc_lv<1> > m_axi_input_V_ARID;
    sc_out< sc_lv<32> > m_axi_input_V_ARLEN;
    sc_out< sc_lv<3> > m_axi_input_V_ARSIZE;
    sc_out< sc_lv<2> > m_axi_input_V_ARBURST;
    sc_out< sc_lv<2> > m_axi_input_V_ARLOCK;
    sc_out< sc_lv<4> > m_axi_input_V_ARCACHE;
    sc_out< sc_lv<3> > m_axi_input_V_ARPROT;
    sc_out< sc_lv<4> > m_axi_input_V_ARQOS;
    sc_out< sc_lv<4> > m_axi_input_V_ARREGION;
    sc_out< sc_lv<1> > m_axi_input_V_ARUSER;
    sc_in< sc_logic > m_axi_input_V_RVALID;
    sc_out< sc_logic > m_axi_input_V_RREADY;
    sc_in< sc_lv<8> > m_axi_input_V_RDATA;
    sc_in< sc_logic > m_axi_input_V_RLAST;
    sc_in< sc_lv<1> > m_axi_input_V_RID;
    sc_in< sc_lv<1> > m_axi_input_V_RUSER;
    sc_in< sc_lv<2> > m_axi_input_V_RRESP;
    sc_in< sc_logic > m_axi_input_V_BVALID;
    sc_out< sc_logic > m_axi_input_V_BREADY;
    sc_in< sc_lv<2> > m_axi_input_V_BRESP;
    sc_in< sc_lv<1> > m_axi_input_V_BID;
    sc_in< sc_lv<1> > m_axi_input_V_BUSER;
    sc_in< sc_lv<32> > input_V_offset;
    sc_in< sc_lv<32> > outputPool_V_offset;
    sc_in< sc_lv<6> > Cin;
    sc_in< sc_lv<6> > H;
    sc_in< sc_lv<6> > W;


    // Module declarations
    pool(sc_module_name name);
    SC_HAS_PROCESS(pool);

    ~pool();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<48> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > input_V_blk_n_AR;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_logic > input_V_blk_n_R;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_logic > ap_CS_fsm_state15;
    sc_signal< sc_logic > ap_CS_fsm_state22;
    sc_signal< sc_logic > ap_CS_fsm_state16;
    sc_signal< sc_logic > ap_CS_fsm_state23;
    sc_signal< sc_logic > ap_CS_fsm_state25;
    sc_signal< sc_logic > ap_CS_fsm_state32;
    sc_signal< sc_logic > ap_CS_fsm_state26;
    sc_signal< sc_logic > ap_CS_fsm_state33;
    sc_signal< sc_logic > ap_CS_fsm_state35;
    sc_signal< sc_logic > ap_CS_fsm_state42;
    sc_signal< sc_logic > input_V_blk_n_AW;
    sc_signal< sc_logic > input_V_blk_n_W;
    sc_signal< sc_logic > ap_CS_fsm_state43;
    sc_signal< sc_logic > input_V_blk_n_B;
    sc_signal< sc_logic > ap_CS_fsm_state48;
    sc_signal< sc_lv<4> > Hout_fu_275_p2;
    sc_signal< sc_lv<4> > Hout_reg_669;
    sc_signal< sc_lv<8> > zext_ln15_fu_281_p1;
    sc_signal< sc_lv<8> > zext_ln15_reg_674;
    sc_signal< sc_lv<4> > Wout_fu_305_p2;
    sc_signal< sc_lv<4> > Wout_reg_679;
    sc_signal< sc_lv<12> > zext_ln12_fu_311_p1;
    sc_signal< sc_lv<12> > zext_ln12_reg_684;
    sc_signal< sc_lv<9> > zext_ln17_fu_315_p1;
    sc_signal< sc_lv<9> > zext_ln17_reg_689;
    sc_signal< sc_lv<14> > zext_ln17_1_fu_319_p1;
    sc_signal< sc_lv<14> > zext_ln17_1_reg_694;
    sc_signal< sc_lv<33> > sext_ln17_fu_323_p1;
    sc_signal< sc_lv<33> > sext_ln17_reg_700;
    sc_signal< sc_lv<33> > sext_ln14_fu_327_p1;
    sc_signal< sc_lv<33> > sext_ln14_reg_705;
    sc_signal< sc_lv<9> > add_ln15_fu_331_p2;
    sc_signal< sc_lv<9> > add_ln15_reg_716;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<5> > co_fu_349_p2;
    sc_signal< sc_lv<5> > co_reg_724;
    sc_signal< sc_lv<8> > mul_ln15_fu_355_p2;
    sc_signal< sc_lv<8> > mul_ln15_reg_729;
    sc_signal< sc_lv<1> > icmp_ln14_fu_344_p2;
    sc_signal< sc_lv<4> > h_fu_369_p2;
    sc_signal< sc_lv<4> > h_reg_737;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<14> > mul_ln17_fu_397_p2;
    sc_signal< sc_lv<14> > mul_ln17_reg_742;
    sc_signal< sc_lv<1> > icmp_ln15_fu_364_p2;
    sc_signal< sc_lv<12> > mul_ln32_fu_411_p2;
    sc_signal< sc_lv<12> > mul_ln32_reg_747;
    sc_signal< sc_lv<14> > mul_ln27_fu_426_p2;
    sc_signal< sc_lv<14> > mul_ln27_reg_752;
    sc_signal< sc_lv<4> > w_fu_440_p2;
    sc_signal< sc_lv<4> > w_reg_760;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<14> > add_ln17_1_fu_458_p2;
    sc_signal< sc_lv<14> > add_ln17_1_reg_765;
    sc_signal< sc_lv<1> > icmp_ln16_fu_435_p2;
    sc_signal< sc_lv<32> > outputPool_V_addr_reg_771;
    sc_signal< sc_lv<14> > add_ln27_2_fu_482_p2;
    sc_signal< sc_lv<14> > add_ln27_2_reg_777;
    sc_signal< sc_lv<32> > outputPool_V_addr26_reg_784;
    sc_signal< sc_lv<14> > add_ln27_fu_511_p2;
    sc_signal< sc_lv<14> > add_ln27_reg_790;
    sc_signal< sc_lv<32> > outputPool_V_addr_1_reg_795;
    sc_signal< sc_lv<8> > max_V_reg_801;
    sc_signal< sc_lv<8> > outputPool_V_addr_1_s_reg_806;
    sc_signal< sc_lv<14> > select_ln28_fu_539_p3;
    sc_signal< sc_lv<14> > select_ln28_reg_811;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< sc_lv<32> > outputPool_V_addr_2_reg_816;
    sc_signal< sc_lv<32> > outputPool_V_addr_3_reg_822;
    sc_signal< sc_lv<8> > max_V_1_reg_828;
    sc_signal< sc_lv<8> > outputPool_V_addr_3_s_reg_833;
    sc_signal< sc_lv<14> > select_ln28_1_fu_586_p3;
    sc_signal< sc_lv<14> > select_ln28_1_reg_838;
    sc_signal< sc_logic > ap_CS_fsm_state24;
    sc_signal< sc_lv<32> > outputPool_V_addr_4_reg_843;
    sc_signal< sc_lv<14> > add_ln27_3_fu_611_p2;
    sc_signal< sc_lv<14> > add_ln27_3_reg_849;
    sc_signal< sc_lv<32> > outputPool_V_addr_5_reg_854;
    sc_signal< sc_lv<8> > max_V_2_reg_860;
    sc_signal< sc_lv<8> > outputPool_V_addr_5_s_reg_865;
    sc_signal< sc_lv<32> > outputPool_V_addr_6_reg_870;
    sc_signal< sc_logic > ap_CS_fsm_state34;
    sc_signal< sc_lv<8> > max_V_3_reg_876;
    sc_signal< sc_lv<5> > co_0_reg_210;
    sc_signal< sc_lv<9> > phi_mul_reg_221;
    sc_signal< sc_lv<4> > h_0_reg_233;
    sc_signal< sc_lv<4> > w_0_reg_244;
    sc_signal< sc_lv<64> > sext_ln17_1_fu_472_p1;
    sc_signal< sc_lv<64> > sext_ln203_fu_501_p1;
    sc_signal< sc_lv<64> > sext_ln1494_fu_525_p1;
    sc_signal< sc_lv<64> > sext_ln1494_1_fu_554_p1;
    sc_signal< sc_lv<64> > sext_ln1494_2_fu_572_p1;
    sc_signal< sc_lv<64> > sext_ln1494_3_fu_601_p1;
    sc_signal< sc_lv<64> > sext_ln1494_4_fu_625_p1;
    sc_signal< sc_lv<64> > sext_ln1494_5_fu_654_p1;
    sc_signal< sc_lv<5> > trunc_ln11_fu_255_p1;
    sc_signal< sc_lv<5> > add_ln11_fu_259_p2;
    sc_signal< sc_lv<4> > trunc_ln11_1_fu_265_p4;
    sc_signal< sc_lv<5> > trunc_ln12_fu_285_p1;
    sc_signal< sc_lv<5> > add_ln12_fu_289_p2;
    sc_signal< sc_lv<4> > trunc_ln12_1_fu_295_p4;
    sc_signal< sc_lv<6> > zext_ln14_fu_340_p1;
    sc_signal< sc_lv<4> > mul_ln15_fu_355_p0;
    sc_signal< sc_lv<5> > mul_ln15_fu_355_p1;
    sc_signal< sc_lv<5> > shl_ln_fu_375_p3;
    sc_signal< sc_lv<9> > zext_ln17_2_fu_383_p1;
    sc_signal< sc_lv<9> > in_h_fu_387_p2;
    sc_signal< sc_lv<9> > mul_ln17_fu_397_p0;
    sc_signal< sc_lv<6> > mul_ln17_fu_397_p1;
    sc_signal< sc_lv<8> > zext_ln15_2_fu_360_p1;
    sc_signal< sc_lv<8> > add_ln32_fu_402_p2;
    sc_signal< sc_lv<8> > mul_ln32_fu_411_p0;
    sc_signal< sc_lv<4> > mul_ln32_fu_411_p1;
    sc_signal< sc_lv<9> > add_ln27_1_fu_416_p2;
    sc_signal< sc_lv<9> > mul_ln27_fu_426_p0;
    sc_signal< sc_lv<6> > mul_ln27_fu_426_p1;
    sc_signal< sc_lv<5> > shl_ln17_1_fu_446_p3;
    sc_signal< sc_lv<14> > zext_ln17_4_fu_454_p1;
    sc_signal< sc_lv<33> > zext_ln17_5_fu_463_p1;
    sc_signal< sc_lv<33> > add_ln17_2_fu_467_p2;
    sc_signal< sc_lv<12> > zext_ln16_fu_431_p1;
    sc_signal< sc_lv<12> > outIdx_fu_487_p2;
    sc_signal< sc_lv<33> > zext_ln203_fu_492_p1;
    sc_signal< sc_lv<33> > add_ln203_fu_496_p2;
    sc_signal< sc_lv<33> > zext_ln1494_fu_516_p1;
    sc_signal< sc_lv<33> > add_ln1494_fu_520_p2;
    sc_signal< sc_lv<1> > icmp_ln1494_fu_535_p2;
    sc_signal< sc_lv<33> > zext_ln1494_1_fu_545_p1;
    sc_signal< sc_lv<33> > add_ln1494_1_fu_549_p2;
    sc_signal< sc_lv<33> > zext_ln1494_2_fu_564_p1;
    sc_signal< sc_lv<33> > add_ln1494_2_fu_567_p2;
    sc_signal< sc_lv<1> > icmp_ln1494_1_fu_582_p2;
    sc_signal< sc_lv<33> > zext_ln1494_3_fu_592_p1;
    sc_signal< sc_lv<33> > add_ln1494_3_fu_596_p2;
    sc_signal< sc_lv<33> > zext_ln1494_4_fu_616_p1;
    sc_signal< sc_lv<33> > add_ln1494_4_fu_620_p2;
    sc_signal< sc_lv<1> > icmp_ln1494_2_fu_635_p2;
    sc_signal< sc_lv<14> > select_ln28_2_fu_639_p3;
    sc_signal< sc_lv<33> > zext_ln1494_5_fu_645_p1;
    sc_signal< sc_lv<33> > add_ln1494_5_fu_649_p2;
    sc_signal< sc_lv<48> > ap_NS_fsm;
    sc_signal< sc_lv<8> > mul_ln15_fu_355_p10;
    sc_signal< sc_lv<14> > mul_ln17_fu_397_p00;
    sc_signal< sc_lv<14> > mul_ln27_fu_426_p00;
    sc_signal< sc_lv<12> > mul_ln32_fu_411_p00;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<48> ap_ST_fsm_state1;
    static const sc_lv<48> ap_ST_fsm_state2;
    static const sc_lv<48> ap_ST_fsm_state3;
    static const sc_lv<48> ap_ST_fsm_state4;
    static const sc_lv<48> ap_ST_fsm_state5;
    static const sc_lv<48> ap_ST_fsm_state6;
    static const sc_lv<48> ap_ST_fsm_state7;
    static const sc_lv<48> ap_ST_fsm_state8;
    static const sc_lv<48> ap_ST_fsm_state9;
    static const sc_lv<48> ap_ST_fsm_state10;
    static const sc_lv<48> ap_ST_fsm_state11;
    static const sc_lv<48> ap_ST_fsm_state12;
    static const sc_lv<48> ap_ST_fsm_state13;
    static const sc_lv<48> ap_ST_fsm_state14;
    static const sc_lv<48> ap_ST_fsm_state15;
    static const sc_lv<48> ap_ST_fsm_state16;
    static const sc_lv<48> ap_ST_fsm_state17;
    static const sc_lv<48> ap_ST_fsm_state18;
    static const sc_lv<48> ap_ST_fsm_state19;
    static const sc_lv<48> ap_ST_fsm_state20;
    static const sc_lv<48> ap_ST_fsm_state21;
    static const sc_lv<48> ap_ST_fsm_state22;
    static const sc_lv<48> ap_ST_fsm_state23;
    static const sc_lv<48> ap_ST_fsm_state24;
    static const sc_lv<48> ap_ST_fsm_state25;
    static const sc_lv<48> ap_ST_fsm_state26;
    static const sc_lv<48> ap_ST_fsm_state27;
    static const sc_lv<48> ap_ST_fsm_state28;
    static const sc_lv<48> ap_ST_fsm_state29;
    static const sc_lv<48> ap_ST_fsm_state30;
    static const sc_lv<48> ap_ST_fsm_state31;
    static const sc_lv<48> ap_ST_fsm_state32;
    static const sc_lv<48> ap_ST_fsm_state33;
    static const sc_lv<48> ap_ST_fsm_state34;
    static const sc_lv<48> ap_ST_fsm_state35;
    static const sc_lv<48> ap_ST_fsm_state36;
    static const sc_lv<48> ap_ST_fsm_state37;
    static const sc_lv<48> ap_ST_fsm_state38;
    static const sc_lv<48> ap_ST_fsm_state39;
    static const sc_lv<48> ap_ST_fsm_state40;
    static const sc_lv<48> ap_ST_fsm_state41;
    static const sc_lv<48> ap_ST_fsm_state42;
    static const sc_lv<48> ap_ST_fsm_state43;
    static const sc_lv<48> ap_ST_fsm_state44;
    static const sc_lv<48> ap_ST_fsm_state45;
    static const sc_lv<48> ap_ST_fsm_state46;
    static const sc_lv<48> ap_ST_fsm_state47;
    static const sc_lv<48> ap_ST_fsm_state48;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_15;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_16;
    static const sc_lv<32> ap_const_lv32_18;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<32> ap_const_lv32_19;
    static const sc_lv<32> ap_const_lv32_20;
    static const sc_lv<32> ap_const_lv32_22;
    static const sc_lv<32> ap_const_lv32_29;
    static const sc_lv<32> ap_const_lv32_2A;
    static const sc_lv<32> ap_const_lv32_2F;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_21;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<5> ap_const_lv5_1E;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<9> ap_const_lv9_1;
    static const sc_lv<14> ap_const_lv14_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_Hout_fu_275_p2();
    void thread_Wout_fu_305_p2();
    void thread_add_ln11_fu_259_p2();
    void thread_add_ln12_fu_289_p2();
    void thread_add_ln1494_1_fu_549_p2();
    void thread_add_ln1494_2_fu_567_p2();
    void thread_add_ln1494_3_fu_596_p2();
    void thread_add_ln1494_4_fu_620_p2();
    void thread_add_ln1494_5_fu_649_p2();
    void thread_add_ln1494_fu_520_p2();
    void thread_add_ln15_fu_331_p2();
    void thread_add_ln17_1_fu_458_p2();
    void thread_add_ln17_2_fu_467_p2();
    void thread_add_ln203_fu_496_p2();
    void thread_add_ln27_1_fu_416_p2();
    void thread_add_ln27_2_fu_482_p2();
    void thread_add_ln27_3_fu_611_p2();
    void thread_add_ln27_fu_511_p2();
    void thread_add_ln32_fu_402_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state15();
    void thread_ap_CS_fsm_state16();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state22();
    void thread_ap_CS_fsm_state23();
    void thread_ap_CS_fsm_state24();
    void thread_ap_CS_fsm_state25();
    void thread_ap_CS_fsm_state26();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state32();
    void thread_ap_CS_fsm_state33();
    void thread_ap_CS_fsm_state34();
    void thread_ap_CS_fsm_state35();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state42();
    void thread_ap_CS_fsm_state43();
    void thread_ap_CS_fsm_state48();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_co_fu_349_p2();
    void thread_h_fu_369_p2();
    void thread_icmp_ln1494_1_fu_582_p2();
    void thread_icmp_ln1494_2_fu_635_p2();
    void thread_icmp_ln1494_fu_535_p2();
    void thread_icmp_ln14_fu_344_p2();
    void thread_icmp_ln15_fu_364_p2();
    void thread_icmp_ln16_fu_435_p2();
    void thread_in_h_fu_387_p2();
    void thread_input_V_blk_n_AR();
    void thread_input_V_blk_n_AW();
    void thread_input_V_blk_n_B();
    void thread_input_V_blk_n_R();
    void thread_input_V_blk_n_W();
    void thread_m_axi_input_V_ARADDR();
    void thread_m_axi_input_V_ARBURST();
    void thread_m_axi_input_V_ARCACHE();
    void thread_m_axi_input_V_ARID();
    void thread_m_axi_input_V_ARLEN();
    void thread_m_axi_input_V_ARLOCK();
    void thread_m_axi_input_V_ARPROT();
    void thread_m_axi_input_V_ARQOS();
    void thread_m_axi_input_V_ARREGION();
    void thread_m_axi_input_V_ARSIZE();
    void thread_m_axi_input_V_ARUSER();
    void thread_m_axi_input_V_ARVALID();
    void thread_m_axi_input_V_AWADDR();
    void thread_m_axi_input_V_AWBURST();
    void thread_m_axi_input_V_AWCACHE();
    void thread_m_axi_input_V_AWID();
    void thread_m_axi_input_V_AWLEN();
    void thread_m_axi_input_V_AWLOCK();
    void thread_m_axi_input_V_AWPROT();
    void thread_m_axi_input_V_AWQOS();
    void thread_m_axi_input_V_AWREGION();
    void thread_m_axi_input_V_AWSIZE();
    void thread_m_axi_input_V_AWUSER();
    void thread_m_axi_input_V_AWVALID();
    void thread_m_axi_input_V_BREADY();
    void thread_m_axi_input_V_RREADY();
    void thread_m_axi_input_V_WDATA();
    void thread_m_axi_input_V_WID();
    void thread_m_axi_input_V_WLAST();
    void thread_m_axi_input_V_WSTRB();
    void thread_m_axi_input_V_WUSER();
    void thread_m_axi_input_V_WVALID();
    void thread_mul_ln15_fu_355_p0();
    void thread_mul_ln15_fu_355_p1();
    void thread_mul_ln15_fu_355_p10();
    void thread_mul_ln15_fu_355_p2();
    void thread_mul_ln17_fu_397_p0();
    void thread_mul_ln17_fu_397_p00();
    void thread_mul_ln17_fu_397_p1();
    void thread_mul_ln17_fu_397_p2();
    void thread_mul_ln27_fu_426_p0();
    void thread_mul_ln27_fu_426_p00();
    void thread_mul_ln27_fu_426_p1();
    void thread_mul_ln27_fu_426_p2();
    void thread_mul_ln32_fu_411_p0();
    void thread_mul_ln32_fu_411_p00();
    void thread_mul_ln32_fu_411_p1();
    void thread_mul_ln32_fu_411_p2();
    void thread_outIdx_fu_487_p2();
    void thread_select_ln28_1_fu_586_p3();
    void thread_select_ln28_2_fu_639_p3();
    void thread_select_ln28_fu_539_p3();
    void thread_sext_ln1494_1_fu_554_p1();
    void thread_sext_ln1494_2_fu_572_p1();
    void thread_sext_ln1494_3_fu_601_p1();
    void thread_sext_ln1494_4_fu_625_p1();
    void thread_sext_ln1494_5_fu_654_p1();
    void thread_sext_ln1494_fu_525_p1();
    void thread_sext_ln14_fu_327_p1();
    void thread_sext_ln17_1_fu_472_p1();
    void thread_sext_ln17_fu_323_p1();
    void thread_sext_ln203_fu_501_p1();
    void thread_shl_ln17_1_fu_446_p3();
    void thread_shl_ln_fu_375_p3();
    void thread_trunc_ln11_1_fu_265_p4();
    void thread_trunc_ln11_fu_255_p1();
    void thread_trunc_ln12_1_fu_295_p4();
    void thread_trunc_ln12_fu_285_p1();
    void thread_w_fu_440_p2();
    void thread_zext_ln12_fu_311_p1();
    void thread_zext_ln1494_1_fu_545_p1();
    void thread_zext_ln1494_2_fu_564_p1();
    void thread_zext_ln1494_3_fu_592_p1();
    void thread_zext_ln1494_4_fu_616_p1();
    void thread_zext_ln1494_5_fu_645_p1();
    void thread_zext_ln1494_fu_516_p1();
    void thread_zext_ln14_fu_340_p1();
    void thread_zext_ln15_2_fu_360_p1();
    void thread_zext_ln15_fu_281_p1();
    void thread_zext_ln16_fu_431_p1();
    void thread_zext_ln17_1_fu_319_p1();
    void thread_zext_ln17_2_fu_383_p1();
    void thread_zext_ln17_4_fu_454_p1();
    void thread_zext_ln17_5_fu_463_p1();
    void thread_zext_ln17_fu_315_p1();
    void thread_zext_ln203_fu_492_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif

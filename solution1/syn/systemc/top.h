// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _top_HH_
#define _top_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "dense.h"
#include "conv2.h"
#include "conv1.h"
#include "pool.h"
#include "top_control_s_axi.h"
#include "top_gmem_m_axi.h"

namespace ap_rtl {

template<unsigned int C_M_AXI_GMEM_ADDR_WIDTH = 32,
         unsigned int C_M_AXI_GMEM_ID_WIDTH = 1,
         unsigned int C_M_AXI_GMEM_AWUSER_WIDTH = 1,
         unsigned int C_M_AXI_GMEM_DATA_WIDTH = 32,
         unsigned int C_M_AXI_GMEM_WUSER_WIDTH = 1,
         unsigned int C_M_AXI_GMEM_ARUSER_WIDTH = 1,
         unsigned int C_M_AXI_GMEM_RUSER_WIDTH = 1,
         unsigned int C_M_AXI_GMEM_BUSER_WIDTH = 1,
         unsigned int C_S_AXI_CONTROL_ADDR_WIDTH = 7,
         unsigned int C_S_AXI_CONTROL_DATA_WIDTH = 32>
struct top : public sc_module {
    // Port declarations 65
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_out< sc_logic > m_axi_gmem_AWVALID;
    sc_in< sc_logic > m_axi_gmem_AWREADY;
    sc_out< sc_uint<C_M_AXI_GMEM_ADDR_WIDTH> > m_axi_gmem_AWADDR;
    sc_out< sc_uint<C_M_AXI_GMEM_ID_WIDTH> > m_axi_gmem_AWID;
    sc_out< sc_lv<8> > m_axi_gmem_AWLEN;
    sc_out< sc_lv<3> > m_axi_gmem_AWSIZE;
    sc_out< sc_lv<2> > m_axi_gmem_AWBURST;
    sc_out< sc_lv<2> > m_axi_gmem_AWLOCK;
    sc_out< sc_lv<4> > m_axi_gmem_AWCACHE;
    sc_out< sc_lv<3> > m_axi_gmem_AWPROT;
    sc_out< sc_lv<4> > m_axi_gmem_AWQOS;
    sc_out< sc_lv<4> > m_axi_gmem_AWREGION;
    sc_out< sc_uint<C_M_AXI_GMEM_AWUSER_WIDTH> > m_axi_gmem_AWUSER;
    sc_out< sc_logic > m_axi_gmem_WVALID;
    sc_in< sc_logic > m_axi_gmem_WREADY;
    sc_out< sc_uint<C_M_AXI_GMEM_DATA_WIDTH> > m_axi_gmem_WDATA;
    sc_out< sc_uint<C_M_AXI_GMEM_DATA_WIDTH/8> > m_axi_gmem_WSTRB;
    sc_out< sc_logic > m_axi_gmem_WLAST;
    sc_out< sc_uint<C_M_AXI_GMEM_ID_WIDTH> > m_axi_gmem_WID;
    sc_out< sc_uint<C_M_AXI_GMEM_WUSER_WIDTH> > m_axi_gmem_WUSER;
    sc_out< sc_logic > m_axi_gmem_ARVALID;
    sc_in< sc_logic > m_axi_gmem_ARREADY;
    sc_out< sc_uint<C_M_AXI_GMEM_ADDR_WIDTH> > m_axi_gmem_ARADDR;
    sc_out< sc_uint<C_M_AXI_GMEM_ID_WIDTH> > m_axi_gmem_ARID;
    sc_out< sc_lv<8> > m_axi_gmem_ARLEN;
    sc_out< sc_lv<3> > m_axi_gmem_ARSIZE;
    sc_out< sc_lv<2> > m_axi_gmem_ARBURST;
    sc_out< sc_lv<2> > m_axi_gmem_ARLOCK;
    sc_out< sc_lv<4> > m_axi_gmem_ARCACHE;
    sc_out< sc_lv<3> > m_axi_gmem_ARPROT;
    sc_out< sc_lv<4> > m_axi_gmem_ARQOS;
    sc_out< sc_lv<4> > m_axi_gmem_ARREGION;
    sc_out< sc_uint<C_M_AXI_GMEM_ARUSER_WIDTH> > m_axi_gmem_ARUSER;
    sc_in< sc_logic > m_axi_gmem_RVALID;
    sc_out< sc_logic > m_axi_gmem_RREADY;
    sc_in< sc_uint<C_M_AXI_GMEM_DATA_WIDTH> > m_axi_gmem_RDATA;
    sc_in< sc_logic > m_axi_gmem_RLAST;
    sc_in< sc_uint<C_M_AXI_GMEM_ID_WIDTH> > m_axi_gmem_RID;
    sc_in< sc_uint<C_M_AXI_GMEM_RUSER_WIDTH> > m_axi_gmem_RUSER;
    sc_in< sc_lv<2> > m_axi_gmem_RRESP;
    sc_in< sc_logic > m_axi_gmem_BVALID;
    sc_out< sc_logic > m_axi_gmem_BREADY;
    sc_in< sc_lv<2> > m_axi_gmem_BRESP;
    sc_in< sc_uint<C_M_AXI_GMEM_ID_WIDTH> > m_axi_gmem_BID;
    sc_in< sc_uint<C_M_AXI_GMEM_BUSER_WIDTH> > m_axi_gmem_BUSER;
    sc_in< sc_logic > s_axi_control_AWVALID;
    sc_out< sc_logic > s_axi_control_AWREADY;
    sc_in< sc_uint<C_S_AXI_CONTROL_ADDR_WIDTH> > s_axi_control_AWADDR;
    sc_in< sc_logic > s_axi_control_WVALID;
    sc_out< sc_logic > s_axi_control_WREADY;
    sc_in< sc_uint<C_S_AXI_CONTROL_DATA_WIDTH> > s_axi_control_WDATA;
    sc_in< sc_uint<C_S_AXI_CONTROL_DATA_WIDTH/8> > s_axi_control_WSTRB;
    sc_in< sc_logic > s_axi_control_ARVALID;
    sc_out< sc_logic > s_axi_control_ARREADY;
    sc_in< sc_uint<C_S_AXI_CONTROL_ADDR_WIDTH> > s_axi_control_ARADDR;
    sc_out< sc_logic > s_axi_control_RVALID;
    sc_in< sc_logic > s_axi_control_RREADY;
    sc_out< sc_uint<C_S_AXI_CONTROL_DATA_WIDTH> > s_axi_control_RDATA;
    sc_out< sc_lv<2> > s_axi_control_RRESP;
    sc_out< sc_logic > s_axi_control_BVALID;
    sc_in< sc_logic > s_axi_control_BREADY;
    sc_out< sc_lv<2> > s_axi_control_BRESP;
    sc_out< sc_logic > interrupt;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    top(sc_module_name name);
    SC_HAS_PROCESS(top);

    ~top();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    top_control_s_axi<C_S_AXI_CONTROL_ADDR_WIDTH,C_S_AXI_CONTROL_DATA_WIDTH>* top_control_s_axi_U;
    top_gmem_m_axi<0,8,32,5,16,16,16,16,C_M_AXI_GMEM_ID_WIDTH,C_M_AXI_GMEM_ADDR_WIDTH,C_M_AXI_GMEM_DATA_WIDTH,C_M_AXI_GMEM_AWUSER_WIDTH,C_M_AXI_GMEM_ARUSER_WIDTH,C_M_AXI_GMEM_WUSER_WIDTH,C_M_AXI_GMEM_RUSER_WIDTH,C_M_AXI_GMEM_BUSER_WIDTH,C_M_AXI_GMEM_USER_VALUE,C_M_AXI_GMEM_PROT_VALUE,C_M_AXI_GMEM_CACHE_VALUE>* top_gmem_m_axi_U;
    dense* grp_dense_fu_188;
    conv2* grp_conv2_fu_198;
    conv1* grp_conv1_fu_208;
    pool* grp_pool_fu_218;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_logic > ap_start;
    sc_signal< sc_logic > ap_done;
    sc_signal< sc_logic > ap_idle;
    sc_signal< sc_lv<11> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > ap_ready;
    sc_signal< sc_lv<32> > input_V;
    sc_signal< sc_lv<32> > outputConv_V;
    sc_signal< sc_lv<32> > weight_V;
    sc_signal< sc_lv<32> > bias_V;
    sc_signal< sc_lv<32> > outputPool_V;
    sc_signal< sc_lv<32> > weight2_V;
    sc_signal< sc_lv<32> > bias2_V;
    sc_signal< sc_lv<32> > outputConv2_V;
    sc_signal< sc_lv<32> > outputPool2_V;
    sc_signal< sc_lv<32> > outputDense_V;
    sc_signal< sc_lv<32> > fcWeight_V;
    sc_signal< sc_lv<32> > fcBias_V;
    sc_signal< sc_logic > gmem_AWVALID;
    sc_signal< sc_logic > gmem_AWREADY;
    sc_signal< sc_lv<32> > gmem_AWADDR;
    sc_signal< sc_lv<1> > gmem_AWID;
    sc_signal< sc_lv<32> > gmem_AWLEN;
    sc_signal< sc_lv<3> > gmem_AWSIZE;
    sc_signal< sc_lv<2> > gmem_AWBURST;
    sc_signal< sc_lv<2> > gmem_AWLOCK;
    sc_signal< sc_lv<4> > gmem_AWCACHE;
    sc_signal< sc_lv<3> > gmem_AWPROT;
    sc_signal< sc_lv<4> > gmem_AWQOS;
    sc_signal< sc_lv<4> > gmem_AWREGION;
    sc_signal< sc_lv<1> > gmem_AWUSER;
    sc_signal< sc_logic > gmem_WVALID;
    sc_signal< sc_logic > gmem_WREADY;
    sc_signal< sc_lv<8> > gmem_WDATA;
    sc_signal< sc_lv<1> > gmem_WSTRB;
    sc_signal< sc_logic > gmem_WLAST;
    sc_signal< sc_lv<1> > gmem_WID;
    sc_signal< sc_lv<1> > gmem_WUSER;
    sc_signal< sc_logic > gmem_ARVALID;
    sc_signal< sc_logic > gmem_ARREADY;
    sc_signal< sc_lv<32> > gmem_ARADDR;
    sc_signal< sc_lv<1> > gmem_ARID;
    sc_signal< sc_lv<32> > gmem_ARLEN;
    sc_signal< sc_lv<3> > gmem_ARSIZE;
    sc_signal< sc_lv<2> > gmem_ARBURST;
    sc_signal< sc_lv<2> > gmem_ARLOCK;
    sc_signal< sc_lv<4> > gmem_ARCACHE;
    sc_signal< sc_lv<3> > gmem_ARPROT;
    sc_signal< sc_lv<4> > gmem_ARQOS;
    sc_signal< sc_lv<4> > gmem_ARREGION;
    sc_signal< sc_lv<1> > gmem_ARUSER;
    sc_signal< sc_logic > gmem_RVALID;
    sc_signal< sc_logic > gmem_RREADY;
    sc_signal< sc_lv<8> > gmem_RDATA;
    sc_signal< sc_logic > gmem_RLAST;
    sc_signal< sc_lv<1> > gmem_RID;
    sc_signal< sc_lv<1> > gmem_RUSER;
    sc_signal< sc_lv<2> > gmem_RRESP;
    sc_signal< sc_logic > gmem_BVALID;
    sc_signal< sc_logic > gmem_BREADY;
    sc_signal< sc_lv<2> > gmem_BRESP;
    sc_signal< sc_lv<1> > gmem_BID;
    sc_signal< sc_lv<1> > gmem_BUSER;
    sc_signal< sc_lv<32> > fcBias_V_read_reg_235;
    sc_signal< sc_lv<32> > fcWeight_V_read_reg_240;
    sc_signal< sc_lv<32> > outputDense_V_read_reg_245;
    sc_signal< sc_lv<32> > outputPool2_V_read_reg_250;
    sc_signal< sc_lv<32> > outputConv2_V_read_reg_256;
    sc_signal< sc_lv<32> > bias2_V_read_reg_262;
    sc_signal< sc_lv<32> > weight2_V_read_reg_267;
    sc_signal< sc_lv<32> > outputPool_V_read_reg_272;
    sc_signal< sc_lv<32> > bias_V_read_reg_278;
    sc_signal< sc_lv<32> > weight_V_read_reg_283;
    sc_signal< sc_lv<32> > outputConv_V_read_reg_288;
    sc_signal< sc_lv<32> > input_V_read_reg_294;
    sc_signal< sc_logic > grp_dense_fu_188_ap_start;
    sc_signal< sc_logic > grp_dense_fu_188_ap_done;
    sc_signal< sc_logic > grp_dense_fu_188_ap_idle;
    sc_signal< sc_logic > grp_dense_fu_188_ap_ready;
    sc_signal< sc_logic > grp_dense_fu_188_m_axi_input_V_AWVALID;
    sc_signal< sc_lv<32> > grp_dense_fu_188_m_axi_input_V_AWADDR;
    sc_signal< sc_lv<1> > grp_dense_fu_188_m_axi_input_V_AWID;
    sc_signal< sc_lv<32> > grp_dense_fu_188_m_axi_input_V_AWLEN;
    sc_signal< sc_lv<3> > grp_dense_fu_188_m_axi_input_V_AWSIZE;
    sc_signal< sc_lv<2> > grp_dense_fu_188_m_axi_input_V_AWBURST;
    sc_signal< sc_lv<2> > grp_dense_fu_188_m_axi_input_V_AWLOCK;
    sc_signal< sc_lv<4> > grp_dense_fu_188_m_axi_input_V_AWCACHE;
    sc_signal< sc_lv<3> > grp_dense_fu_188_m_axi_input_V_AWPROT;
    sc_signal< sc_lv<4> > grp_dense_fu_188_m_axi_input_V_AWQOS;
    sc_signal< sc_lv<4> > grp_dense_fu_188_m_axi_input_V_AWREGION;
    sc_signal< sc_lv<1> > grp_dense_fu_188_m_axi_input_V_AWUSER;
    sc_signal< sc_logic > grp_dense_fu_188_m_axi_input_V_WVALID;
    sc_signal< sc_lv<8> > grp_dense_fu_188_m_axi_input_V_WDATA;
    sc_signal< sc_lv<1> > grp_dense_fu_188_m_axi_input_V_WSTRB;
    sc_signal< sc_logic > grp_dense_fu_188_m_axi_input_V_WLAST;
    sc_signal< sc_lv<1> > grp_dense_fu_188_m_axi_input_V_WID;
    sc_signal< sc_lv<1> > grp_dense_fu_188_m_axi_input_V_WUSER;
    sc_signal< sc_logic > grp_dense_fu_188_m_axi_input_V_ARVALID;
    sc_signal< sc_lv<32> > grp_dense_fu_188_m_axi_input_V_ARADDR;
    sc_signal< sc_lv<1> > grp_dense_fu_188_m_axi_input_V_ARID;
    sc_signal< sc_lv<32> > grp_dense_fu_188_m_axi_input_V_ARLEN;
    sc_signal< sc_lv<3> > grp_dense_fu_188_m_axi_input_V_ARSIZE;
    sc_signal< sc_lv<2> > grp_dense_fu_188_m_axi_input_V_ARBURST;
    sc_signal< sc_lv<2> > grp_dense_fu_188_m_axi_input_V_ARLOCK;
    sc_signal< sc_lv<4> > grp_dense_fu_188_m_axi_input_V_ARCACHE;
    sc_signal< sc_lv<3> > grp_dense_fu_188_m_axi_input_V_ARPROT;
    sc_signal< sc_lv<4> > grp_dense_fu_188_m_axi_input_V_ARQOS;
    sc_signal< sc_lv<4> > grp_dense_fu_188_m_axi_input_V_ARREGION;
    sc_signal< sc_lv<1> > grp_dense_fu_188_m_axi_input_V_ARUSER;
    sc_signal< sc_logic > grp_dense_fu_188_m_axi_input_V_RREADY;
    sc_signal< sc_logic > grp_dense_fu_188_m_axi_input_V_BREADY;
    sc_signal< sc_logic > grp_conv2_fu_198_ap_start;
    sc_signal< sc_logic > grp_conv2_fu_198_ap_done;
    sc_signal< sc_logic > grp_conv2_fu_198_ap_idle;
    sc_signal< sc_logic > grp_conv2_fu_198_ap_ready;
    sc_signal< sc_logic > grp_conv2_fu_198_m_axi_input_V_AWVALID;
    sc_signal< sc_lv<32> > grp_conv2_fu_198_m_axi_input_V_AWADDR;
    sc_signal< sc_lv<1> > grp_conv2_fu_198_m_axi_input_V_AWID;
    sc_signal< sc_lv<32> > grp_conv2_fu_198_m_axi_input_V_AWLEN;
    sc_signal< sc_lv<3> > grp_conv2_fu_198_m_axi_input_V_AWSIZE;
    sc_signal< sc_lv<2> > grp_conv2_fu_198_m_axi_input_V_AWBURST;
    sc_signal< sc_lv<2> > grp_conv2_fu_198_m_axi_input_V_AWLOCK;
    sc_signal< sc_lv<4> > grp_conv2_fu_198_m_axi_input_V_AWCACHE;
    sc_signal< sc_lv<3> > grp_conv2_fu_198_m_axi_input_V_AWPROT;
    sc_signal< sc_lv<4> > grp_conv2_fu_198_m_axi_input_V_AWQOS;
    sc_signal< sc_lv<4> > grp_conv2_fu_198_m_axi_input_V_AWREGION;
    sc_signal< sc_lv<1> > grp_conv2_fu_198_m_axi_input_V_AWUSER;
    sc_signal< sc_logic > grp_conv2_fu_198_m_axi_input_V_WVALID;
    sc_signal< sc_lv<8> > grp_conv2_fu_198_m_axi_input_V_WDATA;
    sc_signal< sc_lv<1> > grp_conv2_fu_198_m_axi_input_V_WSTRB;
    sc_signal< sc_logic > grp_conv2_fu_198_m_axi_input_V_WLAST;
    sc_signal< sc_lv<1> > grp_conv2_fu_198_m_axi_input_V_WID;
    sc_signal< sc_lv<1> > grp_conv2_fu_198_m_axi_input_V_WUSER;
    sc_signal< sc_logic > grp_conv2_fu_198_m_axi_input_V_ARVALID;
    sc_signal< sc_lv<32> > grp_conv2_fu_198_m_axi_input_V_ARADDR;
    sc_signal< sc_lv<1> > grp_conv2_fu_198_m_axi_input_V_ARID;
    sc_signal< sc_lv<32> > grp_conv2_fu_198_m_axi_input_V_ARLEN;
    sc_signal< sc_lv<3> > grp_conv2_fu_198_m_axi_input_V_ARSIZE;
    sc_signal< sc_lv<2> > grp_conv2_fu_198_m_axi_input_V_ARBURST;
    sc_signal< sc_lv<2> > grp_conv2_fu_198_m_axi_input_V_ARLOCK;
    sc_signal< sc_lv<4> > grp_conv2_fu_198_m_axi_input_V_ARCACHE;
    sc_signal< sc_lv<3> > grp_conv2_fu_198_m_axi_input_V_ARPROT;
    sc_signal< sc_lv<4> > grp_conv2_fu_198_m_axi_input_V_ARQOS;
    sc_signal< sc_lv<4> > grp_conv2_fu_198_m_axi_input_V_ARREGION;
    sc_signal< sc_lv<1> > grp_conv2_fu_198_m_axi_input_V_ARUSER;
    sc_signal< sc_logic > grp_conv2_fu_198_m_axi_input_V_RREADY;
    sc_signal< sc_logic > grp_conv2_fu_198_m_axi_input_V_BREADY;
    sc_signal< sc_logic > grp_conv1_fu_208_ap_start;
    sc_signal< sc_logic > grp_conv1_fu_208_ap_done;
    sc_signal< sc_logic > grp_conv1_fu_208_ap_idle;
    sc_signal< sc_logic > grp_conv1_fu_208_ap_ready;
    sc_signal< sc_logic > grp_conv1_fu_208_m_axi_input_V_AWVALID;
    sc_signal< sc_lv<32> > grp_conv1_fu_208_m_axi_input_V_AWADDR;
    sc_signal< sc_lv<1> > grp_conv1_fu_208_m_axi_input_V_AWID;
    sc_signal< sc_lv<32> > grp_conv1_fu_208_m_axi_input_V_AWLEN;
    sc_signal< sc_lv<3> > grp_conv1_fu_208_m_axi_input_V_AWSIZE;
    sc_signal< sc_lv<2> > grp_conv1_fu_208_m_axi_input_V_AWBURST;
    sc_signal< sc_lv<2> > grp_conv1_fu_208_m_axi_input_V_AWLOCK;
    sc_signal< sc_lv<4> > grp_conv1_fu_208_m_axi_input_V_AWCACHE;
    sc_signal< sc_lv<3> > grp_conv1_fu_208_m_axi_input_V_AWPROT;
    sc_signal< sc_lv<4> > grp_conv1_fu_208_m_axi_input_V_AWQOS;
    sc_signal< sc_lv<4> > grp_conv1_fu_208_m_axi_input_V_AWREGION;
    sc_signal< sc_lv<1> > grp_conv1_fu_208_m_axi_input_V_AWUSER;
    sc_signal< sc_logic > grp_conv1_fu_208_m_axi_input_V_WVALID;
    sc_signal< sc_lv<8> > grp_conv1_fu_208_m_axi_input_V_WDATA;
    sc_signal< sc_lv<1> > grp_conv1_fu_208_m_axi_input_V_WSTRB;
    sc_signal< sc_logic > grp_conv1_fu_208_m_axi_input_V_WLAST;
    sc_signal< sc_lv<1> > grp_conv1_fu_208_m_axi_input_V_WID;
    sc_signal< sc_lv<1> > grp_conv1_fu_208_m_axi_input_V_WUSER;
    sc_signal< sc_logic > grp_conv1_fu_208_m_axi_input_V_ARVALID;
    sc_signal< sc_lv<32> > grp_conv1_fu_208_m_axi_input_V_ARADDR;
    sc_signal< sc_lv<1> > grp_conv1_fu_208_m_axi_input_V_ARID;
    sc_signal< sc_lv<32> > grp_conv1_fu_208_m_axi_input_V_ARLEN;
    sc_signal< sc_lv<3> > grp_conv1_fu_208_m_axi_input_V_ARSIZE;
    sc_signal< sc_lv<2> > grp_conv1_fu_208_m_axi_input_V_ARBURST;
    sc_signal< sc_lv<2> > grp_conv1_fu_208_m_axi_input_V_ARLOCK;
    sc_signal< sc_lv<4> > grp_conv1_fu_208_m_axi_input_V_ARCACHE;
    sc_signal< sc_lv<3> > grp_conv1_fu_208_m_axi_input_V_ARPROT;
    sc_signal< sc_lv<4> > grp_conv1_fu_208_m_axi_input_V_ARQOS;
    sc_signal< sc_lv<4> > grp_conv1_fu_208_m_axi_input_V_ARREGION;
    sc_signal< sc_lv<1> > grp_conv1_fu_208_m_axi_input_V_ARUSER;
    sc_signal< sc_logic > grp_conv1_fu_208_m_axi_input_V_RREADY;
    sc_signal< sc_logic > grp_conv1_fu_208_m_axi_input_V_BREADY;
    sc_signal< sc_logic > grp_pool_fu_218_ap_start;
    sc_signal< sc_logic > grp_pool_fu_218_ap_done;
    sc_signal< sc_logic > grp_pool_fu_218_ap_idle;
    sc_signal< sc_logic > grp_pool_fu_218_ap_ready;
    sc_signal< sc_logic > grp_pool_fu_218_m_axi_input_V_AWVALID;
    sc_signal< sc_lv<32> > grp_pool_fu_218_m_axi_input_V_AWADDR;
    sc_signal< sc_lv<1> > grp_pool_fu_218_m_axi_input_V_AWID;
    sc_signal< sc_lv<32> > grp_pool_fu_218_m_axi_input_V_AWLEN;
    sc_signal< sc_lv<3> > grp_pool_fu_218_m_axi_input_V_AWSIZE;
    sc_signal< sc_lv<2> > grp_pool_fu_218_m_axi_input_V_AWBURST;
    sc_signal< sc_lv<2> > grp_pool_fu_218_m_axi_input_V_AWLOCK;
    sc_signal< sc_lv<4> > grp_pool_fu_218_m_axi_input_V_AWCACHE;
    sc_signal< sc_lv<3> > grp_pool_fu_218_m_axi_input_V_AWPROT;
    sc_signal< sc_lv<4> > grp_pool_fu_218_m_axi_input_V_AWQOS;
    sc_signal< sc_lv<4> > grp_pool_fu_218_m_axi_input_V_AWREGION;
    sc_signal< sc_lv<1> > grp_pool_fu_218_m_axi_input_V_AWUSER;
    sc_signal< sc_logic > grp_pool_fu_218_m_axi_input_V_WVALID;
    sc_signal< sc_lv<8> > grp_pool_fu_218_m_axi_input_V_WDATA;
    sc_signal< sc_lv<1> > grp_pool_fu_218_m_axi_input_V_WSTRB;
    sc_signal< sc_logic > grp_pool_fu_218_m_axi_input_V_WLAST;
    sc_signal< sc_lv<1> > grp_pool_fu_218_m_axi_input_V_WID;
    sc_signal< sc_lv<1> > grp_pool_fu_218_m_axi_input_V_WUSER;
    sc_signal< sc_logic > grp_pool_fu_218_m_axi_input_V_ARVALID;
    sc_signal< sc_lv<32> > grp_pool_fu_218_m_axi_input_V_ARADDR;
    sc_signal< sc_lv<1> > grp_pool_fu_218_m_axi_input_V_ARID;
    sc_signal< sc_lv<32> > grp_pool_fu_218_m_axi_input_V_ARLEN;
    sc_signal< sc_lv<3> > grp_pool_fu_218_m_axi_input_V_ARSIZE;
    sc_signal< sc_lv<2> > grp_pool_fu_218_m_axi_input_V_ARBURST;
    sc_signal< sc_lv<2> > grp_pool_fu_218_m_axi_input_V_ARLOCK;
    sc_signal< sc_lv<4> > grp_pool_fu_218_m_axi_input_V_ARCACHE;
    sc_signal< sc_lv<3> > grp_pool_fu_218_m_axi_input_V_ARPROT;
    sc_signal< sc_lv<4> > grp_pool_fu_218_m_axi_input_V_ARQOS;
    sc_signal< sc_lv<4> > grp_pool_fu_218_m_axi_input_V_ARREGION;
    sc_signal< sc_lv<1> > grp_pool_fu_218_m_axi_input_V_ARUSER;
    sc_signal< sc_logic > grp_pool_fu_218_m_axi_input_V_RREADY;
    sc_signal< sc_logic > grp_pool_fu_218_m_axi_input_V_BREADY;
    sc_signal< sc_lv<32> > grp_pool_fu_218_input_V_offset;
    sc_signal< sc_lv<32> > grp_pool_fu_218_outputPool_V_offset;
    sc_signal< sc_lv<6> > grp_pool_fu_218_Cin;
    sc_signal< sc_lv<6> > grp_pool_fu_218_H;
    sc_signal< sc_lv<6> > grp_pool_fu_218_W;
    sc_signal< sc_logic > grp_dense_fu_188_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_logic > grp_conv2_fu_198_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_logic > grp_conv1_fu_208_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_logic > grp_pool_fu_218_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<11> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<11> ap_ST_fsm_state1;
    static const sc_lv<11> ap_ST_fsm_state2;
    static const sc_lv<11> ap_ST_fsm_state3;
    static const sc_lv<11> ap_ST_fsm_state4;
    static const sc_lv<11> ap_ST_fsm_state5;
    static const sc_lv<11> ap_ST_fsm_state6;
    static const sc_lv<11> ap_ST_fsm_state7;
    static const sc_lv<11> ap_ST_fsm_state8;
    static const sc_lv<11> ap_ST_fsm_state9;
    static const sc_lv<11> ap_ST_fsm_state10;
    static const sc_lv<11> ap_ST_fsm_state11;
    static const sc_lv<32> ap_const_lv32_0;
    static const int C_S_AXI_DATA_WIDTH;
    static const int C_M_AXI_GMEM_USER_VALUE;
    static const int C_M_AXI_GMEM_PROT_VALUE;
    static const int C_M_AXI_GMEM_CACHE_VALUE;
    static const int C_M_AXI_DATA_WIDTH;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<6> ap_const_lv6_8;
    static const sc_lv<6> ap_const_lv6_10;
    static const sc_lv<6> ap_const_lv6_1C;
    static const sc_lv<6> ap_const_lv6_E;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_gmem_ARADDR();
    void thread_gmem_ARBURST();
    void thread_gmem_ARCACHE();
    void thread_gmem_ARID();
    void thread_gmem_ARLEN();
    void thread_gmem_ARLOCK();
    void thread_gmem_ARPROT();
    void thread_gmem_ARQOS();
    void thread_gmem_ARREGION();
    void thread_gmem_ARSIZE();
    void thread_gmem_ARUSER();
    void thread_gmem_ARVALID();
    void thread_gmem_AWADDR();
    void thread_gmem_AWBURST();
    void thread_gmem_AWCACHE();
    void thread_gmem_AWID();
    void thread_gmem_AWLEN();
    void thread_gmem_AWLOCK();
    void thread_gmem_AWPROT();
    void thread_gmem_AWQOS();
    void thread_gmem_AWREGION();
    void thread_gmem_AWSIZE();
    void thread_gmem_AWUSER();
    void thread_gmem_AWVALID();
    void thread_gmem_BREADY();
    void thread_gmem_RREADY();
    void thread_gmem_WDATA();
    void thread_gmem_WID();
    void thread_gmem_WLAST();
    void thread_gmem_WSTRB();
    void thread_gmem_WUSER();
    void thread_gmem_WVALID();
    void thread_grp_conv1_fu_208_ap_start();
    void thread_grp_conv2_fu_198_ap_start();
    void thread_grp_dense_fu_188_ap_start();
    void thread_grp_pool_fu_218_Cin();
    void thread_grp_pool_fu_218_H();
    void thread_grp_pool_fu_218_W();
    void thread_grp_pool_fu_218_ap_start();
    void thread_grp_pool_fu_218_input_V_offset();
    void thread_grp_pool_fu_218_outputPool_V_offset();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif

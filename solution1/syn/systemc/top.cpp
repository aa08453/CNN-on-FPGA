// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "top.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic top::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic top::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<11> top::ap_ST_fsm_state1 = "1";
const sc_lv<11> top::ap_ST_fsm_state2 = "10";
const sc_lv<11> top::ap_ST_fsm_state3 = "100";
const sc_lv<11> top::ap_ST_fsm_state4 = "1000";
const sc_lv<11> top::ap_ST_fsm_state5 = "10000";
const sc_lv<11> top::ap_ST_fsm_state6 = "100000";
const sc_lv<11> top::ap_ST_fsm_state7 = "1000000";
const sc_lv<11> top::ap_ST_fsm_state8 = "10000000";
const sc_lv<11> top::ap_ST_fsm_state9 = "100000000";
const sc_lv<11> top::ap_ST_fsm_state10 = "1000000000";
const sc_lv<11> top::ap_ST_fsm_state11 = "10000000000";
const sc_lv<32> top::ap_const_lv32_0 = "00000000000000000000000000000000";
const int top::C_S_AXI_DATA_WIDTH = "100000";
const int top::C_M_AXI_GMEM_USER_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int top::C_M_AXI_GMEM_PROT_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int top::C_M_AXI_GMEM_CACHE_VALUE = "11";
const int top::C_M_AXI_DATA_WIDTH = "100000";
const sc_lv<32> top::ap_const_lv32_5 = "101";
const sc_lv<32> top::ap_const_lv32_6 = "110";
const sc_lv<32> top::ap_const_lv32_1 = "1";
const sc_lv<32> top::ap_const_lv32_2 = "10";
const sc_lv<32> top::ap_const_lv32_9 = "1001";
const sc_lv<32> top::ap_const_lv32_A = "1010";
const sc_lv<32> top::ap_const_lv32_3 = "11";
const sc_lv<32> top::ap_const_lv32_7 = "111";
const sc_lv<32> top::ap_const_lv32_4 = "100";
const sc_lv<32> top::ap_const_lv32_8 = "1000";
const sc_lv<6> top::ap_const_lv6_8 = "1000";
const sc_lv<6> top::ap_const_lv6_10 = "10000";
const sc_lv<6> top::ap_const_lv6_1C = "11100";
const sc_lv<6> top::ap_const_lv6_E = "1110";
const bool top::ap_const_boolean_1 = true;

top::top(sc_module_name name) : sc_module(name), mVcdFile(0) {
    top_control_s_axi_U = new top_control_s_axi<C_S_AXI_CONTROL_ADDR_WIDTH,C_S_AXI_CONTROL_DATA_WIDTH>("top_control_s_axi_U");
    top_control_s_axi_U->AWVALID(s_axi_control_AWVALID);
    top_control_s_axi_U->AWREADY(s_axi_control_AWREADY);
    top_control_s_axi_U->AWADDR(s_axi_control_AWADDR);
    top_control_s_axi_U->WVALID(s_axi_control_WVALID);
    top_control_s_axi_U->WREADY(s_axi_control_WREADY);
    top_control_s_axi_U->WDATA(s_axi_control_WDATA);
    top_control_s_axi_U->WSTRB(s_axi_control_WSTRB);
    top_control_s_axi_U->ARVALID(s_axi_control_ARVALID);
    top_control_s_axi_U->ARREADY(s_axi_control_ARREADY);
    top_control_s_axi_U->ARADDR(s_axi_control_ARADDR);
    top_control_s_axi_U->RVALID(s_axi_control_RVALID);
    top_control_s_axi_U->RREADY(s_axi_control_RREADY);
    top_control_s_axi_U->RDATA(s_axi_control_RDATA);
    top_control_s_axi_U->RRESP(s_axi_control_RRESP);
    top_control_s_axi_U->BVALID(s_axi_control_BVALID);
    top_control_s_axi_U->BREADY(s_axi_control_BREADY);
    top_control_s_axi_U->BRESP(s_axi_control_BRESP);
    top_control_s_axi_U->ACLK(ap_clk);
    top_control_s_axi_U->ARESET(ap_rst_n_inv);
    top_control_s_axi_U->ACLK_EN(ap_var_for_const0);
    top_control_s_axi_U->ap_start(ap_start);
    top_control_s_axi_U->interrupt(interrupt);
    top_control_s_axi_U->ap_ready(ap_ready);
    top_control_s_axi_U->ap_done(ap_done);
    top_control_s_axi_U->ap_idle(ap_idle);
    top_control_s_axi_U->input_V(input_V);
    top_control_s_axi_U->outputConv_V(outputConv_V);
    top_control_s_axi_U->weight_V(weight_V);
    top_control_s_axi_U->bias_V(bias_V);
    top_control_s_axi_U->outputPool_V(outputPool_V);
    top_control_s_axi_U->weight2_V(weight2_V);
    top_control_s_axi_U->bias2_V(bias2_V);
    top_control_s_axi_U->outputConv2_V(outputConv2_V);
    top_control_s_axi_U->outputPool2_V(outputPool2_V);
    top_control_s_axi_U->outputDense_V(outputDense_V);
    top_control_s_axi_U->fcWeight_V(fcWeight_V);
    top_control_s_axi_U->fcBias_V(fcBias_V);
    top_gmem_m_axi_U = new top_gmem_m_axi<0,8,32,5,16,16,16,16,C_M_AXI_GMEM_ID_WIDTH,C_M_AXI_GMEM_ADDR_WIDTH,C_M_AXI_GMEM_DATA_WIDTH,C_M_AXI_GMEM_AWUSER_WIDTH,C_M_AXI_GMEM_ARUSER_WIDTH,C_M_AXI_GMEM_WUSER_WIDTH,C_M_AXI_GMEM_RUSER_WIDTH,C_M_AXI_GMEM_BUSER_WIDTH,C_M_AXI_GMEM_USER_VALUE,C_M_AXI_GMEM_PROT_VALUE,C_M_AXI_GMEM_CACHE_VALUE>("top_gmem_m_axi_U");
    top_gmem_m_axi_U->AWVALID(m_axi_gmem_AWVALID);
    top_gmem_m_axi_U->AWREADY(m_axi_gmem_AWREADY);
    top_gmem_m_axi_U->AWADDR(m_axi_gmem_AWADDR);
    top_gmem_m_axi_U->AWID(m_axi_gmem_AWID);
    top_gmem_m_axi_U->AWLEN(m_axi_gmem_AWLEN);
    top_gmem_m_axi_U->AWSIZE(m_axi_gmem_AWSIZE);
    top_gmem_m_axi_U->AWBURST(m_axi_gmem_AWBURST);
    top_gmem_m_axi_U->AWLOCK(m_axi_gmem_AWLOCK);
    top_gmem_m_axi_U->AWCACHE(m_axi_gmem_AWCACHE);
    top_gmem_m_axi_U->AWPROT(m_axi_gmem_AWPROT);
    top_gmem_m_axi_U->AWQOS(m_axi_gmem_AWQOS);
    top_gmem_m_axi_U->AWREGION(m_axi_gmem_AWREGION);
    top_gmem_m_axi_U->AWUSER(m_axi_gmem_AWUSER);
    top_gmem_m_axi_U->WVALID(m_axi_gmem_WVALID);
    top_gmem_m_axi_U->WREADY(m_axi_gmem_WREADY);
    top_gmem_m_axi_U->WDATA(m_axi_gmem_WDATA);
    top_gmem_m_axi_U->WSTRB(m_axi_gmem_WSTRB);
    top_gmem_m_axi_U->WLAST(m_axi_gmem_WLAST);
    top_gmem_m_axi_U->WID(m_axi_gmem_WID);
    top_gmem_m_axi_U->WUSER(m_axi_gmem_WUSER);
    top_gmem_m_axi_U->ARVALID(m_axi_gmem_ARVALID);
    top_gmem_m_axi_U->ARREADY(m_axi_gmem_ARREADY);
    top_gmem_m_axi_U->ARADDR(m_axi_gmem_ARADDR);
    top_gmem_m_axi_U->ARID(m_axi_gmem_ARID);
    top_gmem_m_axi_U->ARLEN(m_axi_gmem_ARLEN);
    top_gmem_m_axi_U->ARSIZE(m_axi_gmem_ARSIZE);
    top_gmem_m_axi_U->ARBURST(m_axi_gmem_ARBURST);
    top_gmem_m_axi_U->ARLOCK(m_axi_gmem_ARLOCK);
    top_gmem_m_axi_U->ARCACHE(m_axi_gmem_ARCACHE);
    top_gmem_m_axi_U->ARPROT(m_axi_gmem_ARPROT);
    top_gmem_m_axi_U->ARQOS(m_axi_gmem_ARQOS);
    top_gmem_m_axi_U->ARREGION(m_axi_gmem_ARREGION);
    top_gmem_m_axi_U->ARUSER(m_axi_gmem_ARUSER);
    top_gmem_m_axi_U->RVALID(m_axi_gmem_RVALID);
    top_gmem_m_axi_U->RREADY(m_axi_gmem_RREADY);
    top_gmem_m_axi_U->RDATA(m_axi_gmem_RDATA);
    top_gmem_m_axi_U->RLAST(m_axi_gmem_RLAST);
    top_gmem_m_axi_U->RID(m_axi_gmem_RID);
    top_gmem_m_axi_U->RUSER(m_axi_gmem_RUSER);
    top_gmem_m_axi_U->RRESP(m_axi_gmem_RRESP);
    top_gmem_m_axi_U->BVALID(m_axi_gmem_BVALID);
    top_gmem_m_axi_U->BREADY(m_axi_gmem_BREADY);
    top_gmem_m_axi_U->BRESP(m_axi_gmem_BRESP);
    top_gmem_m_axi_U->BID(m_axi_gmem_BID);
    top_gmem_m_axi_U->BUSER(m_axi_gmem_BUSER);
    top_gmem_m_axi_U->ACLK(ap_clk);
    top_gmem_m_axi_U->ARESET(ap_rst_n_inv);
    top_gmem_m_axi_U->ACLK_EN(ap_var_for_const0);
    top_gmem_m_axi_U->I_ARVALID(gmem_ARVALID);
    top_gmem_m_axi_U->I_ARREADY(gmem_ARREADY);
    top_gmem_m_axi_U->I_ARADDR(gmem_ARADDR);
    top_gmem_m_axi_U->I_ARID(gmem_ARID);
    top_gmem_m_axi_U->I_ARLEN(gmem_ARLEN);
    top_gmem_m_axi_U->I_ARSIZE(gmem_ARSIZE);
    top_gmem_m_axi_U->I_ARLOCK(gmem_ARLOCK);
    top_gmem_m_axi_U->I_ARCACHE(gmem_ARCACHE);
    top_gmem_m_axi_U->I_ARQOS(gmem_ARQOS);
    top_gmem_m_axi_U->I_ARPROT(gmem_ARPROT);
    top_gmem_m_axi_U->I_ARUSER(gmem_ARUSER);
    top_gmem_m_axi_U->I_ARBURST(gmem_ARBURST);
    top_gmem_m_axi_U->I_ARREGION(gmem_ARREGION);
    top_gmem_m_axi_U->I_RVALID(gmem_RVALID);
    top_gmem_m_axi_U->I_RREADY(gmem_RREADY);
    top_gmem_m_axi_U->I_RDATA(gmem_RDATA);
    top_gmem_m_axi_U->I_RID(gmem_RID);
    top_gmem_m_axi_U->I_RUSER(gmem_RUSER);
    top_gmem_m_axi_U->I_RRESP(gmem_RRESP);
    top_gmem_m_axi_U->I_RLAST(gmem_RLAST);
    top_gmem_m_axi_U->I_AWVALID(gmem_AWVALID);
    top_gmem_m_axi_U->I_AWREADY(gmem_AWREADY);
    top_gmem_m_axi_U->I_AWADDR(gmem_AWADDR);
    top_gmem_m_axi_U->I_AWID(gmem_AWID);
    top_gmem_m_axi_U->I_AWLEN(gmem_AWLEN);
    top_gmem_m_axi_U->I_AWSIZE(gmem_AWSIZE);
    top_gmem_m_axi_U->I_AWLOCK(gmem_AWLOCK);
    top_gmem_m_axi_U->I_AWCACHE(gmem_AWCACHE);
    top_gmem_m_axi_U->I_AWQOS(gmem_AWQOS);
    top_gmem_m_axi_U->I_AWPROT(gmem_AWPROT);
    top_gmem_m_axi_U->I_AWUSER(gmem_AWUSER);
    top_gmem_m_axi_U->I_AWBURST(gmem_AWBURST);
    top_gmem_m_axi_U->I_AWREGION(gmem_AWREGION);
    top_gmem_m_axi_U->I_WVALID(gmem_WVALID);
    top_gmem_m_axi_U->I_WREADY(gmem_WREADY);
    top_gmem_m_axi_U->I_WDATA(gmem_WDATA);
    top_gmem_m_axi_U->I_WID(gmem_WID);
    top_gmem_m_axi_U->I_WUSER(gmem_WUSER);
    top_gmem_m_axi_U->I_WLAST(gmem_WLAST);
    top_gmem_m_axi_U->I_WSTRB(gmem_WSTRB);
    top_gmem_m_axi_U->I_BVALID(gmem_BVALID);
    top_gmem_m_axi_U->I_BREADY(gmem_BREADY);
    top_gmem_m_axi_U->I_BRESP(gmem_BRESP);
    top_gmem_m_axi_U->I_BID(gmem_BID);
    top_gmem_m_axi_U->I_BUSER(gmem_BUSER);
    grp_conv2_fu_188 = new conv2("grp_conv2_fu_188");
    grp_conv2_fu_188->ap_clk(ap_clk);
    grp_conv2_fu_188->ap_rst(ap_rst_n_inv);
    grp_conv2_fu_188->ap_start(grp_conv2_fu_188_ap_start);
    grp_conv2_fu_188->ap_done(grp_conv2_fu_188_ap_done);
    grp_conv2_fu_188->ap_idle(grp_conv2_fu_188_ap_idle);
    grp_conv2_fu_188->ap_ready(grp_conv2_fu_188_ap_ready);
    grp_conv2_fu_188->m_axi_input_V_AWVALID(grp_conv2_fu_188_m_axi_input_V_AWVALID);
    grp_conv2_fu_188->m_axi_input_V_AWREADY(gmem_AWREADY);
    grp_conv2_fu_188->m_axi_input_V_AWADDR(grp_conv2_fu_188_m_axi_input_V_AWADDR);
    grp_conv2_fu_188->m_axi_input_V_AWID(grp_conv2_fu_188_m_axi_input_V_AWID);
    grp_conv2_fu_188->m_axi_input_V_AWLEN(grp_conv2_fu_188_m_axi_input_V_AWLEN);
    grp_conv2_fu_188->m_axi_input_V_AWSIZE(grp_conv2_fu_188_m_axi_input_V_AWSIZE);
    grp_conv2_fu_188->m_axi_input_V_AWBURST(grp_conv2_fu_188_m_axi_input_V_AWBURST);
    grp_conv2_fu_188->m_axi_input_V_AWLOCK(grp_conv2_fu_188_m_axi_input_V_AWLOCK);
    grp_conv2_fu_188->m_axi_input_V_AWCACHE(grp_conv2_fu_188_m_axi_input_V_AWCACHE);
    grp_conv2_fu_188->m_axi_input_V_AWPROT(grp_conv2_fu_188_m_axi_input_V_AWPROT);
    grp_conv2_fu_188->m_axi_input_V_AWQOS(grp_conv2_fu_188_m_axi_input_V_AWQOS);
    grp_conv2_fu_188->m_axi_input_V_AWREGION(grp_conv2_fu_188_m_axi_input_V_AWREGION);
    grp_conv2_fu_188->m_axi_input_V_AWUSER(grp_conv2_fu_188_m_axi_input_V_AWUSER);
    grp_conv2_fu_188->m_axi_input_V_WVALID(grp_conv2_fu_188_m_axi_input_V_WVALID);
    grp_conv2_fu_188->m_axi_input_V_WREADY(gmem_WREADY);
    grp_conv2_fu_188->m_axi_input_V_WDATA(grp_conv2_fu_188_m_axi_input_V_WDATA);
    grp_conv2_fu_188->m_axi_input_V_WSTRB(grp_conv2_fu_188_m_axi_input_V_WSTRB);
    grp_conv2_fu_188->m_axi_input_V_WLAST(grp_conv2_fu_188_m_axi_input_V_WLAST);
    grp_conv2_fu_188->m_axi_input_V_WID(grp_conv2_fu_188_m_axi_input_V_WID);
    grp_conv2_fu_188->m_axi_input_V_WUSER(grp_conv2_fu_188_m_axi_input_V_WUSER);
    grp_conv2_fu_188->m_axi_input_V_ARVALID(grp_conv2_fu_188_m_axi_input_V_ARVALID);
    grp_conv2_fu_188->m_axi_input_V_ARREADY(gmem_ARREADY);
    grp_conv2_fu_188->m_axi_input_V_ARADDR(grp_conv2_fu_188_m_axi_input_V_ARADDR);
    grp_conv2_fu_188->m_axi_input_V_ARID(grp_conv2_fu_188_m_axi_input_V_ARID);
    grp_conv2_fu_188->m_axi_input_V_ARLEN(grp_conv2_fu_188_m_axi_input_V_ARLEN);
    grp_conv2_fu_188->m_axi_input_V_ARSIZE(grp_conv2_fu_188_m_axi_input_V_ARSIZE);
    grp_conv2_fu_188->m_axi_input_V_ARBURST(grp_conv2_fu_188_m_axi_input_V_ARBURST);
    grp_conv2_fu_188->m_axi_input_V_ARLOCK(grp_conv2_fu_188_m_axi_input_V_ARLOCK);
    grp_conv2_fu_188->m_axi_input_V_ARCACHE(grp_conv2_fu_188_m_axi_input_V_ARCACHE);
    grp_conv2_fu_188->m_axi_input_V_ARPROT(grp_conv2_fu_188_m_axi_input_V_ARPROT);
    grp_conv2_fu_188->m_axi_input_V_ARQOS(grp_conv2_fu_188_m_axi_input_V_ARQOS);
    grp_conv2_fu_188->m_axi_input_V_ARREGION(grp_conv2_fu_188_m_axi_input_V_ARREGION);
    grp_conv2_fu_188->m_axi_input_V_ARUSER(grp_conv2_fu_188_m_axi_input_V_ARUSER);
    grp_conv2_fu_188->m_axi_input_V_RVALID(gmem_RVALID);
    grp_conv2_fu_188->m_axi_input_V_RREADY(grp_conv2_fu_188_m_axi_input_V_RREADY);
    grp_conv2_fu_188->m_axi_input_V_RDATA(gmem_RDATA);
    grp_conv2_fu_188->m_axi_input_V_RLAST(gmem_RLAST);
    grp_conv2_fu_188->m_axi_input_V_RID(gmem_RID);
    grp_conv2_fu_188->m_axi_input_V_RUSER(gmem_RUSER);
    grp_conv2_fu_188->m_axi_input_V_RRESP(gmem_RRESP);
    grp_conv2_fu_188->m_axi_input_V_BVALID(gmem_BVALID);
    grp_conv2_fu_188->m_axi_input_V_BREADY(grp_conv2_fu_188_m_axi_input_V_BREADY);
    grp_conv2_fu_188->m_axi_input_V_BRESP(gmem_BRESP);
    grp_conv2_fu_188->m_axi_input_V_BID(gmem_BID);
    grp_conv2_fu_188->m_axi_input_V_BUSER(gmem_BUSER);
    grp_conv2_fu_188->input_V_offset(outputPool_V_read_reg_272);
    grp_conv2_fu_188->outputConv_V_offset(outputConv2_V_read_reg_256);
    grp_conv2_fu_188->weight_V_offset(weight2_V_read_reg_267);
    grp_conv2_fu_188->bias_V_offset(bias2_V_read_reg_262);
    grp_conv1_fu_198 = new conv1("grp_conv1_fu_198");
    grp_conv1_fu_198->ap_clk(ap_clk);
    grp_conv1_fu_198->ap_rst(ap_rst_n_inv);
    grp_conv1_fu_198->ap_start(grp_conv1_fu_198_ap_start);
    grp_conv1_fu_198->ap_done(grp_conv1_fu_198_ap_done);
    grp_conv1_fu_198->ap_idle(grp_conv1_fu_198_ap_idle);
    grp_conv1_fu_198->ap_ready(grp_conv1_fu_198_ap_ready);
    grp_conv1_fu_198->m_axi_input_V_AWVALID(grp_conv1_fu_198_m_axi_input_V_AWVALID);
    grp_conv1_fu_198->m_axi_input_V_AWREADY(gmem_AWREADY);
    grp_conv1_fu_198->m_axi_input_V_AWADDR(grp_conv1_fu_198_m_axi_input_V_AWADDR);
    grp_conv1_fu_198->m_axi_input_V_AWID(grp_conv1_fu_198_m_axi_input_V_AWID);
    grp_conv1_fu_198->m_axi_input_V_AWLEN(grp_conv1_fu_198_m_axi_input_V_AWLEN);
    grp_conv1_fu_198->m_axi_input_V_AWSIZE(grp_conv1_fu_198_m_axi_input_V_AWSIZE);
    grp_conv1_fu_198->m_axi_input_V_AWBURST(grp_conv1_fu_198_m_axi_input_V_AWBURST);
    grp_conv1_fu_198->m_axi_input_V_AWLOCK(grp_conv1_fu_198_m_axi_input_V_AWLOCK);
    grp_conv1_fu_198->m_axi_input_V_AWCACHE(grp_conv1_fu_198_m_axi_input_V_AWCACHE);
    grp_conv1_fu_198->m_axi_input_V_AWPROT(grp_conv1_fu_198_m_axi_input_V_AWPROT);
    grp_conv1_fu_198->m_axi_input_V_AWQOS(grp_conv1_fu_198_m_axi_input_V_AWQOS);
    grp_conv1_fu_198->m_axi_input_V_AWREGION(grp_conv1_fu_198_m_axi_input_V_AWREGION);
    grp_conv1_fu_198->m_axi_input_V_AWUSER(grp_conv1_fu_198_m_axi_input_V_AWUSER);
    grp_conv1_fu_198->m_axi_input_V_WVALID(grp_conv1_fu_198_m_axi_input_V_WVALID);
    grp_conv1_fu_198->m_axi_input_V_WREADY(gmem_WREADY);
    grp_conv1_fu_198->m_axi_input_V_WDATA(grp_conv1_fu_198_m_axi_input_V_WDATA);
    grp_conv1_fu_198->m_axi_input_V_WSTRB(grp_conv1_fu_198_m_axi_input_V_WSTRB);
    grp_conv1_fu_198->m_axi_input_V_WLAST(grp_conv1_fu_198_m_axi_input_V_WLAST);
    grp_conv1_fu_198->m_axi_input_V_WID(grp_conv1_fu_198_m_axi_input_V_WID);
    grp_conv1_fu_198->m_axi_input_V_WUSER(grp_conv1_fu_198_m_axi_input_V_WUSER);
    grp_conv1_fu_198->m_axi_input_V_ARVALID(grp_conv1_fu_198_m_axi_input_V_ARVALID);
    grp_conv1_fu_198->m_axi_input_V_ARREADY(gmem_ARREADY);
    grp_conv1_fu_198->m_axi_input_V_ARADDR(grp_conv1_fu_198_m_axi_input_V_ARADDR);
    grp_conv1_fu_198->m_axi_input_V_ARID(grp_conv1_fu_198_m_axi_input_V_ARID);
    grp_conv1_fu_198->m_axi_input_V_ARLEN(grp_conv1_fu_198_m_axi_input_V_ARLEN);
    grp_conv1_fu_198->m_axi_input_V_ARSIZE(grp_conv1_fu_198_m_axi_input_V_ARSIZE);
    grp_conv1_fu_198->m_axi_input_V_ARBURST(grp_conv1_fu_198_m_axi_input_V_ARBURST);
    grp_conv1_fu_198->m_axi_input_V_ARLOCK(grp_conv1_fu_198_m_axi_input_V_ARLOCK);
    grp_conv1_fu_198->m_axi_input_V_ARCACHE(grp_conv1_fu_198_m_axi_input_V_ARCACHE);
    grp_conv1_fu_198->m_axi_input_V_ARPROT(grp_conv1_fu_198_m_axi_input_V_ARPROT);
    grp_conv1_fu_198->m_axi_input_V_ARQOS(grp_conv1_fu_198_m_axi_input_V_ARQOS);
    grp_conv1_fu_198->m_axi_input_V_ARREGION(grp_conv1_fu_198_m_axi_input_V_ARREGION);
    grp_conv1_fu_198->m_axi_input_V_ARUSER(grp_conv1_fu_198_m_axi_input_V_ARUSER);
    grp_conv1_fu_198->m_axi_input_V_RVALID(gmem_RVALID);
    grp_conv1_fu_198->m_axi_input_V_RREADY(grp_conv1_fu_198_m_axi_input_V_RREADY);
    grp_conv1_fu_198->m_axi_input_V_RDATA(gmem_RDATA);
    grp_conv1_fu_198->m_axi_input_V_RLAST(gmem_RLAST);
    grp_conv1_fu_198->m_axi_input_V_RID(gmem_RID);
    grp_conv1_fu_198->m_axi_input_V_RUSER(gmem_RUSER);
    grp_conv1_fu_198->m_axi_input_V_RRESP(gmem_RRESP);
    grp_conv1_fu_198->m_axi_input_V_BVALID(gmem_BVALID);
    grp_conv1_fu_198->m_axi_input_V_BREADY(grp_conv1_fu_198_m_axi_input_V_BREADY);
    grp_conv1_fu_198->m_axi_input_V_BRESP(gmem_BRESP);
    grp_conv1_fu_198->m_axi_input_V_BID(gmem_BID);
    grp_conv1_fu_198->m_axi_input_V_BUSER(gmem_BUSER);
    grp_conv1_fu_198->input_V_offset(input_V_read_reg_294);
    grp_conv1_fu_198->outputConv_V_offset(outputConv_V_read_reg_288);
    grp_conv1_fu_198->weight_V_offset(weight_V_read_reg_283);
    grp_conv1_fu_198->bias_V_offset(bias_V_read_reg_278);
    grp_dense_fu_208 = new dense("grp_dense_fu_208");
    grp_dense_fu_208->ap_clk(ap_clk);
    grp_dense_fu_208->ap_rst(ap_rst_n_inv);
    grp_dense_fu_208->ap_start(grp_dense_fu_208_ap_start);
    grp_dense_fu_208->ap_done(grp_dense_fu_208_ap_done);
    grp_dense_fu_208->ap_idle(grp_dense_fu_208_ap_idle);
    grp_dense_fu_208->ap_ready(grp_dense_fu_208_ap_ready);
    grp_dense_fu_208->m_axi_input_V_AWVALID(grp_dense_fu_208_m_axi_input_V_AWVALID);
    grp_dense_fu_208->m_axi_input_V_AWREADY(gmem_AWREADY);
    grp_dense_fu_208->m_axi_input_V_AWADDR(grp_dense_fu_208_m_axi_input_V_AWADDR);
    grp_dense_fu_208->m_axi_input_V_AWID(grp_dense_fu_208_m_axi_input_V_AWID);
    grp_dense_fu_208->m_axi_input_V_AWLEN(grp_dense_fu_208_m_axi_input_V_AWLEN);
    grp_dense_fu_208->m_axi_input_V_AWSIZE(grp_dense_fu_208_m_axi_input_V_AWSIZE);
    grp_dense_fu_208->m_axi_input_V_AWBURST(grp_dense_fu_208_m_axi_input_V_AWBURST);
    grp_dense_fu_208->m_axi_input_V_AWLOCK(grp_dense_fu_208_m_axi_input_V_AWLOCK);
    grp_dense_fu_208->m_axi_input_V_AWCACHE(grp_dense_fu_208_m_axi_input_V_AWCACHE);
    grp_dense_fu_208->m_axi_input_V_AWPROT(grp_dense_fu_208_m_axi_input_V_AWPROT);
    grp_dense_fu_208->m_axi_input_V_AWQOS(grp_dense_fu_208_m_axi_input_V_AWQOS);
    grp_dense_fu_208->m_axi_input_V_AWREGION(grp_dense_fu_208_m_axi_input_V_AWREGION);
    grp_dense_fu_208->m_axi_input_V_AWUSER(grp_dense_fu_208_m_axi_input_V_AWUSER);
    grp_dense_fu_208->m_axi_input_V_WVALID(grp_dense_fu_208_m_axi_input_V_WVALID);
    grp_dense_fu_208->m_axi_input_V_WREADY(gmem_WREADY);
    grp_dense_fu_208->m_axi_input_V_WDATA(grp_dense_fu_208_m_axi_input_V_WDATA);
    grp_dense_fu_208->m_axi_input_V_WSTRB(grp_dense_fu_208_m_axi_input_V_WSTRB);
    grp_dense_fu_208->m_axi_input_V_WLAST(grp_dense_fu_208_m_axi_input_V_WLAST);
    grp_dense_fu_208->m_axi_input_V_WID(grp_dense_fu_208_m_axi_input_V_WID);
    grp_dense_fu_208->m_axi_input_V_WUSER(grp_dense_fu_208_m_axi_input_V_WUSER);
    grp_dense_fu_208->m_axi_input_V_ARVALID(grp_dense_fu_208_m_axi_input_V_ARVALID);
    grp_dense_fu_208->m_axi_input_V_ARREADY(gmem_ARREADY);
    grp_dense_fu_208->m_axi_input_V_ARADDR(grp_dense_fu_208_m_axi_input_V_ARADDR);
    grp_dense_fu_208->m_axi_input_V_ARID(grp_dense_fu_208_m_axi_input_V_ARID);
    grp_dense_fu_208->m_axi_input_V_ARLEN(grp_dense_fu_208_m_axi_input_V_ARLEN);
    grp_dense_fu_208->m_axi_input_V_ARSIZE(grp_dense_fu_208_m_axi_input_V_ARSIZE);
    grp_dense_fu_208->m_axi_input_V_ARBURST(grp_dense_fu_208_m_axi_input_V_ARBURST);
    grp_dense_fu_208->m_axi_input_V_ARLOCK(grp_dense_fu_208_m_axi_input_V_ARLOCK);
    grp_dense_fu_208->m_axi_input_V_ARCACHE(grp_dense_fu_208_m_axi_input_V_ARCACHE);
    grp_dense_fu_208->m_axi_input_V_ARPROT(grp_dense_fu_208_m_axi_input_V_ARPROT);
    grp_dense_fu_208->m_axi_input_V_ARQOS(grp_dense_fu_208_m_axi_input_V_ARQOS);
    grp_dense_fu_208->m_axi_input_V_ARREGION(grp_dense_fu_208_m_axi_input_V_ARREGION);
    grp_dense_fu_208->m_axi_input_V_ARUSER(grp_dense_fu_208_m_axi_input_V_ARUSER);
    grp_dense_fu_208->m_axi_input_V_RVALID(gmem_RVALID);
    grp_dense_fu_208->m_axi_input_V_RREADY(grp_dense_fu_208_m_axi_input_V_RREADY);
    grp_dense_fu_208->m_axi_input_V_RDATA(gmem_RDATA);
    grp_dense_fu_208->m_axi_input_V_RLAST(gmem_RLAST);
    grp_dense_fu_208->m_axi_input_V_RID(gmem_RID);
    grp_dense_fu_208->m_axi_input_V_RUSER(gmem_RUSER);
    grp_dense_fu_208->m_axi_input_V_RRESP(gmem_RRESP);
    grp_dense_fu_208->m_axi_input_V_BVALID(gmem_BVALID);
    grp_dense_fu_208->m_axi_input_V_BREADY(grp_dense_fu_208_m_axi_input_V_BREADY);
    grp_dense_fu_208->m_axi_input_V_BRESP(gmem_BRESP);
    grp_dense_fu_208->m_axi_input_V_BID(gmem_BID);
    grp_dense_fu_208->m_axi_input_V_BUSER(gmem_BUSER);
    grp_dense_fu_208->input_V_offset(outputPool2_V_read_reg_250);
    grp_dense_fu_208->outputDense_V_offset(outputDense_V_read_reg_245);
    grp_dense_fu_208->fcWeight_V_offset(fcWeight_V_read_reg_240);
    grp_dense_fu_208->fcBias_V_offset(fcBias_V_read_reg_235);
    grp_pool_fu_218 = new pool("grp_pool_fu_218");
    grp_pool_fu_218->ap_clk(ap_clk);
    grp_pool_fu_218->ap_rst(ap_rst_n_inv);
    grp_pool_fu_218->ap_start(grp_pool_fu_218_ap_start);
    grp_pool_fu_218->ap_done(grp_pool_fu_218_ap_done);
    grp_pool_fu_218->ap_idle(grp_pool_fu_218_ap_idle);
    grp_pool_fu_218->ap_ready(grp_pool_fu_218_ap_ready);
    grp_pool_fu_218->m_axi_input_V_AWVALID(grp_pool_fu_218_m_axi_input_V_AWVALID);
    grp_pool_fu_218->m_axi_input_V_AWREADY(gmem_AWREADY);
    grp_pool_fu_218->m_axi_input_V_AWADDR(grp_pool_fu_218_m_axi_input_V_AWADDR);
    grp_pool_fu_218->m_axi_input_V_AWID(grp_pool_fu_218_m_axi_input_V_AWID);
    grp_pool_fu_218->m_axi_input_V_AWLEN(grp_pool_fu_218_m_axi_input_V_AWLEN);
    grp_pool_fu_218->m_axi_input_V_AWSIZE(grp_pool_fu_218_m_axi_input_V_AWSIZE);
    grp_pool_fu_218->m_axi_input_V_AWBURST(grp_pool_fu_218_m_axi_input_V_AWBURST);
    grp_pool_fu_218->m_axi_input_V_AWLOCK(grp_pool_fu_218_m_axi_input_V_AWLOCK);
    grp_pool_fu_218->m_axi_input_V_AWCACHE(grp_pool_fu_218_m_axi_input_V_AWCACHE);
    grp_pool_fu_218->m_axi_input_V_AWPROT(grp_pool_fu_218_m_axi_input_V_AWPROT);
    grp_pool_fu_218->m_axi_input_V_AWQOS(grp_pool_fu_218_m_axi_input_V_AWQOS);
    grp_pool_fu_218->m_axi_input_V_AWREGION(grp_pool_fu_218_m_axi_input_V_AWREGION);
    grp_pool_fu_218->m_axi_input_V_AWUSER(grp_pool_fu_218_m_axi_input_V_AWUSER);
    grp_pool_fu_218->m_axi_input_V_WVALID(grp_pool_fu_218_m_axi_input_V_WVALID);
    grp_pool_fu_218->m_axi_input_V_WREADY(gmem_WREADY);
    grp_pool_fu_218->m_axi_input_V_WDATA(grp_pool_fu_218_m_axi_input_V_WDATA);
    grp_pool_fu_218->m_axi_input_V_WSTRB(grp_pool_fu_218_m_axi_input_V_WSTRB);
    grp_pool_fu_218->m_axi_input_V_WLAST(grp_pool_fu_218_m_axi_input_V_WLAST);
    grp_pool_fu_218->m_axi_input_V_WID(grp_pool_fu_218_m_axi_input_V_WID);
    grp_pool_fu_218->m_axi_input_V_WUSER(grp_pool_fu_218_m_axi_input_V_WUSER);
    grp_pool_fu_218->m_axi_input_V_ARVALID(grp_pool_fu_218_m_axi_input_V_ARVALID);
    grp_pool_fu_218->m_axi_input_V_ARREADY(gmem_ARREADY);
    grp_pool_fu_218->m_axi_input_V_ARADDR(grp_pool_fu_218_m_axi_input_V_ARADDR);
    grp_pool_fu_218->m_axi_input_V_ARID(grp_pool_fu_218_m_axi_input_V_ARID);
    grp_pool_fu_218->m_axi_input_V_ARLEN(grp_pool_fu_218_m_axi_input_V_ARLEN);
    grp_pool_fu_218->m_axi_input_V_ARSIZE(grp_pool_fu_218_m_axi_input_V_ARSIZE);
    grp_pool_fu_218->m_axi_input_V_ARBURST(grp_pool_fu_218_m_axi_input_V_ARBURST);
    grp_pool_fu_218->m_axi_input_V_ARLOCK(grp_pool_fu_218_m_axi_input_V_ARLOCK);
    grp_pool_fu_218->m_axi_input_V_ARCACHE(grp_pool_fu_218_m_axi_input_V_ARCACHE);
    grp_pool_fu_218->m_axi_input_V_ARPROT(grp_pool_fu_218_m_axi_input_V_ARPROT);
    grp_pool_fu_218->m_axi_input_V_ARQOS(grp_pool_fu_218_m_axi_input_V_ARQOS);
    grp_pool_fu_218->m_axi_input_V_ARREGION(grp_pool_fu_218_m_axi_input_V_ARREGION);
    grp_pool_fu_218->m_axi_input_V_ARUSER(grp_pool_fu_218_m_axi_input_V_ARUSER);
    grp_pool_fu_218->m_axi_input_V_RVALID(gmem_RVALID);
    grp_pool_fu_218->m_axi_input_V_RREADY(grp_pool_fu_218_m_axi_input_V_RREADY);
    grp_pool_fu_218->m_axi_input_V_RDATA(gmem_RDATA);
    grp_pool_fu_218->m_axi_input_V_RLAST(gmem_RLAST);
    grp_pool_fu_218->m_axi_input_V_RID(gmem_RID);
    grp_pool_fu_218->m_axi_input_V_RUSER(gmem_RUSER);
    grp_pool_fu_218->m_axi_input_V_RRESP(gmem_RRESP);
    grp_pool_fu_218->m_axi_input_V_BVALID(gmem_BVALID);
    grp_pool_fu_218->m_axi_input_V_BREADY(grp_pool_fu_218_m_axi_input_V_BREADY);
    grp_pool_fu_218->m_axi_input_V_BRESP(gmem_BRESP);
    grp_pool_fu_218->m_axi_input_V_BID(gmem_BID);
    grp_pool_fu_218->m_axi_input_V_BUSER(gmem_BUSER);
    grp_pool_fu_218->input_V_offset(grp_pool_fu_218_input_V_offset);
    grp_pool_fu_218->outputPool_V_offset(grp_pool_fu_218_outputPool_V_offset);
    grp_pool_fu_218->Cin(grp_pool_fu_218_Cin);
    grp_pool_fu_218->H(grp_pool_fu_218_H);
    grp_pool_fu_218->W(grp_pool_fu_218_W);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( grp_dense_fu_208_ap_done );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( grp_dense_fu_208_ap_done );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_gmem_ARADDR);
    sensitive << ( grp_conv2_fu_188_m_axi_input_V_ARADDR );
    sensitive << ( grp_conv1_fu_198_m_axi_input_V_ARADDR );
    sensitive << ( grp_dense_fu_208_m_axi_input_V_ARADDR );
    sensitive << ( grp_pool_fu_218_m_axi_input_V_ARADDR );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_gmem_ARBURST);
    sensitive << ( grp_conv2_fu_188_m_axi_input_V_ARBURST );
    sensitive << ( grp_conv1_fu_198_m_axi_input_V_ARBURST );
    sensitive << ( grp_dense_fu_208_m_axi_input_V_ARBURST );
    sensitive << ( grp_pool_fu_218_m_axi_input_V_ARBURST );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_gmem_ARCACHE);
    sensitive << ( grp_conv2_fu_188_m_axi_input_V_ARCACHE );
    sensitive << ( grp_conv1_fu_198_m_axi_input_V_ARCACHE );
    sensitive << ( grp_dense_fu_208_m_axi_input_V_ARCACHE );
    sensitive << ( grp_pool_fu_218_m_axi_input_V_ARCACHE );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_gmem_ARID);
    sensitive << ( grp_conv2_fu_188_m_axi_input_V_ARID );
    sensitive << ( grp_conv1_fu_198_m_axi_input_V_ARID );
    sensitive << ( grp_dense_fu_208_m_axi_input_V_ARID );
    sensitive << ( grp_pool_fu_218_m_axi_input_V_ARID );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_gmem_ARLEN);
    sensitive << ( grp_conv2_fu_188_m_axi_input_V_ARLEN );
    sensitive << ( grp_conv1_fu_198_m_axi_input_V_ARLEN );
    sensitive << ( grp_dense_fu_208_m_axi_input_V_ARLEN );
    sensitive << ( grp_pool_fu_218_m_axi_input_V_ARLEN );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_gmem_ARLOCK);
    sensitive << ( grp_conv2_fu_188_m_axi_input_V_ARLOCK );
    sensitive << ( grp_conv1_fu_198_m_axi_input_V_ARLOCK );
    sensitive << ( grp_dense_fu_208_m_axi_input_V_ARLOCK );
    sensitive << ( grp_pool_fu_218_m_axi_input_V_ARLOCK );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_gmem_ARPROT);
    sensitive << ( grp_conv2_fu_188_m_axi_input_V_ARPROT );
    sensitive << ( grp_conv1_fu_198_m_axi_input_V_ARPROT );
    sensitive << ( grp_dense_fu_208_m_axi_input_V_ARPROT );
    sensitive << ( grp_pool_fu_218_m_axi_input_V_ARPROT );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_gmem_ARQOS);
    sensitive << ( grp_conv2_fu_188_m_axi_input_V_ARQOS );
    sensitive << ( grp_conv1_fu_198_m_axi_input_V_ARQOS );
    sensitive << ( grp_dense_fu_208_m_axi_input_V_ARQOS );
    sensitive << ( grp_pool_fu_218_m_axi_input_V_ARQOS );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_gmem_ARREGION);
    sensitive << ( grp_conv2_fu_188_m_axi_input_V_ARREGION );
    sensitive << ( grp_conv1_fu_198_m_axi_input_V_ARREGION );
    sensitive << ( grp_dense_fu_208_m_axi_input_V_ARREGION );
    sensitive << ( grp_pool_fu_218_m_axi_input_V_ARREGION );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_gmem_ARSIZE);
    sensitive << ( grp_conv2_fu_188_m_axi_input_V_ARSIZE );
    sensitive << ( grp_conv1_fu_198_m_axi_input_V_ARSIZE );
    sensitive << ( grp_dense_fu_208_m_axi_input_V_ARSIZE );
    sensitive << ( grp_pool_fu_218_m_axi_input_V_ARSIZE );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_gmem_ARUSER);
    sensitive << ( grp_conv2_fu_188_m_axi_input_V_ARUSER );
    sensitive << ( grp_conv1_fu_198_m_axi_input_V_ARUSER );
    sensitive << ( grp_dense_fu_208_m_axi_input_V_ARUSER );
    sensitive << ( grp_pool_fu_218_m_axi_input_V_ARUSER );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_gmem_ARVALID);
    sensitive << ( grp_conv2_fu_188_m_axi_input_V_ARVALID );
    sensitive << ( grp_conv1_fu_198_m_axi_input_V_ARVALID );
    sensitive << ( grp_dense_fu_208_m_axi_input_V_ARVALID );
    sensitive << ( grp_pool_fu_218_m_axi_input_V_ARVALID );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_gmem_AWADDR);
    sensitive << ( grp_conv2_fu_188_m_axi_input_V_AWADDR );
    sensitive << ( grp_conv1_fu_198_m_axi_input_V_AWADDR );
    sensitive << ( grp_dense_fu_208_m_axi_input_V_AWADDR );
    sensitive << ( grp_pool_fu_218_m_axi_input_V_AWADDR );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_gmem_AWBURST);
    sensitive << ( grp_conv2_fu_188_m_axi_input_V_AWBURST );
    sensitive << ( grp_conv1_fu_198_m_axi_input_V_AWBURST );
    sensitive << ( grp_dense_fu_208_m_axi_input_V_AWBURST );
    sensitive << ( grp_pool_fu_218_m_axi_input_V_AWBURST );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_gmem_AWCACHE);
    sensitive << ( grp_conv2_fu_188_m_axi_input_V_AWCACHE );
    sensitive << ( grp_conv1_fu_198_m_axi_input_V_AWCACHE );
    sensitive << ( grp_dense_fu_208_m_axi_input_V_AWCACHE );
    sensitive << ( grp_pool_fu_218_m_axi_input_V_AWCACHE );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_gmem_AWID);
    sensitive << ( grp_conv2_fu_188_m_axi_input_V_AWID );
    sensitive << ( grp_conv1_fu_198_m_axi_input_V_AWID );
    sensitive << ( grp_dense_fu_208_m_axi_input_V_AWID );
    sensitive << ( grp_pool_fu_218_m_axi_input_V_AWID );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_gmem_AWLEN);
    sensitive << ( grp_conv2_fu_188_m_axi_input_V_AWLEN );
    sensitive << ( grp_conv1_fu_198_m_axi_input_V_AWLEN );
    sensitive << ( grp_dense_fu_208_m_axi_input_V_AWLEN );
    sensitive << ( grp_pool_fu_218_m_axi_input_V_AWLEN );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_gmem_AWLOCK);
    sensitive << ( grp_conv2_fu_188_m_axi_input_V_AWLOCK );
    sensitive << ( grp_conv1_fu_198_m_axi_input_V_AWLOCK );
    sensitive << ( grp_dense_fu_208_m_axi_input_V_AWLOCK );
    sensitive << ( grp_pool_fu_218_m_axi_input_V_AWLOCK );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_gmem_AWPROT);
    sensitive << ( grp_conv2_fu_188_m_axi_input_V_AWPROT );
    sensitive << ( grp_conv1_fu_198_m_axi_input_V_AWPROT );
    sensitive << ( grp_dense_fu_208_m_axi_input_V_AWPROT );
    sensitive << ( grp_pool_fu_218_m_axi_input_V_AWPROT );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_gmem_AWQOS);
    sensitive << ( grp_conv2_fu_188_m_axi_input_V_AWQOS );
    sensitive << ( grp_conv1_fu_198_m_axi_input_V_AWQOS );
    sensitive << ( grp_dense_fu_208_m_axi_input_V_AWQOS );
    sensitive << ( grp_pool_fu_218_m_axi_input_V_AWQOS );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_gmem_AWREGION);
    sensitive << ( grp_conv2_fu_188_m_axi_input_V_AWREGION );
    sensitive << ( grp_conv1_fu_198_m_axi_input_V_AWREGION );
    sensitive << ( grp_dense_fu_208_m_axi_input_V_AWREGION );
    sensitive << ( grp_pool_fu_218_m_axi_input_V_AWREGION );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_gmem_AWSIZE);
    sensitive << ( grp_conv2_fu_188_m_axi_input_V_AWSIZE );
    sensitive << ( grp_conv1_fu_198_m_axi_input_V_AWSIZE );
    sensitive << ( grp_dense_fu_208_m_axi_input_V_AWSIZE );
    sensitive << ( grp_pool_fu_218_m_axi_input_V_AWSIZE );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_gmem_AWUSER);
    sensitive << ( grp_conv2_fu_188_m_axi_input_V_AWUSER );
    sensitive << ( grp_conv1_fu_198_m_axi_input_V_AWUSER );
    sensitive << ( grp_dense_fu_208_m_axi_input_V_AWUSER );
    sensitive << ( grp_pool_fu_218_m_axi_input_V_AWUSER );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_gmem_AWVALID);
    sensitive << ( grp_conv2_fu_188_m_axi_input_V_AWVALID );
    sensitive << ( grp_conv1_fu_198_m_axi_input_V_AWVALID );
    sensitive << ( grp_dense_fu_208_m_axi_input_V_AWVALID );
    sensitive << ( grp_pool_fu_218_m_axi_input_V_AWVALID );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_gmem_BREADY);
    sensitive << ( grp_conv2_fu_188_m_axi_input_V_BREADY );
    sensitive << ( grp_conv1_fu_198_m_axi_input_V_BREADY );
    sensitive << ( grp_dense_fu_208_m_axi_input_V_BREADY );
    sensitive << ( grp_pool_fu_218_m_axi_input_V_BREADY );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_gmem_RREADY);
    sensitive << ( grp_conv2_fu_188_m_axi_input_V_RREADY );
    sensitive << ( grp_conv1_fu_198_m_axi_input_V_RREADY );
    sensitive << ( grp_dense_fu_208_m_axi_input_V_RREADY );
    sensitive << ( grp_pool_fu_218_m_axi_input_V_RREADY );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_gmem_WDATA);
    sensitive << ( grp_conv2_fu_188_m_axi_input_V_WDATA );
    sensitive << ( grp_conv1_fu_198_m_axi_input_V_WDATA );
    sensitive << ( grp_dense_fu_208_m_axi_input_V_WDATA );
    sensitive << ( grp_pool_fu_218_m_axi_input_V_WDATA );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_gmem_WID);
    sensitive << ( grp_conv2_fu_188_m_axi_input_V_WID );
    sensitive << ( grp_conv1_fu_198_m_axi_input_V_WID );
    sensitive << ( grp_dense_fu_208_m_axi_input_V_WID );
    sensitive << ( grp_pool_fu_218_m_axi_input_V_WID );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_gmem_WLAST);
    sensitive << ( grp_conv2_fu_188_m_axi_input_V_WLAST );
    sensitive << ( grp_conv1_fu_198_m_axi_input_V_WLAST );
    sensitive << ( grp_dense_fu_208_m_axi_input_V_WLAST );
    sensitive << ( grp_pool_fu_218_m_axi_input_V_WLAST );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_gmem_WSTRB);
    sensitive << ( grp_conv2_fu_188_m_axi_input_V_WSTRB );
    sensitive << ( grp_conv1_fu_198_m_axi_input_V_WSTRB );
    sensitive << ( grp_dense_fu_208_m_axi_input_V_WSTRB );
    sensitive << ( grp_pool_fu_218_m_axi_input_V_WSTRB );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_gmem_WUSER);
    sensitive << ( grp_conv2_fu_188_m_axi_input_V_WUSER );
    sensitive << ( grp_conv1_fu_198_m_axi_input_V_WUSER );
    sensitive << ( grp_dense_fu_208_m_axi_input_V_WUSER );
    sensitive << ( grp_pool_fu_218_m_axi_input_V_WUSER );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_gmem_WVALID);
    sensitive << ( grp_conv2_fu_188_m_axi_input_V_WVALID );
    sensitive << ( grp_conv1_fu_198_m_axi_input_V_WVALID );
    sensitive << ( grp_dense_fu_208_m_axi_input_V_WVALID );
    sensitive << ( grp_pool_fu_218_m_axi_input_V_WVALID );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_grp_conv1_fu_198_ap_start);
    sensitive << ( grp_conv1_fu_198_ap_start_reg );

    SC_METHOD(thread_grp_conv2_fu_188_ap_start);
    sensitive << ( grp_conv2_fu_188_ap_start_reg );

    SC_METHOD(thread_grp_dense_fu_208_ap_start);
    sensitive << ( grp_dense_fu_208_ap_start_reg );

    SC_METHOD(thread_grp_pool_fu_218_Cin);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_grp_pool_fu_218_H);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_grp_pool_fu_218_W);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_grp_pool_fu_218_ap_start);
    sensitive << ( grp_pool_fu_218_ap_start_reg );

    SC_METHOD(thread_grp_pool_fu_218_input_V_offset);
    sensitive << ( outputConv2_V_read_reg_256 );
    sensitive << ( outputConv_V_read_reg_288 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_grp_pool_fu_218_outputPool_V_offset);
    sensitive << ( outputPool2_V_read_reg_250 );
    sensitive << ( outputPool_V_read_reg_272 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( grp_conv2_fu_188_ap_done );
    sensitive << ( grp_conv1_fu_198_ap_done );
    sensitive << ( grp_dense_fu_208_ap_done );
    sensitive << ( grp_pool_fu_218_ap_done );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "00000000001";
    grp_conv2_fu_188_ap_start_reg = SC_LOGIC_0;
    grp_conv1_fu_198_ap_start_reg = SC_LOGIC_0;
    grp_dense_fu_208_ap_start_reg = SC_LOGIC_0;
    grp_pool_fu_218_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "top_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, m_axi_gmem_AWVALID, "(port)m_axi_gmem_AWVALID");
    sc_trace(mVcdFile, m_axi_gmem_AWREADY, "(port)m_axi_gmem_AWREADY");
    sc_trace(mVcdFile, m_axi_gmem_AWADDR, "(port)m_axi_gmem_AWADDR");
    sc_trace(mVcdFile, m_axi_gmem_AWID, "(port)m_axi_gmem_AWID");
    sc_trace(mVcdFile, m_axi_gmem_AWLEN, "(port)m_axi_gmem_AWLEN");
    sc_trace(mVcdFile, m_axi_gmem_AWSIZE, "(port)m_axi_gmem_AWSIZE");
    sc_trace(mVcdFile, m_axi_gmem_AWBURST, "(port)m_axi_gmem_AWBURST");
    sc_trace(mVcdFile, m_axi_gmem_AWLOCK, "(port)m_axi_gmem_AWLOCK");
    sc_trace(mVcdFile, m_axi_gmem_AWCACHE, "(port)m_axi_gmem_AWCACHE");
    sc_trace(mVcdFile, m_axi_gmem_AWPROT, "(port)m_axi_gmem_AWPROT");
    sc_trace(mVcdFile, m_axi_gmem_AWQOS, "(port)m_axi_gmem_AWQOS");
    sc_trace(mVcdFile, m_axi_gmem_AWREGION, "(port)m_axi_gmem_AWREGION");
    sc_trace(mVcdFile, m_axi_gmem_AWUSER, "(port)m_axi_gmem_AWUSER");
    sc_trace(mVcdFile, m_axi_gmem_WVALID, "(port)m_axi_gmem_WVALID");
    sc_trace(mVcdFile, m_axi_gmem_WREADY, "(port)m_axi_gmem_WREADY");
    sc_trace(mVcdFile, m_axi_gmem_WDATA, "(port)m_axi_gmem_WDATA");
    sc_trace(mVcdFile, m_axi_gmem_WSTRB, "(port)m_axi_gmem_WSTRB");
    sc_trace(mVcdFile, m_axi_gmem_WLAST, "(port)m_axi_gmem_WLAST");
    sc_trace(mVcdFile, m_axi_gmem_WID, "(port)m_axi_gmem_WID");
    sc_trace(mVcdFile, m_axi_gmem_WUSER, "(port)m_axi_gmem_WUSER");
    sc_trace(mVcdFile, m_axi_gmem_ARVALID, "(port)m_axi_gmem_ARVALID");
    sc_trace(mVcdFile, m_axi_gmem_ARREADY, "(port)m_axi_gmem_ARREADY");
    sc_trace(mVcdFile, m_axi_gmem_ARADDR, "(port)m_axi_gmem_ARADDR");
    sc_trace(mVcdFile, m_axi_gmem_ARID, "(port)m_axi_gmem_ARID");
    sc_trace(mVcdFile, m_axi_gmem_ARLEN, "(port)m_axi_gmem_ARLEN");
    sc_trace(mVcdFile, m_axi_gmem_ARSIZE, "(port)m_axi_gmem_ARSIZE");
    sc_trace(mVcdFile, m_axi_gmem_ARBURST, "(port)m_axi_gmem_ARBURST");
    sc_trace(mVcdFile, m_axi_gmem_ARLOCK, "(port)m_axi_gmem_ARLOCK");
    sc_trace(mVcdFile, m_axi_gmem_ARCACHE, "(port)m_axi_gmem_ARCACHE");
    sc_trace(mVcdFile, m_axi_gmem_ARPROT, "(port)m_axi_gmem_ARPROT");
    sc_trace(mVcdFile, m_axi_gmem_ARQOS, "(port)m_axi_gmem_ARQOS");
    sc_trace(mVcdFile, m_axi_gmem_ARREGION, "(port)m_axi_gmem_ARREGION");
    sc_trace(mVcdFile, m_axi_gmem_ARUSER, "(port)m_axi_gmem_ARUSER");
    sc_trace(mVcdFile, m_axi_gmem_RVALID, "(port)m_axi_gmem_RVALID");
    sc_trace(mVcdFile, m_axi_gmem_RREADY, "(port)m_axi_gmem_RREADY");
    sc_trace(mVcdFile, m_axi_gmem_RDATA, "(port)m_axi_gmem_RDATA");
    sc_trace(mVcdFile, m_axi_gmem_RLAST, "(port)m_axi_gmem_RLAST");
    sc_trace(mVcdFile, m_axi_gmem_RID, "(port)m_axi_gmem_RID");
    sc_trace(mVcdFile, m_axi_gmem_RUSER, "(port)m_axi_gmem_RUSER");
    sc_trace(mVcdFile, m_axi_gmem_RRESP, "(port)m_axi_gmem_RRESP");
    sc_trace(mVcdFile, m_axi_gmem_BVALID, "(port)m_axi_gmem_BVALID");
    sc_trace(mVcdFile, m_axi_gmem_BREADY, "(port)m_axi_gmem_BREADY");
    sc_trace(mVcdFile, m_axi_gmem_BRESP, "(port)m_axi_gmem_BRESP");
    sc_trace(mVcdFile, m_axi_gmem_BID, "(port)m_axi_gmem_BID");
    sc_trace(mVcdFile, m_axi_gmem_BUSER, "(port)m_axi_gmem_BUSER");
    sc_trace(mVcdFile, s_axi_control_AWVALID, "(port)s_axi_control_AWVALID");
    sc_trace(mVcdFile, s_axi_control_AWREADY, "(port)s_axi_control_AWREADY");
    sc_trace(mVcdFile, s_axi_control_AWADDR, "(port)s_axi_control_AWADDR");
    sc_trace(mVcdFile, s_axi_control_WVALID, "(port)s_axi_control_WVALID");
    sc_trace(mVcdFile, s_axi_control_WREADY, "(port)s_axi_control_WREADY");
    sc_trace(mVcdFile, s_axi_control_WDATA, "(port)s_axi_control_WDATA");
    sc_trace(mVcdFile, s_axi_control_WSTRB, "(port)s_axi_control_WSTRB");
    sc_trace(mVcdFile, s_axi_control_ARVALID, "(port)s_axi_control_ARVALID");
    sc_trace(mVcdFile, s_axi_control_ARREADY, "(port)s_axi_control_ARREADY");
    sc_trace(mVcdFile, s_axi_control_ARADDR, "(port)s_axi_control_ARADDR");
    sc_trace(mVcdFile, s_axi_control_RVALID, "(port)s_axi_control_RVALID");
    sc_trace(mVcdFile, s_axi_control_RREADY, "(port)s_axi_control_RREADY");
    sc_trace(mVcdFile, s_axi_control_RDATA, "(port)s_axi_control_RDATA");
    sc_trace(mVcdFile, s_axi_control_RRESP, "(port)s_axi_control_RRESP");
    sc_trace(mVcdFile, s_axi_control_BVALID, "(port)s_axi_control_BVALID");
    sc_trace(mVcdFile, s_axi_control_BREADY, "(port)s_axi_control_BREADY");
    sc_trace(mVcdFile, s_axi_control_BRESP, "(port)s_axi_control_BRESP");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, input_V, "input_V");
    sc_trace(mVcdFile, outputConv_V, "outputConv_V");
    sc_trace(mVcdFile, weight_V, "weight_V");
    sc_trace(mVcdFile, bias_V, "bias_V");
    sc_trace(mVcdFile, outputPool_V, "outputPool_V");
    sc_trace(mVcdFile, weight2_V, "weight2_V");
    sc_trace(mVcdFile, bias2_V, "bias2_V");
    sc_trace(mVcdFile, outputConv2_V, "outputConv2_V");
    sc_trace(mVcdFile, outputPool2_V, "outputPool2_V");
    sc_trace(mVcdFile, outputDense_V, "outputDense_V");
    sc_trace(mVcdFile, fcWeight_V, "fcWeight_V");
    sc_trace(mVcdFile, fcBias_V, "fcBias_V");
    sc_trace(mVcdFile, gmem_AWVALID, "gmem_AWVALID");
    sc_trace(mVcdFile, gmem_AWREADY, "gmem_AWREADY");
    sc_trace(mVcdFile, gmem_AWADDR, "gmem_AWADDR");
    sc_trace(mVcdFile, gmem_AWID, "gmem_AWID");
    sc_trace(mVcdFile, gmem_AWLEN, "gmem_AWLEN");
    sc_trace(mVcdFile, gmem_AWSIZE, "gmem_AWSIZE");
    sc_trace(mVcdFile, gmem_AWBURST, "gmem_AWBURST");
    sc_trace(mVcdFile, gmem_AWLOCK, "gmem_AWLOCK");
    sc_trace(mVcdFile, gmem_AWCACHE, "gmem_AWCACHE");
    sc_trace(mVcdFile, gmem_AWPROT, "gmem_AWPROT");
    sc_trace(mVcdFile, gmem_AWQOS, "gmem_AWQOS");
    sc_trace(mVcdFile, gmem_AWREGION, "gmem_AWREGION");
    sc_trace(mVcdFile, gmem_AWUSER, "gmem_AWUSER");
    sc_trace(mVcdFile, gmem_WVALID, "gmem_WVALID");
    sc_trace(mVcdFile, gmem_WREADY, "gmem_WREADY");
    sc_trace(mVcdFile, gmem_WDATA, "gmem_WDATA");
    sc_trace(mVcdFile, gmem_WSTRB, "gmem_WSTRB");
    sc_trace(mVcdFile, gmem_WLAST, "gmem_WLAST");
    sc_trace(mVcdFile, gmem_WID, "gmem_WID");
    sc_trace(mVcdFile, gmem_WUSER, "gmem_WUSER");
    sc_trace(mVcdFile, gmem_ARVALID, "gmem_ARVALID");
    sc_trace(mVcdFile, gmem_ARREADY, "gmem_ARREADY");
    sc_trace(mVcdFile, gmem_ARADDR, "gmem_ARADDR");
    sc_trace(mVcdFile, gmem_ARID, "gmem_ARID");
    sc_trace(mVcdFile, gmem_ARLEN, "gmem_ARLEN");
    sc_trace(mVcdFile, gmem_ARSIZE, "gmem_ARSIZE");
    sc_trace(mVcdFile, gmem_ARBURST, "gmem_ARBURST");
    sc_trace(mVcdFile, gmem_ARLOCK, "gmem_ARLOCK");
    sc_trace(mVcdFile, gmem_ARCACHE, "gmem_ARCACHE");
    sc_trace(mVcdFile, gmem_ARPROT, "gmem_ARPROT");
    sc_trace(mVcdFile, gmem_ARQOS, "gmem_ARQOS");
    sc_trace(mVcdFile, gmem_ARREGION, "gmem_ARREGION");
    sc_trace(mVcdFile, gmem_ARUSER, "gmem_ARUSER");
    sc_trace(mVcdFile, gmem_RVALID, "gmem_RVALID");
    sc_trace(mVcdFile, gmem_RREADY, "gmem_RREADY");
    sc_trace(mVcdFile, gmem_RDATA, "gmem_RDATA");
    sc_trace(mVcdFile, gmem_RLAST, "gmem_RLAST");
    sc_trace(mVcdFile, gmem_RID, "gmem_RID");
    sc_trace(mVcdFile, gmem_RUSER, "gmem_RUSER");
    sc_trace(mVcdFile, gmem_RRESP, "gmem_RRESP");
    sc_trace(mVcdFile, gmem_BVALID, "gmem_BVALID");
    sc_trace(mVcdFile, gmem_BREADY, "gmem_BREADY");
    sc_trace(mVcdFile, gmem_BRESP, "gmem_BRESP");
    sc_trace(mVcdFile, gmem_BID, "gmem_BID");
    sc_trace(mVcdFile, gmem_BUSER, "gmem_BUSER");
    sc_trace(mVcdFile, fcBias_V_read_reg_235, "fcBias_V_read_reg_235");
    sc_trace(mVcdFile, fcWeight_V_read_reg_240, "fcWeight_V_read_reg_240");
    sc_trace(mVcdFile, outputDense_V_read_reg_245, "outputDense_V_read_reg_245");
    sc_trace(mVcdFile, outputPool2_V_read_reg_250, "outputPool2_V_read_reg_250");
    sc_trace(mVcdFile, outputConv2_V_read_reg_256, "outputConv2_V_read_reg_256");
    sc_trace(mVcdFile, bias2_V_read_reg_262, "bias2_V_read_reg_262");
    sc_trace(mVcdFile, weight2_V_read_reg_267, "weight2_V_read_reg_267");
    sc_trace(mVcdFile, outputPool_V_read_reg_272, "outputPool_V_read_reg_272");
    sc_trace(mVcdFile, bias_V_read_reg_278, "bias_V_read_reg_278");
    sc_trace(mVcdFile, weight_V_read_reg_283, "weight_V_read_reg_283");
    sc_trace(mVcdFile, outputConv_V_read_reg_288, "outputConv_V_read_reg_288");
    sc_trace(mVcdFile, input_V_read_reg_294, "input_V_read_reg_294");
    sc_trace(mVcdFile, grp_conv2_fu_188_ap_start, "grp_conv2_fu_188_ap_start");
    sc_trace(mVcdFile, grp_conv2_fu_188_ap_done, "grp_conv2_fu_188_ap_done");
    sc_trace(mVcdFile, grp_conv2_fu_188_ap_idle, "grp_conv2_fu_188_ap_idle");
    sc_trace(mVcdFile, grp_conv2_fu_188_ap_ready, "grp_conv2_fu_188_ap_ready");
    sc_trace(mVcdFile, grp_conv2_fu_188_m_axi_input_V_AWVALID, "grp_conv2_fu_188_m_axi_input_V_AWVALID");
    sc_trace(mVcdFile, grp_conv2_fu_188_m_axi_input_V_AWADDR, "grp_conv2_fu_188_m_axi_input_V_AWADDR");
    sc_trace(mVcdFile, grp_conv2_fu_188_m_axi_input_V_AWID, "grp_conv2_fu_188_m_axi_input_V_AWID");
    sc_trace(mVcdFile, grp_conv2_fu_188_m_axi_input_V_AWLEN, "grp_conv2_fu_188_m_axi_input_V_AWLEN");
    sc_trace(mVcdFile, grp_conv2_fu_188_m_axi_input_V_AWSIZE, "grp_conv2_fu_188_m_axi_input_V_AWSIZE");
    sc_trace(mVcdFile, grp_conv2_fu_188_m_axi_input_V_AWBURST, "grp_conv2_fu_188_m_axi_input_V_AWBURST");
    sc_trace(mVcdFile, grp_conv2_fu_188_m_axi_input_V_AWLOCK, "grp_conv2_fu_188_m_axi_input_V_AWLOCK");
    sc_trace(mVcdFile, grp_conv2_fu_188_m_axi_input_V_AWCACHE, "grp_conv2_fu_188_m_axi_input_V_AWCACHE");
    sc_trace(mVcdFile, grp_conv2_fu_188_m_axi_input_V_AWPROT, "grp_conv2_fu_188_m_axi_input_V_AWPROT");
    sc_trace(mVcdFile, grp_conv2_fu_188_m_axi_input_V_AWQOS, "grp_conv2_fu_188_m_axi_input_V_AWQOS");
    sc_trace(mVcdFile, grp_conv2_fu_188_m_axi_input_V_AWREGION, "grp_conv2_fu_188_m_axi_input_V_AWREGION");
    sc_trace(mVcdFile, grp_conv2_fu_188_m_axi_input_V_AWUSER, "grp_conv2_fu_188_m_axi_input_V_AWUSER");
    sc_trace(mVcdFile, grp_conv2_fu_188_m_axi_input_V_WVALID, "grp_conv2_fu_188_m_axi_input_V_WVALID");
    sc_trace(mVcdFile, grp_conv2_fu_188_m_axi_input_V_WDATA, "grp_conv2_fu_188_m_axi_input_V_WDATA");
    sc_trace(mVcdFile, grp_conv2_fu_188_m_axi_input_V_WSTRB, "grp_conv2_fu_188_m_axi_input_V_WSTRB");
    sc_trace(mVcdFile, grp_conv2_fu_188_m_axi_input_V_WLAST, "grp_conv2_fu_188_m_axi_input_V_WLAST");
    sc_trace(mVcdFile, grp_conv2_fu_188_m_axi_input_V_WID, "grp_conv2_fu_188_m_axi_input_V_WID");
    sc_trace(mVcdFile, grp_conv2_fu_188_m_axi_input_V_WUSER, "grp_conv2_fu_188_m_axi_input_V_WUSER");
    sc_trace(mVcdFile, grp_conv2_fu_188_m_axi_input_V_ARVALID, "grp_conv2_fu_188_m_axi_input_V_ARVALID");
    sc_trace(mVcdFile, grp_conv2_fu_188_m_axi_input_V_ARADDR, "grp_conv2_fu_188_m_axi_input_V_ARADDR");
    sc_trace(mVcdFile, grp_conv2_fu_188_m_axi_input_V_ARID, "grp_conv2_fu_188_m_axi_input_V_ARID");
    sc_trace(mVcdFile, grp_conv2_fu_188_m_axi_input_V_ARLEN, "grp_conv2_fu_188_m_axi_input_V_ARLEN");
    sc_trace(mVcdFile, grp_conv2_fu_188_m_axi_input_V_ARSIZE, "grp_conv2_fu_188_m_axi_input_V_ARSIZE");
    sc_trace(mVcdFile, grp_conv2_fu_188_m_axi_input_V_ARBURST, "grp_conv2_fu_188_m_axi_input_V_ARBURST");
    sc_trace(mVcdFile, grp_conv2_fu_188_m_axi_input_V_ARLOCK, "grp_conv2_fu_188_m_axi_input_V_ARLOCK");
    sc_trace(mVcdFile, grp_conv2_fu_188_m_axi_input_V_ARCACHE, "grp_conv2_fu_188_m_axi_input_V_ARCACHE");
    sc_trace(mVcdFile, grp_conv2_fu_188_m_axi_input_V_ARPROT, "grp_conv2_fu_188_m_axi_input_V_ARPROT");
    sc_trace(mVcdFile, grp_conv2_fu_188_m_axi_input_V_ARQOS, "grp_conv2_fu_188_m_axi_input_V_ARQOS");
    sc_trace(mVcdFile, grp_conv2_fu_188_m_axi_input_V_ARREGION, "grp_conv2_fu_188_m_axi_input_V_ARREGION");
    sc_trace(mVcdFile, grp_conv2_fu_188_m_axi_input_V_ARUSER, "grp_conv2_fu_188_m_axi_input_V_ARUSER");
    sc_trace(mVcdFile, grp_conv2_fu_188_m_axi_input_V_RREADY, "grp_conv2_fu_188_m_axi_input_V_RREADY");
    sc_trace(mVcdFile, grp_conv2_fu_188_m_axi_input_V_BREADY, "grp_conv2_fu_188_m_axi_input_V_BREADY");
    sc_trace(mVcdFile, grp_conv1_fu_198_ap_start, "grp_conv1_fu_198_ap_start");
    sc_trace(mVcdFile, grp_conv1_fu_198_ap_done, "grp_conv1_fu_198_ap_done");
    sc_trace(mVcdFile, grp_conv1_fu_198_ap_idle, "grp_conv1_fu_198_ap_idle");
    sc_trace(mVcdFile, grp_conv1_fu_198_ap_ready, "grp_conv1_fu_198_ap_ready");
    sc_trace(mVcdFile, grp_conv1_fu_198_m_axi_input_V_AWVALID, "grp_conv1_fu_198_m_axi_input_V_AWVALID");
    sc_trace(mVcdFile, grp_conv1_fu_198_m_axi_input_V_AWADDR, "grp_conv1_fu_198_m_axi_input_V_AWADDR");
    sc_trace(mVcdFile, grp_conv1_fu_198_m_axi_input_V_AWID, "grp_conv1_fu_198_m_axi_input_V_AWID");
    sc_trace(mVcdFile, grp_conv1_fu_198_m_axi_input_V_AWLEN, "grp_conv1_fu_198_m_axi_input_V_AWLEN");
    sc_trace(mVcdFile, grp_conv1_fu_198_m_axi_input_V_AWSIZE, "grp_conv1_fu_198_m_axi_input_V_AWSIZE");
    sc_trace(mVcdFile, grp_conv1_fu_198_m_axi_input_V_AWBURST, "grp_conv1_fu_198_m_axi_input_V_AWBURST");
    sc_trace(mVcdFile, grp_conv1_fu_198_m_axi_input_V_AWLOCK, "grp_conv1_fu_198_m_axi_input_V_AWLOCK");
    sc_trace(mVcdFile, grp_conv1_fu_198_m_axi_input_V_AWCACHE, "grp_conv1_fu_198_m_axi_input_V_AWCACHE");
    sc_trace(mVcdFile, grp_conv1_fu_198_m_axi_input_V_AWPROT, "grp_conv1_fu_198_m_axi_input_V_AWPROT");
    sc_trace(mVcdFile, grp_conv1_fu_198_m_axi_input_V_AWQOS, "grp_conv1_fu_198_m_axi_input_V_AWQOS");
    sc_trace(mVcdFile, grp_conv1_fu_198_m_axi_input_V_AWREGION, "grp_conv1_fu_198_m_axi_input_V_AWREGION");
    sc_trace(mVcdFile, grp_conv1_fu_198_m_axi_input_V_AWUSER, "grp_conv1_fu_198_m_axi_input_V_AWUSER");
    sc_trace(mVcdFile, grp_conv1_fu_198_m_axi_input_V_WVALID, "grp_conv1_fu_198_m_axi_input_V_WVALID");
    sc_trace(mVcdFile, grp_conv1_fu_198_m_axi_input_V_WDATA, "grp_conv1_fu_198_m_axi_input_V_WDATA");
    sc_trace(mVcdFile, grp_conv1_fu_198_m_axi_input_V_WSTRB, "grp_conv1_fu_198_m_axi_input_V_WSTRB");
    sc_trace(mVcdFile, grp_conv1_fu_198_m_axi_input_V_WLAST, "grp_conv1_fu_198_m_axi_input_V_WLAST");
    sc_trace(mVcdFile, grp_conv1_fu_198_m_axi_input_V_WID, "grp_conv1_fu_198_m_axi_input_V_WID");
    sc_trace(mVcdFile, grp_conv1_fu_198_m_axi_input_V_WUSER, "grp_conv1_fu_198_m_axi_input_V_WUSER");
    sc_trace(mVcdFile, grp_conv1_fu_198_m_axi_input_V_ARVALID, "grp_conv1_fu_198_m_axi_input_V_ARVALID");
    sc_trace(mVcdFile, grp_conv1_fu_198_m_axi_input_V_ARADDR, "grp_conv1_fu_198_m_axi_input_V_ARADDR");
    sc_trace(mVcdFile, grp_conv1_fu_198_m_axi_input_V_ARID, "grp_conv1_fu_198_m_axi_input_V_ARID");
    sc_trace(mVcdFile, grp_conv1_fu_198_m_axi_input_V_ARLEN, "grp_conv1_fu_198_m_axi_input_V_ARLEN");
    sc_trace(mVcdFile, grp_conv1_fu_198_m_axi_input_V_ARSIZE, "grp_conv1_fu_198_m_axi_input_V_ARSIZE");
    sc_trace(mVcdFile, grp_conv1_fu_198_m_axi_input_V_ARBURST, "grp_conv1_fu_198_m_axi_input_V_ARBURST");
    sc_trace(mVcdFile, grp_conv1_fu_198_m_axi_input_V_ARLOCK, "grp_conv1_fu_198_m_axi_input_V_ARLOCK");
    sc_trace(mVcdFile, grp_conv1_fu_198_m_axi_input_V_ARCACHE, "grp_conv1_fu_198_m_axi_input_V_ARCACHE");
    sc_trace(mVcdFile, grp_conv1_fu_198_m_axi_input_V_ARPROT, "grp_conv1_fu_198_m_axi_input_V_ARPROT");
    sc_trace(mVcdFile, grp_conv1_fu_198_m_axi_input_V_ARQOS, "grp_conv1_fu_198_m_axi_input_V_ARQOS");
    sc_trace(mVcdFile, grp_conv1_fu_198_m_axi_input_V_ARREGION, "grp_conv1_fu_198_m_axi_input_V_ARREGION");
    sc_trace(mVcdFile, grp_conv1_fu_198_m_axi_input_V_ARUSER, "grp_conv1_fu_198_m_axi_input_V_ARUSER");
    sc_trace(mVcdFile, grp_conv1_fu_198_m_axi_input_V_RREADY, "grp_conv1_fu_198_m_axi_input_V_RREADY");
    sc_trace(mVcdFile, grp_conv1_fu_198_m_axi_input_V_BREADY, "grp_conv1_fu_198_m_axi_input_V_BREADY");
    sc_trace(mVcdFile, grp_dense_fu_208_ap_start, "grp_dense_fu_208_ap_start");
    sc_trace(mVcdFile, grp_dense_fu_208_ap_done, "grp_dense_fu_208_ap_done");
    sc_trace(mVcdFile, grp_dense_fu_208_ap_idle, "grp_dense_fu_208_ap_idle");
    sc_trace(mVcdFile, grp_dense_fu_208_ap_ready, "grp_dense_fu_208_ap_ready");
    sc_trace(mVcdFile, grp_dense_fu_208_m_axi_input_V_AWVALID, "grp_dense_fu_208_m_axi_input_V_AWVALID");
    sc_trace(mVcdFile, grp_dense_fu_208_m_axi_input_V_AWADDR, "grp_dense_fu_208_m_axi_input_V_AWADDR");
    sc_trace(mVcdFile, grp_dense_fu_208_m_axi_input_V_AWID, "grp_dense_fu_208_m_axi_input_V_AWID");
    sc_trace(mVcdFile, grp_dense_fu_208_m_axi_input_V_AWLEN, "grp_dense_fu_208_m_axi_input_V_AWLEN");
    sc_trace(mVcdFile, grp_dense_fu_208_m_axi_input_V_AWSIZE, "grp_dense_fu_208_m_axi_input_V_AWSIZE");
    sc_trace(mVcdFile, grp_dense_fu_208_m_axi_input_V_AWBURST, "grp_dense_fu_208_m_axi_input_V_AWBURST");
    sc_trace(mVcdFile, grp_dense_fu_208_m_axi_input_V_AWLOCK, "grp_dense_fu_208_m_axi_input_V_AWLOCK");
    sc_trace(mVcdFile, grp_dense_fu_208_m_axi_input_V_AWCACHE, "grp_dense_fu_208_m_axi_input_V_AWCACHE");
    sc_trace(mVcdFile, grp_dense_fu_208_m_axi_input_V_AWPROT, "grp_dense_fu_208_m_axi_input_V_AWPROT");
    sc_trace(mVcdFile, grp_dense_fu_208_m_axi_input_V_AWQOS, "grp_dense_fu_208_m_axi_input_V_AWQOS");
    sc_trace(mVcdFile, grp_dense_fu_208_m_axi_input_V_AWREGION, "grp_dense_fu_208_m_axi_input_V_AWREGION");
    sc_trace(mVcdFile, grp_dense_fu_208_m_axi_input_V_AWUSER, "grp_dense_fu_208_m_axi_input_V_AWUSER");
    sc_trace(mVcdFile, grp_dense_fu_208_m_axi_input_V_WVALID, "grp_dense_fu_208_m_axi_input_V_WVALID");
    sc_trace(mVcdFile, grp_dense_fu_208_m_axi_input_V_WDATA, "grp_dense_fu_208_m_axi_input_V_WDATA");
    sc_trace(mVcdFile, grp_dense_fu_208_m_axi_input_V_WSTRB, "grp_dense_fu_208_m_axi_input_V_WSTRB");
    sc_trace(mVcdFile, grp_dense_fu_208_m_axi_input_V_WLAST, "grp_dense_fu_208_m_axi_input_V_WLAST");
    sc_trace(mVcdFile, grp_dense_fu_208_m_axi_input_V_WID, "grp_dense_fu_208_m_axi_input_V_WID");
    sc_trace(mVcdFile, grp_dense_fu_208_m_axi_input_V_WUSER, "grp_dense_fu_208_m_axi_input_V_WUSER");
    sc_trace(mVcdFile, grp_dense_fu_208_m_axi_input_V_ARVALID, "grp_dense_fu_208_m_axi_input_V_ARVALID");
    sc_trace(mVcdFile, grp_dense_fu_208_m_axi_input_V_ARADDR, "grp_dense_fu_208_m_axi_input_V_ARADDR");
    sc_trace(mVcdFile, grp_dense_fu_208_m_axi_input_V_ARID, "grp_dense_fu_208_m_axi_input_V_ARID");
    sc_trace(mVcdFile, grp_dense_fu_208_m_axi_input_V_ARLEN, "grp_dense_fu_208_m_axi_input_V_ARLEN");
    sc_trace(mVcdFile, grp_dense_fu_208_m_axi_input_V_ARSIZE, "grp_dense_fu_208_m_axi_input_V_ARSIZE");
    sc_trace(mVcdFile, grp_dense_fu_208_m_axi_input_V_ARBURST, "grp_dense_fu_208_m_axi_input_V_ARBURST");
    sc_trace(mVcdFile, grp_dense_fu_208_m_axi_input_V_ARLOCK, "grp_dense_fu_208_m_axi_input_V_ARLOCK");
    sc_trace(mVcdFile, grp_dense_fu_208_m_axi_input_V_ARCACHE, "grp_dense_fu_208_m_axi_input_V_ARCACHE");
    sc_trace(mVcdFile, grp_dense_fu_208_m_axi_input_V_ARPROT, "grp_dense_fu_208_m_axi_input_V_ARPROT");
    sc_trace(mVcdFile, grp_dense_fu_208_m_axi_input_V_ARQOS, "grp_dense_fu_208_m_axi_input_V_ARQOS");
    sc_trace(mVcdFile, grp_dense_fu_208_m_axi_input_V_ARREGION, "grp_dense_fu_208_m_axi_input_V_ARREGION");
    sc_trace(mVcdFile, grp_dense_fu_208_m_axi_input_V_ARUSER, "grp_dense_fu_208_m_axi_input_V_ARUSER");
    sc_trace(mVcdFile, grp_dense_fu_208_m_axi_input_V_RREADY, "grp_dense_fu_208_m_axi_input_V_RREADY");
    sc_trace(mVcdFile, grp_dense_fu_208_m_axi_input_V_BREADY, "grp_dense_fu_208_m_axi_input_V_BREADY");
    sc_trace(mVcdFile, grp_pool_fu_218_ap_start, "grp_pool_fu_218_ap_start");
    sc_trace(mVcdFile, grp_pool_fu_218_ap_done, "grp_pool_fu_218_ap_done");
    sc_trace(mVcdFile, grp_pool_fu_218_ap_idle, "grp_pool_fu_218_ap_idle");
    sc_trace(mVcdFile, grp_pool_fu_218_ap_ready, "grp_pool_fu_218_ap_ready");
    sc_trace(mVcdFile, grp_pool_fu_218_m_axi_input_V_AWVALID, "grp_pool_fu_218_m_axi_input_V_AWVALID");
    sc_trace(mVcdFile, grp_pool_fu_218_m_axi_input_V_AWADDR, "grp_pool_fu_218_m_axi_input_V_AWADDR");
    sc_trace(mVcdFile, grp_pool_fu_218_m_axi_input_V_AWID, "grp_pool_fu_218_m_axi_input_V_AWID");
    sc_trace(mVcdFile, grp_pool_fu_218_m_axi_input_V_AWLEN, "grp_pool_fu_218_m_axi_input_V_AWLEN");
    sc_trace(mVcdFile, grp_pool_fu_218_m_axi_input_V_AWSIZE, "grp_pool_fu_218_m_axi_input_V_AWSIZE");
    sc_trace(mVcdFile, grp_pool_fu_218_m_axi_input_V_AWBURST, "grp_pool_fu_218_m_axi_input_V_AWBURST");
    sc_trace(mVcdFile, grp_pool_fu_218_m_axi_input_V_AWLOCK, "grp_pool_fu_218_m_axi_input_V_AWLOCK");
    sc_trace(mVcdFile, grp_pool_fu_218_m_axi_input_V_AWCACHE, "grp_pool_fu_218_m_axi_input_V_AWCACHE");
    sc_trace(mVcdFile, grp_pool_fu_218_m_axi_input_V_AWPROT, "grp_pool_fu_218_m_axi_input_V_AWPROT");
    sc_trace(mVcdFile, grp_pool_fu_218_m_axi_input_V_AWQOS, "grp_pool_fu_218_m_axi_input_V_AWQOS");
    sc_trace(mVcdFile, grp_pool_fu_218_m_axi_input_V_AWREGION, "grp_pool_fu_218_m_axi_input_V_AWREGION");
    sc_trace(mVcdFile, grp_pool_fu_218_m_axi_input_V_AWUSER, "grp_pool_fu_218_m_axi_input_V_AWUSER");
    sc_trace(mVcdFile, grp_pool_fu_218_m_axi_input_V_WVALID, "grp_pool_fu_218_m_axi_input_V_WVALID");
    sc_trace(mVcdFile, grp_pool_fu_218_m_axi_input_V_WDATA, "grp_pool_fu_218_m_axi_input_V_WDATA");
    sc_trace(mVcdFile, grp_pool_fu_218_m_axi_input_V_WSTRB, "grp_pool_fu_218_m_axi_input_V_WSTRB");
    sc_trace(mVcdFile, grp_pool_fu_218_m_axi_input_V_WLAST, "grp_pool_fu_218_m_axi_input_V_WLAST");
    sc_trace(mVcdFile, grp_pool_fu_218_m_axi_input_V_WID, "grp_pool_fu_218_m_axi_input_V_WID");
    sc_trace(mVcdFile, grp_pool_fu_218_m_axi_input_V_WUSER, "grp_pool_fu_218_m_axi_input_V_WUSER");
    sc_trace(mVcdFile, grp_pool_fu_218_m_axi_input_V_ARVALID, "grp_pool_fu_218_m_axi_input_V_ARVALID");
    sc_trace(mVcdFile, grp_pool_fu_218_m_axi_input_V_ARADDR, "grp_pool_fu_218_m_axi_input_V_ARADDR");
    sc_trace(mVcdFile, grp_pool_fu_218_m_axi_input_V_ARID, "grp_pool_fu_218_m_axi_input_V_ARID");
    sc_trace(mVcdFile, grp_pool_fu_218_m_axi_input_V_ARLEN, "grp_pool_fu_218_m_axi_input_V_ARLEN");
    sc_trace(mVcdFile, grp_pool_fu_218_m_axi_input_V_ARSIZE, "grp_pool_fu_218_m_axi_input_V_ARSIZE");
    sc_trace(mVcdFile, grp_pool_fu_218_m_axi_input_V_ARBURST, "grp_pool_fu_218_m_axi_input_V_ARBURST");
    sc_trace(mVcdFile, grp_pool_fu_218_m_axi_input_V_ARLOCK, "grp_pool_fu_218_m_axi_input_V_ARLOCK");
    sc_trace(mVcdFile, grp_pool_fu_218_m_axi_input_V_ARCACHE, "grp_pool_fu_218_m_axi_input_V_ARCACHE");
    sc_trace(mVcdFile, grp_pool_fu_218_m_axi_input_V_ARPROT, "grp_pool_fu_218_m_axi_input_V_ARPROT");
    sc_trace(mVcdFile, grp_pool_fu_218_m_axi_input_V_ARQOS, "grp_pool_fu_218_m_axi_input_V_ARQOS");
    sc_trace(mVcdFile, grp_pool_fu_218_m_axi_input_V_ARREGION, "grp_pool_fu_218_m_axi_input_V_ARREGION");
    sc_trace(mVcdFile, grp_pool_fu_218_m_axi_input_V_ARUSER, "grp_pool_fu_218_m_axi_input_V_ARUSER");
    sc_trace(mVcdFile, grp_pool_fu_218_m_axi_input_V_RREADY, "grp_pool_fu_218_m_axi_input_V_RREADY");
    sc_trace(mVcdFile, grp_pool_fu_218_m_axi_input_V_BREADY, "grp_pool_fu_218_m_axi_input_V_BREADY");
    sc_trace(mVcdFile, grp_pool_fu_218_input_V_offset, "grp_pool_fu_218_input_V_offset");
    sc_trace(mVcdFile, grp_pool_fu_218_outputPool_V_offset, "grp_pool_fu_218_outputPool_V_offset");
    sc_trace(mVcdFile, grp_pool_fu_218_Cin, "grp_pool_fu_218_Cin");
    sc_trace(mVcdFile, grp_pool_fu_218_H, "grp_pool_fu_218_H");
    sc_trace(mVcdFile, grp_pool_fu_218_W, "grp_pool_fu_218_W");
    sc_trace(mVcdFile, grp_conv2_fu_188_ap_start_reg, "grp_conv2_fu_188_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, grp_conv1_fu_198_ap_start_reg, "grp_conv1_fu_198_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, grp_dense_fu_208_ap_start_reg, "grp_dense_fu_208_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, grp_pool_fu_218_ap_start_reg, "grp_pool_fu_218_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("top.hdltvin.dat");
    mHdltvoutHandle.open("top.hdltvout.dat");
}

top::~top() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete top_control_s_axi_U;
    delete top_gmem_m_axi_U;
    delete grp_conv2_fu_188;
    delete grp_conv1_fu_198;
    delete grp_dense_fu_208;
    delete grp_pool_fu_218;
}

void top::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void top::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        grp_conv1_fu_198_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
            grp_conv1_fu_198_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_conv1_fu_198_ap_ready.read())) {
            grp_conv1_fu_198_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        grp_conv2_fu_188_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
            grp_conv2_fu_188_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_conv2_fu_188_ap_ready.read())) {
            grp_conv2_fu_188_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        grp_dense_fu_208_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
            grp_dense_fu_208_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_dense_fu_208_ap_ready.read())) {
            grp_dense_fu_208_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        grp_pool_fu_218_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
            grp_pool_fu_218_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_pool_fu_218_ap_ready.read())) {
            grp_pool_fu_218_ap_start_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        bias2_V_read_reg_262 = bias2_V.read();
        bias_V_read_reg_278 = bias_V.read();
        fcBias_V_read_reg_235 = fcBias_V.read();
        fcWeight_V_read_reg_240 = fcWeight_V.read();
        input_V_read_reg_294 = input_V.read();
        outputConv2_V_read_reg_256 = outputConv2_V.read();
        outputConv_V_read_reg_288 = outputConv_V.read();
        outputDense_V_read_reg_245 = outputDense_V.read();
        outputPool2_V_read_reg_250 = outputPool2_V.read();
        outputPool_V_read_reg_272 = outputPool_V.read();
        weight2_V_read_reg_267 = weight2_V.read();
        weight_V_read_reg_283 = weight_V.read();
    }
}

void top::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void top::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void top::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void top::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void top::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void top::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void top::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void top::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void top::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void top::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void top::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void top::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
         esl_seteq<1,1,1>(grp_dense_fu_208_ap_done.read(), ap_const_logic_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void top::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void top::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
         esl_seteq<1,1,1>(grp_dense_fu_208_ap_done.read(), ap_const_logic_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void top::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void top::thread_gmem_ARADDR() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        gmem_ARADDR = grp_pool_fu_218_m_axi_input_V_ARADDR.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        gmem_ARADDR = grp_dense_fu_208_m_axi_input_V_ARADDR.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        gmem_ARADDR = grp_conv1_fu_198_m_axi_input_V_ARADDR.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        gmem_ARADDR = grp_conv2_fu_188_m_axi_input_V_ARADDR.read();
    } else {
        gmem_ARADDR = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void top::thread_gmem_ARBURST() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        gmem_ARBURST = grp_pool_fu_218_m_axi_input_V_ARBURST.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        gmem_ARBURST = grp_dense_fu_208_m_axi_input_V_ARBURST.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        gmem_ARBURST = grp_conv1_fu_198_m_axi_input_V_ARBURST.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        gmem_ARBURST = grp_conv2_fu_188_m_axi_input_V_ARBURST.read();
    } else {
        gmem_ARBURST =  (sc_lv<2>) ("XX");
    }
}

void top::thread_gmem_ARCACHE() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        gmem_ARCACHE = grp_pool_fu_218_m_axi_input_V_ARCACHE.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        gmem_ARCACHE = grp_dense_fu_208_m_axi_input_V_ARCACHE.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        gmem_ARCACHE = grp_conv1_fu_198_m_axi_input_V_ARCACHE.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        gmem_ARCACHE = grp_conv2_fu_188_m_axi_input_V_ARCACHE.read();
    } else {
        gmem_ARCACHE =  (sc_lv<4>) ("XXXX");
    }
}

void top::thread_gmem_ARID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        gmem_ARID = grp_pool_fu_218_m_axi_input_V_ARID.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        gmem_ARID = grp_dense_fu_208_m_axi_input_V_ARID.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        gmem_ARID = grp_conv1_fu_198_m_axi_input_V_ARID.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        gmem_ARID = grp_conv2_fu_188_m_axi_input_V_ARID.read();
    } else {
        gmem_ARID =  (sc_lv<1>) ("X");
    }
}

void top::thread_gmem_ARLEN() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        gmem_ARLEN = grp_pool_fu_218_m_axi_input_V_ARLEN.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        gmem_ARLEN = grp_dense_fu_208_m_axi_input_V_ARLEN.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        gmem_ARLEN = grp_conv1_fu_198_m_axi_input_V_ARLEN.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        gmem_ARLEN = grp_conv2_fu_188_m_axi_input_V_ARLEN.read();
    } else {
        gmem_ARLEN = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void top::thread_gmem_ARLOCK() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        gmem_ARLOCK = grp_pool_fu_218_m_axi_input_V_ARLOCK.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        gmem_ARLOCK = grp_dense_fu_208_m_axi_input_V_ARLOCK.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        gmem_ARLOCK = grp_conv1_fu_198_m_axi_input_V_ARLOCK.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        gmem_ARLOCK = grp_conv2_fu_188_m_axi_input_V_ARLOCK.read();
    } else {
        gmem_ARLOCK =  (sc_lv<2>) ("XX");
    }
}

void top::thread_gmem_ARPROT() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        gmem_ARPROT = grp_pool_fu_218_m_axi_input_V_ARPROT.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        gmem_ARPROT = grp_dense_fu_208_m_axi_input_V_ARPROT.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        gmem_ARPROT = grp_conv1_fu_198_m_axi_input_V_ARPROT.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        gmem_ARPROT = grp_conv2_fu_188_m_axi_input_V_ARPROT.read();
    } else {
        gmem_ARPROT =  (sc_lv<3>) ("XXX");
    }
}

void top::thread_gmem_ARQOS() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        gmem_ARQOS = grp_pool_fu_218_m_axi_input_V_ARQOS.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        gmem_ARQOS = grp_dense_fu_208_m_axi_input_V_ARQOS.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        gmem_ARQOS = grp_conv1_fu_198_m_axi_input_V_ARQOS.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        gmem_ARQOS = grp_conv2_fu_188_m_axi_input_V_ARQOS.read();
    } else {
        gmem_ARQOS =  (sc_lv<4>) ("XXXX");
    }
}

void top::thread_gmem_ARREGION() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        gmem_ARREGION = grp_pool_fu_218_m_axi_input_V_ARREGION.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        gmem_ARREGION = grp_dense_fu_208_m_axi_input_V_ARREGION.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        gmem_ARREGION = grp_conv1_fu_198_m_axi_input_V_ARREGION.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        gmem_ARREGION = grp_conv2_fu_188_m_axi_input_V_ARREGION.read();
    } else {
        gmem_ARREGION =  (sc_lv<4>) ("XXXX");
    }
}

void top::thread_gmem_ARSIZE() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        gmem_ARSIZE = grp_pool_fu_218_m_axi_input_V_ARSIZE.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        gmem_ARSIZE = grp_dense_fu_208_m_axi_input_V_ARSIZE.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        gmem_ARSIZE = grp_conv1_fu_198_m_axi_input_V_ARSIZE.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        gmem_ARSIZE = grp_conv2_fu_188_m_axi_input_V_ARSIZE.read();
    } else {
        gmem_ARSIZE =  (sc_lv<3>) ("XXX");
    }
}

void top::thread_gmem_ARUSER() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        gmem_ARUSER = grp_pool_fu_218_m_axi_input_V_ARUSER.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        gmem_ARUSER = grp_dense_fu_208_m_axi_input_V_ARUSER.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        gmem_ARUSER = grp_conv1_fu_198_m_axi_input_V_ARUSER.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        gmem_ARUSER = grp_conv2_fu_188_m_axi_input_V_ARUSER.read();
    } else {
        gmem_ARUSER =  (sc_lv<1>) ("X");
    }
}

void top::thread_gmem_ARVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        gmem_ARVALID = grp_pool_fu_218_m_axi_input_V_ARVALID.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        gmem_ARVALID = grp_dense_fu_208_m_axi_input_V_ARVALID.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        gmem_ARVALID = grp_conv1_fu_198_m_axi_input_V_ARVALID.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        gmem_ARVALID = grp_conv2_fu_188_m_axi_input_V_ARVALID.read();
    } else {
        gmem_ARVALID = ap_const_logic_0;
    }
}

void top::thread_gmem_AWADDR() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        gmem_AWADDR = grp_pool_fu_218_m_axi_input_V_AWADDR.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        gmem_AWADDR = grp_dense_fu_208_m_axi_input_V_AWADDR.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        gmem_AWADDR = grp_conv1_fu_198_m_axi_input_V_AWADDR.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        gmem_AWADDR = grp_conv2_fu_188_m_axi_input_V_AWADDR.read();
    } else {
        gmem_AWADDR = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void top::thread_gmem_AWBURST() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        gmem_AWBURST = grp_pool_fu_218_m_axi_input_V_AWBURST.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        gmem_AWBURST = grp_dense_fu_208_m_axi_input_V_AWBURST.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        gmem_AWBURST = grp_conv1_fu_198_m_axi_input_V_AWBURST.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        gmem_AWBURST = grp_conv2_fu_188_m_axi_input_V_AWBURST.read();
    } else {
        gmem_AWBURST =  (sc_lv<2>) ("XX");
    }
}

void top::thread_gmem_AWCACHE() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        gmem_AWCACHE = grp_pool_fu_218_m_axi_input_V_AWCACHE.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        gmem_AWCACHE = grp_dense_fu_208_m_axi_input_V_AWCACHE.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        gmem_AWCACHE = grp_conv1_fu_198_m_axi_input_V_AWCACHE.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        gmem_AWCACHE = grp_conv2_fu_188_m_axi_input_V_AWCACHE.read();
    } else {
        gmem_AWCACHE =  (sc_lv<4>) ("XXXX");
    }
}

void top::thread_gmem_AWID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        gmem_AWID = grp_pool_fu_218_m_axi_input_V_AWID.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        gmem_AWID = grp_dense_fu_208_m_axi_input_V_AWID.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        gmem_AWID = grp_conv1_fu_198_m_axi_input_V_AWID.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        gmem_AWID = grp_conv2_fu_188_m_axi_input_V_AWID.read();
    } else {
        gmem_AWID =  (sc_lv<1>) ("X");
    }
}

void top::thread_gmem_AWLEN() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        gmem_AWLEN = grp_pool_fu_218_m_axi_input_V_AWLEN.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        gmem_AWLEN = grp_dense_fu_208_m_axi_input_V_AWLEN.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        gmem_AWLEN = grp_conv1_fu_198_m_axi_input_V_AWLEN.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        gmem_AWLEN = grp_conv2_fu_188_m_axi_input_V_AWLEN.read();
    } else {
        gmem_AWLEN = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void top::thread_gmem_AWLOCK() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        gmem_AWLOCK = grp_pool_fu_218_m_axi_input_V_AWLOCK.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        gmem_AWLOCK = grp_dense_fu_208_m_axi_input_V_AWLOCK.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        gmem_AWLOCK = grp_conv1_fu_198_m_axi_input_V_AWLOCK.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        gmem_AWLOCK = grp_conv2_fu_188_m_axi_input_V_AWLOCK.read();
    } else {
        gmem_AWLOCK =  (sc_lv<2>) ("XX");
    }
}

void top::thread_gmem_AWPROT() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        gmem_AWPROT = grp_pool_fu_218_m_axi_input_V_AWPROT.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        gmem_AWPROT = grp_dense_fu_208_m_axi_input_V_AWPROT.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        gmem_AWPROT = grp_conv1_fu_198_m_axi_input_V_AWPROT.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        gmem_AWPROT = grp_conv2_fu_188_m_axi_input_V_AWPROT.read();
    } else {
        gmem_AWPROT =  (sc_lv<3>) ("XXX");
    }
}

void top::thread_gmem_AWQOS() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        gmem_AWQOS = grp_pool_fu_218_m_axi_input_V_AWQOS.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        gmem_AWQOS = grp_dense_fu_208_m_axi_input_V_AWQOS.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        gmem_AWQOS = grp_conv1_fu_198_m_axi_input_V_AWQOS.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        gmem_AWQOS = grp_conv2_fu_188_m_axi_input_V_AWQOS.read();
    } else {
        gmem_AWQOS =  (sc_lv<4>) ("XXXX");
    }
}

void top::thread_gmem_AWREGION() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        gmem_AWREGION = grp_pool_fu_218_m_axi_input_V_AWREGION.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        gmem_AWREGION = grp_dense_fu_208_m_axi_input_V_AWREGION.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        gmem_AWREGION = grp_conv1_fu_198_m_axi_input_V_AWREGION.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        gmem_AWREGION = grp_conv2_fu_188_m_axi_input_V_AWREGION.read();
    } else {
        gmem_AWREGION =  (sc_lv<4>) ("XXXX");
    }
}

void top::thread_gmem_AWSIZE() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        gmem_AWSIZE = grp_pool_fu_218_m_axi_input_V_AWSIZE.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        gmem_AWSIZE = grp_dense_fu_208_m_axi_input_V_AWSIZE.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        gmem_AWSIZE = grp_conv1_fu_198_m_axi_input_V_AWSIZE.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        gmem_AWSIZE = grp_conv2_fu_188_m_axi_input_V_AWSIZE.read();
    } else {
        gmem_AWSIZE =  (sc_lv<3>) ("XXX");
    }
}

void top::thread_gmem_AWUSER() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        gmem_AWUSER = grp_pool_fu_218_m_axi_input_V_AWUSER.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        gmem_AWUSER = grp_dense_fu_208_m_axi_input_V_AWUSER.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        gmem_AWUSER = grp_conv1_fu_198_m_axi_input_V_AWUSER.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        gmem_AWUSER = grp_conv2_fu_188_m_axi_input_V_AWUSER.read();
    } else {
        gmem_AWUSER =  (sc_lv<1>) ("X");
    }
}

void top::thread_gmem_AWVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        gmem_AWVALID = grp_pool_fu_218_m_axi_input_V_AWVALID.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        gmem_AWVALID = grp_dense_fu_208_m_axi_input_V_AWVALID.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        gmem_AWVALID = grp_conv1_fu_198_m_axi_input_V_AWVALID.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        gmem_AWVALID = grp_conv2_fu_188_m_axi_input_V_AWVALID.read();
    } else {
        gmem_AWVALID = ap_const_logic_0;
    }
}

void top::thread_gmem_BREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        gmem_BREADY = grp_pool_fu_218_m_axi_input_V_BREADY.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        gmem_BREADY = grp_dense_fu_208_m_axi_input_V_BREADY.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        gmem_BREADY = grp_conv1_fu_198_m_axi_input_V_BREADY.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        gmem_BREADY = grp_conv2_fu_188_m_axi_input_V_BREADY.read();
    } else {
        gmem_BREADY = ap_const_logic_0;
    }
}

void top::thread_gmem_RREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        gmem_RREADY = grp_pool_fu_218_m_axi_input_V_RREADY.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        gmem_RREADY = grp_dense_fu_208_m_axi_input_V_RREADY.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        gmem_RREADY = grp_conv1_fu_198_m_axi_input_V_RREADY.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        gmem_RREADY = grp_conv2_fu_188_m_axi_input_V_RREADY.read();
    } else {
        gmem_RREADY = ap_const_logic_0;
    }
}

void top::thread_gmem_WDATA() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        gmem_WDATA = grp_pool_fu_218_m_axi_input_V_WDATA.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        gmem_WDATA = grp_dense_fu_208_m_axi_input_V_WDATA.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        gmem_WDATA = grp_conv1_fu_198_m_axi_input_V_WDATA.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        gmem_WDATA = grp_conv2_fu_188_m_axi_input_V_WDATA.read();
    } else {
        gmem_WDATA =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void top::thread_gmem_WID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        gmem_WID = grp_pool_fu_218_m_axi_input_V_WID.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        gmem_WID = grp_dense_fu_208_m_axi_input_V_WID.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        gmem_WID = grp_conv1_fu_198_m_axi_input_V_WID.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        gmem_WID = grp_conv2_fu_188_m_axi_input_V_WID.read();
    } else {
        gmem_WID =  (sc_lv<1>) ("X");
    }
}

void top::thread_gmem_WLAST() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        gmem_WLAST = grp_pool_fu_218_m_axi_input_V_WLAST.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        gmem_WLAST = grp_dense_fu_208_m_axi_input_V_WLAST.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        gmem_WLAST = grp_conv1_fu_198_m_axi_input_V_WLAST.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        gmem_WLAST = grp_conv2_fu_188_m_axi_input_V_WLAST.read();
    } else {
        gmem_WLAST = sc_logic('X');
    }
}

void top::thread_gmem_WSTRB() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        gmem_WSTRB = grp_pool_fu_218_m_axi_input_V_WSTRB.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        gmem_WSTRB = grp_dense_fu_208_m_axi_input_V_WSTRB.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        gmem_WSTRB = grp_conv1_fu_198_m_axi_input_V_WSTRB.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        gmem_WSTRB = grp_conv2_fu_188_m_axi_input_V_WSTRB.read();
    } else {
        gmem_WSTRB =  (sc_lv<1>) ("X");
    }
}

void top::thread_gmem_WUSER() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        gmem_WUSER = grp_pool_fu_218_m_axi_input_V_WUSER.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        gmem_WUSER = grp_dense_fu_208_m_axi_input_V_WUSER.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        gmem_WUSER = grp_conv1_fu_198_m_axi_input_V_WUSER.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        gmem_WUSER = grp_conv2_fu_188_m_axi_input_V_WUSER.read();
    } else {
        gmem_WUSER =  (sc_lv<1>) ("X");
    }
}

void top::thread_gmem_WVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        gmem_WVALID = grp_pool_fu_218_m_axi_input_V_WVALID.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        gmem_WVALID = grp_dense_fu_208_m_axi_input_V_WVALID.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        gmem_WVALID = grp_conv1_fu_198_m_axi_input_V_WVALID.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        gmem_WVALID = grp_conv2_fu_188_m_axi_input_V_WVALID.read();
    } else {
        gmem_WVALID = ap_const_logic_0;
    }
}

void top::thread_grp_conv1_fu_198_ap_start() {
    grp_conv1_fu_198_ap_start = grp_conv1_fu_198_ap_start_reg.read();
}

void top::thread_grp_conv2_fu_188_ap_start() {
    grp_conv2_fu_188_ap_start = grp_conv2_fu_188_ap_start_reg.read();
}

void top::thread_grp_dense_fu_208_ap_start() {
    grp_dense_fu_208_ap_start = grp_dense_fu_208_ap_start_reg.read();
}

void top::thread_grp_pool_fu_218_Cin() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        grp_pool_fu_218_Cin = ap_const_lv6_10;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        grp_pool_fu_218_Cin = ap_const_lv6_8;
    } else {
        grp_pool_fu_218_Cin =  (sc_lv<6>) ("XXXXXX");
    }
}

void top::thread_grp_pool_fu_218_H() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        grp_pool_fu_218_H = ap_const_lv6_E;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        grp_pool_fu_218_H = ap_const_lv6_1C;
    } else {
        grp_pool_fu_218_H =  (sc_lv<6>) ("XXXXXX");
    }
}

void top::thread_grp_pool_fu_218_W() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        grp_pool_fu_218_W = ap_const_lv6_E;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        grp_pool_fu_218_W = ap_const_lv6_1C;
    } else {
        grp_pool_fu_218_W =  (sc_lv<6>) ("XXXXXX");
    }
}

void top::thread_grp_pool_fu_218_ap_start() {
    grp_pool_fu_218_ap_start = grp_pool_fu_218_ap_start_reg.read();
}

void top::thread_grp_pool_fu_218_input_V_offset() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        grp_pool_fu_218_input_V_offset = outputConv2_V_read_reg_256.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        grp_pool_fu_218_input_V_offset = outputConv_V_read_reg_288.read();
    } else {
        grp_pool_fu_218_input_V_offset = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void top::thread_grp_pool_fu_218_outputPool_V_offset() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        grp_pool_fu_218_outputPool_V_offset = outputPool2_V_read_reg_250.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        grp_pool_fu_218_outputPool_V_offset = outputPool_V_read_reg_272.read();
    } else {
        grp_pool_fu_218_outputPool_V_offset = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void top::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(grp_conv1_fu_198_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(grp_pool_fu_218_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(grp_conv2_fu_188_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && esl_seteq<1,1,1>(grp_pool_fu_218_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else {
                ap_NS_fsm = ap_ST_fsm_state9;
            }
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && esl_seteq<1,1,1>(grp_dense_fu_208_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state11;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<11>) ("XXXXXXXXXXX");
            break;
    }
}

void top::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"m_axi_gmem_AWVALID\" :  \"" << m_axi_gmem_AWVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_AWREADY\" :  \"" << m_axi_gmem_AWREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWADDR\" :  \"" << m_axi_gmem_AWADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWID\" :  \"" << m_axi_gmem_AWID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWLEN\" :  \"" << m_axi_gmem_AWLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWSIZE\" :  \"" << m_axi_gmem_AWSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWBURST\" :  \"" << m_axi_gmem_AWBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWLOCK\" :  \"" << m_axi_gmem_AWLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWCACHE\" :  \"" << m_axi_gmem_AWCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWPROT\" :  \"" << m_axi_gmem_AWPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWQOS\" :  \"" << m_axi_gmem_AWQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWREGION\" :  \"" << m_axi_gmem_AWREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWUSER\" :  \"" << m_axi_gmem_AWUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_WVALID\" :  \"" << m_axi_gmem_WVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_WREADY\" :  \"" << m_axi_gmem_WREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_WDATA\" :  \"" << m_axi_gmem_WDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_WSTRB\" :  \"" << m_axi_gmem_WSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_WLAST\" :  \"" << m_axi_gmem_WLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_WID\" :  \"" << m_axi_gmem_WID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_WUSER\" :  \"" << m_axi_gmem_WUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARVALID\" :  \"" << m_axi_gmem_ARVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_ARREADY\" :  \"" << m_axi_gmem_ARREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARADDR\" :  \"" << m_axi_gmem_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARID\" :  \"" << m_axi_gmem_ARID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARLEN\" :  \"" << m_axi_gmem_ARLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARSIZE\" :  \"" << m_axi_gmem_ARSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARBURST\" :  \"" << m_axi_gmem_ARBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARLOCK\" :  \"" << m_axi_gmem_ARLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARCACHE\" :  \"" << m_axi_gmem_ARCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARPROT\" :  \"" << m_axi_gmem_ARPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARQOS\" :  \"" << m_axi_gmem_ARQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARREGION\" :  \"" << m_axi_gmem_ARREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARUSER\" :  \"" << m_axi_gmem_ARUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_RVALID\" :  \"" << m_axi_gmem_RVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_RREADY\" :  \"" << m_axi_gmem_RREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_RDATA\" :  \"" << m_axi_gmem_RDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_RLAST\" :  \"" << m_axi_gmem_RLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_RID\" :  \"" << m_axi_gmem_RID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_RUSER\" :  \"" << m_axi_gmem_RUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_RRESP\" :  \"" << m_axi_gmem_RRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_BVALID\" :  \"" << m_axi_gmem_BVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_BREADY\" :  \"" << m_axi_gmem_BREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_BRESP\" :  \"" << m_axi_gmem_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_BID\" :  \"" << m_axi_gmem_BID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_BUSER\" :  \"" << m_axi_gmem_BUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_AWVALID\" :  \"" << s_axi_control_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_AWREADY\" :  \"" << s_axi_control_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_AWADDR\" :  \"" << s_axi_control_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_WVALID\" :  \"" << s_axi_control_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_WREADY\" :  \"" << s_axi_control_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_WDATA\" :  \"" << s_axi_control_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_WSTRB\" :  \"" << s_axi_control_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_ARVALID\" :  \"" << s_axi_control_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_ARREADY\" :  \"" << s_axi_control_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_ARADDR\" :  \"" << s_axi_control_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_RVALID\" :  \"" << s_axi_control_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_RREADY\" :  \"" << s_axi_control_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_RDATA\" :  \"" << s_axi_control_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_RRESP\" :  \"" << s_axi_control_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_BVALID\" :  \"" << s_axi_control_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_BREADY\" :  \"" << s_axi_control_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_BRESP\" :  \"" << s_axi_control_BRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}




================================================================
== Vivado HLS Report for 'pool'
================================================================
* Date:           Thu Jul 10 14:52:27 2025

* Version:        2020.1 (Build 2897737 on Wed May 27 20:21:37 MDT 2020)
* Project:        cnn
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020-clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  | 10.00 ns | 8.750 ns |   1.25 ns  |
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-------+--------+---------+
    |  Latency (cycles) |  Latency (absolute) |    Interval    | Pipeline|
    |   min   |   max   |    min   |    max   |  min  |   max  |   Type  |
    +---------+---------+----------+----------+-------+--------+---------+
    |    17769|   141601| 0.178 ms | 1.416 ms |  17769|  141601|   none  |
    +---------+---------+----------+----------+-------+--------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-----------------+---------+---------+-------------+-----------+-----------+--------+----------+
        |                 |  Latency (cycles) |  Iteration  |  Initiation Interval  |  Trip  |          |
        |    Loop Name    |   min   |   max   |   Latency   |  achieved |   target  |  Count | Pipelined|
        +-----------------+---------+---------+-------------+-----------+-----------+--------+----------+
        |- Loop 1         |    17768|   141600| 2221 ~ 8850 |          -|          -| 8 ~ 16 |    no    |
        | + Loop 1.1      |     2219|     8848|  317 ~ 632  |          -|          -| 7 ~ 14 |    no    |
        |  ++ Loop 1.1.1  |      315|      630|           45|          -|          -| 7 ~ 14 |    no    |
        +-----------------+---------+---------+-------------+-----------+-----------+--------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 48
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 2 
4 --> 5 3 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 20 
20 --> 21 
21 --> 22 
22 --> 23 
23 --> 24 
24 --> 25 
25 --> 26 
26 --> 27 
27 --> 28 
28 --> 29 
29 --> 30 
30 --> 31 
31 --> 32 
32 --> 33 
33 --> 34 
34 --> 35 
35 --> 36 
36 --> 37 
37 --> 38 
38 --> 39 
39 --> 40 
40 --> 41 
41 --> 42 
42 --> 43 
43 --> 44 
44 --> 45 
45 --> 46 
46 --> 47 
47 --> 48 
48 --> 4 

* FSM state operations: 

State 1 <SV = 0> <Delay = 3.51>
ST_1 : Operation 49 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i8* %input_V, [6 x i8]* @p_str9, i32 0, i32 0, [1 x i8]* @p_str110, i32 0, i32 0, [5 x i8]* @p_str211, [6 x i8]* @p_str312, [1 x i8]* @p_str110, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str110, [1 x i8]* @p_str110)"   --->   Operation 49 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 50 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i8* %input_V, [6 x i8]* @p_str9, i32 0, i32 0, [1 x i8]* @p_str110, i32 0, i32 0, [5 x i8]* @p_str211, [6 x i8]* @p_str312, [1 x i8]* @p_str110, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str110, [1 x i8]* @p_str110)"   --->   Operation 50 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 51 [1/1] (0.00ns)   --->   "%W_read = call i6 @_ssdm_op_Read.ap_auto.i6(i6 %W)" [cnn/src/pool.cpp:5]   --->   Operation 51 'read' 'W_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 52 [1/1] (0.00ns)   --->   "%H_read = call i6 @_ssdm_op_Read.ap_auto.i6(i6 %H)" [cnn/src/pool.cpp:5]   --->   Operation 52 'read' 'H_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 53 [1/1] (0.00ns)   --->   "%Cin_read = call i6 @_ssdm_op_Read.ap_auto.i6(i6 %Cin)" [cnn/src/pool.cpp:5]   --->   Operation 53 'read' 'Cin_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 54 [1/1] (0.00ns)   --->   "%outputPool_V_offset_s = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %outputPool_V_offset)" [cnn/src/pool.cpp:5]   --->   Operation 54 'read' 'outputPool_V_offset_s' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 55 [1/1] (0.00ns)   --->   "%input_V_offset_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %input_V_offset)" [cnn/src/pool.cpp:5]   --->   Operation 55 'read' 'input_V_offset_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 56 [1/1] (0.00ns)   --->   "%trunc_ln11 = trunc i6 %H_read to i5" [cnn/src/pool.cpp:11]   --->   Operation 56 'trunc' 'trunc_ln11' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 57 [1/1] (1.78ns)   --->   "%add_ln11 = add i5 -2, %trunc_ln11" [cnn/src/pool.cpp:11]   --->   Operation 57 'add' 'add_ln11' <Predicate = true> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 58 [1/1] (0.00ns)   --->   "%trunc_ln11_1 = call i4 @_ssdm_op_PartSelect.i4.i5.i32.i32(i5 %add_ln11, i32 1, i32 4)" [cnn/src/pool.cpp:11]   --->   Operation 58 'partselect' 'trunc_ln11_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 59 [1/1] (1.73ns)   --->   "%Hout = add i4 1, %trunc_ln11_1" [cnn/src/pool.cpp:11]   --->   Operation 59 'add' 'Hout' <Predicate = true> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 60 [1/1] (0.00ns)   --->   "%zext_ln15 = zext i4 %Hout to i8" [cnn/src/pool.cpp:15]   --->   Operation 60 'zext' 'zext_ln15' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 61 [1/1] (0.00ns)   --->   "%trunc_ln12 = trunc i6 %W_read to i5" [cnn/src/pool.cpp:12]   --->   Operation 61 'trunc' 'trunc_ln12' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 62 [1/1] (1.78ns)   --->   "%add_ln12 = add i5 -2, %trunc_ln12" [cnn/src/pool.cpp:12]   --->   Operation 62 'add' 'add_ln12' <Predicate = true> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 63 [1/1] (0.00ns)   --->   "%trunc_ln12_1 = call i4 @_ssdm_op_PartSelect.i4.i5.i32.i32(i5 %add_ln12, i32 1, i32 4)" [cnn/src/pool.cpp:12]   --->   Operation 63 'partselect' 'trunc_ln12_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 64 [1/1] (1.73ns)   --->   "%Wout = add i4 1, %trunc_ln12_1" [cnn/src/pool.cpp:12]   --->   Operation 64 'add' 'Wout' <Predicate = true> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 65 [1/1] (0.00ns)   --->   "%zext_ln12 = zext i4 %Wout to i12" [cnn/src/pool.cpp:12]   --->   Operation 65 'zext' 'zext_ln12' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 66 [1/1] (0.00ns)   --->   "%zext_ln17 = zext i6 %H_read to i9" [cnn/src/pool.cpp:17]   --->   Operation 66 'zext' 'zext_ln17' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 67 [1/1] (0.00ns)   --->   "%zext_ln17_1 = zext i6 %W_read to i14" [cnn/src/pool.cpp:17]   --->   Operation 67 'zext' 'zext_ln17_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 68 [1/1] (0.00ns)   --->   "%sext_ln17 = sext i32 %outputPool_V_offset_s to i33" [cnn/src/pool.cpp:17]   --->   Operation 68 'sext' 'sext_ln17' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 69 [1/1] (0.00ns)   --->   "%sext_ln14 = sext i32 %input_V_offset_read to i33" [cnn/src/pool.cpp:14]   --->   Operation 69 'sext' 'sext_ln14' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 70 [1/1] (1.76ns)   --->   "br label %.loopexit" [cnn/src/pool.cpp:14]   --->   Operation 70 'br' <Predicate = true> <Delay = 1.76>

State 2 <SV = 1> <Delay = 3.49>
ST_2 : Operation 71 [1/1] (0.00ns)   --->   "%co_0 = phi i5 [ 0, %0 ], [ %co, %.loopexit.loopexit ]"   --->   Operation 71 'phi' 'co_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 72 [1/1] (0.00ns)   --->   "%phi_mul = phi i9 [ 0, %0 ], [ %add_ln15, %.loopexit.loopexit ]" [cnn/src/pool.cpp:15]   --->   Operation 72 'phi' 'phi_mul' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 73 [1/1] (1.82ns)   --->   "%add_ln15 = add i9 %phi_mul, %zext_ln17" [cnn/src/pool.cpp:15]   --->   Operation 73 'add' 'add_ln15' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 74 [1/1] (0.00ns)   --->   "%zext_ln15_1 = zext i5 %co_0 to i8" [cnn/src/pool.cpp:15]   --->   Operation 74 'zext' 'zext_ln15_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 75 [1/1] (0.00ns)   --->   "%zext_ln14 = zext i5 %co_0 to i6" [cnn/src/pool.cpp:14]   --->   Operation 75 'zext' 'zext_ln14' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 76 [1/1] (1.42ns)   --->   "%icmp_ln14 = icmp slt i6 %zext_ln14, %Cin_read" [cnn/src/pool.cpp:14]   --->   Operation 76 'icmp' 'icmp_ln14' <Predicate = true> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 77 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 16, i64 0)"   --->   Operation 77 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 78 [1/1] (1.78ns)   --->   "%co = add i5 %co_0, 1" [cnn/src/pool.cpp:14]   --->   Operation 78 'add' 'co' <Predicate = true> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 79 [1/1] (0.00ns)   --->   "br i1 %icmp_ln14, label %.preheader9.preheader, label %1" [cnn/src/pool.cpp:14]   --->   Operation 79 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 80 [1/1] (3.49ns)   --->   "%mul_ln15 = mul i8 %zext_ln15, %zext_ln15_1" [cnn/src/pool.cpp:15]   --->   Operation 80 'mul' 'mul_ln15' <Predicate = (icmp_ln14)> <Delay = 3.49> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 4.35> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 81 [1/1] (1.76ns)   --->   "br label %.preheader9" [cnn/src/pool.cpp:15]   --->   Operation 81 'br' <Predicate = (icmp_ln14)> <Delay = 1.76>
ST_2 : Operation 82 [1/1] (0.00ns)   --->   "ret void" [cnn/src/pool.cpp:37]   --->   Operation 82 'ret' <Predicate = (!icmp_ln14)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 7.99>
ST_3 : Operation 83 [1/1] (0.00ns)   --->   "%h_0 = phi i4 [ 0, %.preheader9.preheader ], [ %h, %.preheader9.loopexit ]"   --->   Operation 83 'phi' 'h_0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 84 [1/1] (0.00ns)   --->   "%zext_ln15_2 = zext i4 %h_0 to i8" [cnn/src/pool.cpp:15]   --->   Operation 84 'zext' 'zext_ln15_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 85 [1/1] (0.00ns)   --->   "%empty_13 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 7, i64 14, i64 0)"   --->   Operation 85 'speclooptripcount' 'empty_13' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 86 [1/1] (1.30ns)   --->   "%icmp_ln15 = icmp eq i4 %h_0, %Hout" [cnn/src/pool.cpp:15]   --->   Operation 86 'icmp' 'icmp_ln15' <Predicate = true> <Delay = 1.30> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 87 [1/1] (1.73ns)   --->   "%h = add i4 %h_0, 1" [cnn/src/pool.cpp:15]   --->   Operation 87 'add' 'h' <Predicate = true> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 88 [1/1] (0.00ns)   --->   "br i1 %icmp_ln15, label %.loopexit.loopexit, label %.preheader.preheader" [cnn/src/pool.cpp:15]   --->   Operation 88 'br' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 89 [1/1] (0.00ns)   --->   "%shl_ln = call i5 @_ssdm_op_BitConcatenate.i5.i4.i1(i4 %h_0, i1 false)" [cnn/src/pool.cpp:17]   --->   Operation 89 'bitconcatenate' 'shl_ln' <Predicate = (!icmp_ln15)> <Delay = 0.00>
ST_3 : Operation 90 [1/1] (0.00ns)   --->   "%zext_ln17_2 = zext i5 %shl_ln to i9" [cnn/src/pool.cpp:17]   --->   Operation 90 'zext' 'zext_ln17_2' <Predicate = (!icmp_ln15)> <Delay = 0.00>
ST_3 : Operation 91 [1/1] (1.82ns)   --->   "%in_h = add i9 %zext_ln17_2, %phi_mul" [cnn/src/pool.cpp:17]   --->   Operation 91 'add' 'in_h' <Predicate = (!icmp_ln15)> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 92 [1/1] (0.00ns)   --->   "%zext_ln17_3 = zext i9 %in_h to i14" [cnn/src/pool.cpp:17]   --->   Operation 92 'zext' 'zext_ln17_3' <Predicate = (!icmp_ln15)> <Delay = 0.00>
ST_3 : Operation 93 [1/1] (4.35ns)   --->   "%mul_ln17 = mul i14 %zext_ln17_3, %zext_ln17_1" [cnn/src/pool.cpp:17]   --->   Operation 93 'mul' 'mul_ln17' <Predicate = (!icmp_ln15)> <Delay = 4.35> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 4.35> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 94 [1/1] (1.91ns)   --->   "%add_ln32 = add i8 %zext_ln15_2, %mul_ln15" [cnn/src/pool.cpp:32]   --->   Operation 94 'add' 'add_ln32' <Predicate = (!icmp_ln15)> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 95 [1/1] (0.00ns)   --->   "%zext_ln32 = zext i8 %add_ln32 to i12" [cnn/src/pool.cpp:32]   --->   Operation 95 'zext' 'zext_ln32' <Predicate = (!icmp_ln15)> <Delay = 0.00>
ST_3 : Operation 96 [1/1] (4.17ns)   --->   "%mul_ln32 = mul i12 %zext_ln32, %zext_ln12" [cnn/src/pool.cpp:32]   --->   Operation 96 'mul' 'mul_ln32' <Predicate = (!icmp_ln15)> <Delay = 4.17> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 4.35> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 97 [1/1] (1.82ns)   --->   "%add_ln27_1 = add i9 %in_h, 1" [cnn/src/pool.cpp:27]   --->   Operation 97 'add' 'add_ln27_1' <Predicate = (!icmp_ln15)> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 98 [1/1] (0.00ns)   --->   "%zext_ln27 = zext i9 %add_ln27_1 to i14" [cnn/src/pool.cpp:27]   --->   Operation 98 'zext' 'zext_ln27' <Predicate = (!icmp_ln15)> <Delay = 0.00>
ST_3 : Operation 99 [1/1] (4.35ns)   --->   "%mul_ln27 = mul i14 %zext_ln27, %zext_ln17_1" [cnn/src/pool.cpp:27]   --->   Operation 99 'mul' 'mul_ln27' <Predicate = (!icmp_ln15)> <Delay = 4.35> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 4.35> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 100 [1/1] (1.76ns)   --->   "br label %.preheader" [cnn/src/pool.cpp:16]   --->   Operation 100 'br' <Predicate = (!icmp_ln15)> <Delay = 1.76>
ST_3 : Operation 101 [1/1] (0.00ns)   --->   "br label %.loopexit"   --->   Operation 101 'br' <Predicate = (icmp_ln15)> <Delay = 0.00>

State 4 <SV = 3> <Delay = 4.36>
ST_4 : Operation 102 [1/1] (0.00ns)   --->   "%w_0 = phi i4 [ %w, %._crit_edge.0.0 ], [ 0, %.preheader.preheader ]"   --->   Operation 102 'phi' 'w_0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 103 [1/1] (0.00ns)   --->   "%zext_ln16 = zext i4 %w_0 to i12" [cnn/src/pool.cpp:16]   --->   Operation 103 'zext' 'zext_ln16' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 104 [1/1] (0.00ns)   --->   "%empty_14 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 7, i64 14, i64 0)"   --->   Operation 104 'speclooptripcount' 'empty_14' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 105 [1/1] (1.30ns)   --->   "%icmp_ln16 = icmp eq i4 %w_0, %Wout" [cnn/src/pool.cpp:16]   --->   Operation 105 'icmp' 'icmp_ln16' <Predicate = true> <Delay = 1.30> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 106 [1/1] (1.73ns)   --->   "%w = add i4 %w_0, 1" [cnn/src/pool.cpp:16]   --->   Operation 106 'add' 'w' <Predicate = true> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 107 [1/1] (0.00ns)   --->   "br i1 %icmp_ln16, label %.preheader9.loopexit, label %._crit_edge.0.0" [cnn/src/pool.cpp:16]   --->   Operation 107 'br' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 108 [1/1] (0.00ns)   --->   "%shl_ln17_1 = call i5 @_ssdm_op_BitConcatenate.i5.i4.i1(i4 %w_0, i1 false)" [cnn/src/pool.cpp:17]   --->   Operation 108 'bitconcatenate' 'shl_ln17_1' <Predicate = (!icmp_ln16)> <Delay = 0.00>
ST_4 : Operation 109 [1/1] (0.00ns)   --->   "%zext_ln17_4 = zext i5 %shl_ln17_1 to i14" [cnn/src/pool.cpp:17]   --->   Operation 109 'zext' 'zext_ln17_4' <Predicate = (!icmp_ln16)> <Delay = 0.00>
ST_4 : Operation 110 [1/1] (1.81ns)   --->   "%add_ln17_1 = add i14 %zext_ln17_4, %mul_ln17" [cnn/src/pool.cpp:17]   --->   Operation 110 'add' 'add_ln17_1' <Predicate = (!icmp_ln16)> <Delay = 1.81> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 111 [1/1] (0.00ns)   --->   "%zext_ln17_5 = zext i14 %add_ln17_1 to i33" [cnn/src/pool.cpp:17]   --->   Operation 111 'zext' 'zext_ln17_5' <Predicate = (!icmp_ln16)> <Delay = 0.00>
ST_4 : Operation 112 [1/1] (2.55ns)   --->   "%add_ln17_2 = add i33 %zext_ln17_5, %sext_ln14" [cnn/src/pool.cpp:17]   --->   Operation 112 'add' 'add_ln17_2' <Predicate = (!icmp_ln16)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 113 [1/1] (0.00ns)   --->   "%sext_ln17_1 = sext i33 %add_ln17_2 to i64" [cnn/src/pool.cpp:17]   --->   Operation 113 'sext' 'sext_ln17_1' <Predicate = (!icmp_ln16)> <Delay = 0.00>
ST_4 : Operation 114 [1/1] (0.00ns)   --->   "%outputPool_V_addr = getelementptr i8* %input_V, i64 %sext_ln17_1" [cnn/src/pool.cpp:17]   --->   Operation 114 'getelementptr' 'outputPool_V_addr' <Predicate = (!icmp_ln16)> <Delay = 0.00>
ST_4 : Operation 115 [1/1] (1.81ns)   --->   "%add_ln27_2 = add i14 %mul_ln27, %zext_ln17_4" [cnn/src/pool.cpp:27]   --->   Operation 115 'add' 'add_ln27_2' <Predicate = (!icmp_ln16)> <Delay = 1.81> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 116 [1/1] (1.54ns)   --->   "%outIdx = add i12 %zext_ln16, %mul_ln32" [cnn/src/pool.cpp:32]   --->   Operation 116 'add' 'outIdx' <Predicate = (!icmp_ln16)> <Delay = 1.54> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 117 [1/1] (0.00ns)   --->   "%zext_ln203 = zext i12 %outIdx to i33" [cnn/src/pool.cpp:33]   --->   Operation 117 'zext' 'zext_ln203' <Predicate = (!icmp_ln16)> <Delay = 0.00>
ST_4 : Operation 118 [1/1] (2.55ns)   --->   "%add_ln203 = add i33 %zext_ln203, %sext_ln17" [cnn/src/pool.cpp:33]   --->   Operation 118 'add' 'add_ln203' <Predicate = (!icmp_ln16)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 119 [1/1] (0.00ns)   --->   "%sext_ln203 = sext i33 %add_ln203 to i64" [cnn/src/pool.cpp:33]   --->   Operation 119 'sext' 'sext_ln203' <Predicate = (!icmp_ln16)> <Delay = 0.00>
ST_4 : Operation 120 [1/1] (0.00ns)   --->   "%outputPool_V_addr26 = getelementptr i8* %input_V, i64 %sext_ln203" [cnn/src/pool.cpp:33]   --->   Operation 120 'getelementptr' 'outputPool_V_addr26' <Predicate = (!icmp_ln16)> <Delay = 0.00>
ST_4 : Operation 121 [1/1] (0.00ns)   --->   "br label %.preheader9"   --->   Operation 121 'br' <Predicate = (icmp_ln16)> <Delay = 0.00>

State 5 <SV = 4> <Delay = 8.75>
ST_5 : Operation 122 [7/7] (8.75ns)   --->   "%max_V_req = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %outputPool_V_addr, i32 1)" [cnn/src/pool.cpp:17]   --->   Operation 122 'readreq' 'max_V_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_5 : Operation 123 [1/1] (1.81ns)   --->   "%add_ln27 = add i14 %add_ln17_1, 1" [cnn/src/pool.cpp:27]   --->   Operation 123 'add' 'add_ln27' <Predicate = true> <Delay = 1.81> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 124 [1/1] (0.00ns)   --->   "%zext_ln1494 = zext i14 %add_ln27 to i33" [cnn/src/pool.cpp:28]   --->   Operation 124 'zext' 'zext_ln1494' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 125 [1/1] (2.55ns)   --->   "%add_ln1494 = add i33 %zext_ln1494, %sext_ln14" [cnn/src/pool.cpp:28]   --->   Operation 125 'add' 'add_ln1494' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 126 [1/1] (0.00ns)   --->   "%sext_ln1494 = sext i33 %add_ln1494 to i64" [cnn/src/pool.cpp:28]   --->   Operation 126 'sext' 'sext_ln1494' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 127 [1/1] (0.00ns)   --->   "%outputPool_V_addr_1 = getelementptr i8* %input_V, i64 %sext_ln1494" [cnn/src/pool.cpp:28]   --->   Operation 127 'getelementptr' 'outputPool_V_addr_1' <Predicate = true> <Delay = 0.00>

State 6 <SV = 5> <Delay = 8.75>
ST_6 : Operation 128 [6/7] (8.75ns)   --->   "%max_V_req = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %outputPool_V_addr, i32 1)" [cnn/src/pool.cpp:17]   --->   Operation 128 'readreq' 'max_V_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_6 : Operation 129 [7/7] (8.75ns)   --->   "%outputPool_V_load_re = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %outputPool_V_addr_1, i32 1)" [cnn/src/pool.cpp:28]   --->   Operation 129 'readreq' 'outputPool_V_load_re' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 7 <SV = 6> <Delay = 8.75>
ST_7 : Operation 130 [5/7] (8.75ns)   --->   "%max_V_req = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %outputPool_V_addr, i32 1)" [cnn/src/pool.cpp:17]   --->   Operation 130 'readreq' 'max_V_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 131 [6/7] (8.75ns)   --->   "%outputPool_V_load_re = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %outputPool_V_addr_1, i32 1)" [cnn/src/pool.cpp:28]   --->   Operation 131 'readreq' 'outputPool_V_load_re' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 8 <SV = 7> <Delay = 8.75>
ST_8 : Operation 132 [4/7] (8.75ns)   --->   "%max_V_req = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %outputPool_V_addr, i32 1)" [cnn/src/pool.cpp:17]   --->   Operation 132 'readreq' 'max_V_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 133 [5/7] (8.75ns)   --->   "%outputPool_V_load_re = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %outputPool_V_addr_1, i32 1)" [cnn/src/pool.cpp:28]   --->   Operation 133 'readreq' 'outputPool_V_load_re' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 9 <SV = 8> <Delay = 8.75>
ST_9 : Operation 134 [3/7] (8.75ns)   --->   "%max_V_req = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %outputPool_V_addr, i32 1)" [cnn/src/pool.cpp:17]   --->   Operation 134 'readreq' 'max_V_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 135 [4/7] (8.75ns)   --->   "%outputPool_V_load_re = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %outputPool_V_addr_1, i32 1)" [cnn/src/pool.cpp:28]   --->   Operation 135 'readreq' 'outputPool_V_load_re' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 10 <SV = 9> <Delay = 8.75>
ST_10 : Operation 136 [2/7] (8.75ns)   --->   "%max_V_req = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %outputPool_V_addr, i32 1)" [cnn/src/pool.cpp:17]   --->   Operation 136 'readreq' 'max_V_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_10 : Operation 137 [3/7] (8.75ns)   --->   "%outputPool_V_load_re = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %outputPool_V_addr_1, i32 1)" [cnn/src/pool.cpp:28]   --->   Operation 137 'readreq' 'outputPool_V_load_re' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 11 <SV = 10> <Delay = 8.75>
ST_11 : Operation 138 [1/7] (8.75ns)   --->   "%max_V_req = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %outputPool_V_addr, i32 1)" [cnn/src/pool.cpp:17]   --->   Operation 138 'readreq' 'max_V_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_11 : Operation 139 [2/7] (8.75ns)   --->   "%outputPool_V_load_re = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %outputPool_V_addr_1, i32 1)" [cnn/src/pool.cpp:28]   --->   Operation 139 'readreq' 'outputPool_V_load_re' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 12 <SV = 11> <Delay = 8.75>
ST_12 : Operation 140 [1/1] (8.75ns)   --->   "%max_V = call i8 @_ssdm_op_Read.m_axi.i8P(i8* %outputPool_V_addr)" [cnn/src/pool.cpp:17]   --->   Operation 140 'read' 'max_V' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_12 : Operation 141 [1/7] (8.75ns)   --->   "%outputPool_V_load_re = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %outputPool_V_addr_1, i32 1)" [cnn/src/pool.cpp:28]   --->   Operation 141 'readreq' 'outputPool_V_load_re' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_12 : Operation 142 [1/1] (8.75ns)   --->   "%outputPool_V_addr26_s = call i1 @_ssdm_op_WriteReq.m_axi.i8P(i8* %outputPool_V_addr26, i32 1)" [cnn/src/pool.cpp:33]   --->   Operation 142 'writereq' 'outputPool_V_addr26_s' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 13 <SV = 12> <Delay = 8.75>
ST_13 : Operation 143 [1/1] (8.75ns)   --->   "%outputPool_V_addr_1_s = call i8 @_ssdm_op_Read.m_axi.i8P(i8* %outputPool_V_addr_1)" [cnn/src/pool.cpp:28]   --->   Operation 143 'read' 'outputPool_V_addr_1_s' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 14 <SV = 13> <Delay = 4.80>
ST_14 : Operation 144 [1/1] (1.55ns)   --->   "%icmp_ln1494 = icmp sgt i8 %outputPool_V_addr_1_s, %max_V" [cnn/src/pool.cpp:28]   --->   Operation 144 'icmp' 'icmp_ln1494' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 145 [1/1] (0.70ns)   --->   "%select_ln28 = select i1 %icmp_ln1494, i14 %add_ln27, i14 %add_ln17_1" [cnn/src/pool.cpp:28]   --->   Operation 145 'select' 'select_ln28' <Predicate = true> <Delay = 0.70> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_14 : Operation 146 [1/1] (0.00ns)   --->   "%zext_ln1494_1 = zext i14 %select_ln28 to i33" [cnn/src/pool.cpp:28]   --->   Operation 146 'zext' 'zext_ln1494_1' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 147 [1/1] (2.55ns)   --->   "%add_ln1494_1 = add i33 %zext_ln1494_1, %sext_ln14" [cnn/src/pool.cpp:28]   --->   Operation 147 'add' 'add_ln1494_1' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 148 [1/1] (0.00ns)   --->   "%sext_ln1494_1 = sext i33 %add_ln1494_1 to i64" [cnn/src/pool.cpp:28]   --->   Operation 148 'sext' 'sext_ln1494_1' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 149 [1/1] (0.00ns)   --->   "%outputPool_V_addr_2 = getelementptr i8* %input_V, i64 %sext_ln1494_1" [cnn/src/pool.cpp:28]   --->   Operation 149 'getelementptr' 'outputPool_V_addr_2' <Predicate = true> <Delay = 0.00>

State 15 <SV = 14> <Delay = 8.75>
ST_15 : Operation 150 [7/7] (8.75ns)   --->   "%max_V_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %outputPool_V_addr_2, i32 1)" [cnn/src/pool.cpp:28]   --->   Operation 150 'readreq' 'max_V_1_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_15 : Operation 151 [1/1] (0.00ns)   --->   "%zext_ln1494_2 = zext i14 %add_ln27_2 to i33" [cnn/src/pool.cpp:28]   --->   Operation 151 'zext' 'zext_ln1494_2' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 152 [1/1] (2.55ns)   --->   "%add_ln1494_2 = add i33 %zext_ln1494_2, %sext_ln14" [cnn/src/pool.cpp:28]   --->   Operation 152 'add' 'add_ln1494_2' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 153 [1/1] (0.00ns)   --->   "%sext_ln1494_2 = sext i33 %add_ln1494_2 to i64" [cnn/src/pool.cpp:28]   --->   Operation 153 'sext' 'sext_ln1494_2' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 154 [1/1] (0.00ns)   --->   "%outputPool_V_addr_3 = getelementptr i8* %input_V, i64 %sext_ln1494_2" [cnn/src/pool.cpp:28]   --->   Operation 154 'getelementptr' 'outputPool_V_addr_3' <Predicate = true> <Delay = 0.00>

State 16 <SV = 15> <Delay = 8.75>
ST_16 : Operation 155 [6/7] (8.75ns)   --->   "%max_V_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %outputPool_V_addr_2, i32 1)" [cnn/src/pool.cpp:28]   --->   Operation 155 'readreq' 'max_V_1_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_16 : Operation 156 [7/7] (8.75ns)   --->   "%outputPool_V_load_2_s = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %outputPool_V_addr_3, i32 1)" [cnn/src/pool.cpp:28]   --->   Operation 156 'readreq' 'outputPool_V_load_2_s' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 17 <SV = 16> <Delay = 8.75>
ST_17 : Operation 157 [5/7] (8.75ns)   --->   "%max_V_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %outputPool_V_addr_2, i32 1)" [cnn/src/pool.cpp:28]   --->   Operation 157 'readreq' 'max_V_1_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_17 : Operation 158 [6/7] (8.75ns)   --->   "%outputPool_V_load_2_s = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %outputPool_V_addr_3, i32 1)" [cnn/src/pool.cpp:28]   --->   Operation 158 'readreq' 'outputPool_V_load_2_s' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 18 <SV = 17> <Delay = 8.75>
ST_18 : Operation 159 [4/7] (8.75ns)   --->   "%max_V_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %outputPool_V_addr_2, i32 1)" [cnn/src/pool.cpp:28]   --->   Operation 159 'readreq' 'max_V_1_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_18 : Operation 160 [5/7] (8.75ns)   --->   "%outputPool_V_load_2_s = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %outputPool_V_addr_3, i32 1)" [cnn/src/pool.cpp:28]   --->   Operation 160 'readreq' 'outputPool_V_load_2_s' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 19 <SV = 18> <Delay = 8.75>
ST_19 : Operation 161 [3/7] (8.75ns)   --->   "%max_V_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %outputPool_V_addr_2, i32 1)" [cnn/src/pool.cpp:28]   --->   Operation 161 'readreq' 'max_V_1_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_19 : Operation 162 [4/7] (8.75ns)   --->   "%outputPool_V_load_2_s = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %outputPool_V_addr_3, i32 1)" [cnn/src/pool.cpp:28]   --->   Operation 162 'readreq' 'outputPool_V_load_2_s' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 20 <SV = 19> <Delay = 8.75>
ST_20 : Operation 163 [2/7] (8.75ns)   --->   "%max_V_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %outputPool_V_addr_2, i32 1)" [cnn/src/pool.cpp:28]   --->   Operation 163 'readreq' 'max_V_1_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_20 : Operation 164 [3/7] (8.75ns)   --->   "%outputPool_V_load_2_s = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %outputPool_V_addr_3, i32 1)" [cnn/src/pool.cpp:28]   --->   Operation 164 'readreq' 'outputPool_V_load_2_s' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 21 <SV = 20> <Delay = 8.75>
ST_21 : Operation 165 [1/7] (8.75ns)   --->   "%max_V_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %outputPool_V_addr_2, i32 1)" [cnn/src/pool.cpp:28]   --->   Operation 165 'readreq' 'max_V_1_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_21 : Operation 166 [2/7] (8.75ns)   --->   "%outputPool_V_load_2_s = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %outputPool_V_addr_3, i32 1)" [cnn/src/pool.cpp:28]   --->   Operation 166 'readreq' 'outputPool_V_load_2_s' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 22 <SV = 21> <Delay = 8.75>
ST_22 : Operation 167 [1/1] (8.75ns)   --->   "%max_V_1 = call i8 @_ssdm_op_Read.m_axi.i8P(i8* %outputPool_V_addr_2)" [cnn/src/pool.cpp:28]   --->   Operation 167 'read' 'max_V_1' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_22 : Operation 168 [1/7] (8.75ns)   --->   "%outputPool_V_load_2_s = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %outputPool_V_addr_3, i32 1)" [cnn/src/pool.cpp:28]   --->   Operation 168 'readreq' 'outputPool_V_load_2_s' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 23 <SV = 22> <Delay = 8.75>
ST_23 : Operation 169 [1/1] (8.75ns)   --->   "%outputPool_V_addr_3_s = call i8 @_ssdm_op_Read.m_axi.i8P(i8* %outputPool_V_addr_3)" [cnn/src/pool.cpp:28]   --->   Operation 169 'read' 'outputPool_V_addr_3_s' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 24 <SV = 23> <Delay = 4.80>
ST_24 : Operation 170 [1/1] (1.55ns)   --->   "%icmp_ln1494_1 = icmp sgt i8 %outputPool_V_addr_3_s, %max_V_1" [cnn/src/pool.cpp:28]   --->   Operation 170 'icmp' 'icmp_ln1494_1' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 171 [1/1] (0.70ns)   --->   "%select_ln28_1 = select i1 %icmp_ln1494_1, i14 %add_ln27_2, i14 %select_ln28" [cnn/src/pool.cpp:28]   --->   Operation 171 'select' 'select_ln28_1' <Predicate = true> <Delay = 0.70> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_24 : Operation 172 [1/1] (0.00ns)   --->   "%zext_ln1494_3 = zext i14 %select_ln28_1 to i33" [cnn/src/pool.cpp:28]   --->   Operation 172 'zext' 'zext_ln1494_3' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 173 [1/1] (2.55ns)   --->   "%add_ln1494_3 = add i33 %zext_ln1494_3, %sext_ln14" [cnn/src/pool.cpp:28]   --->   Operation 173 'add' 'add_ln1494_3' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 174 [1/1] (0.00ns)   --->   "%sext_ln1494_3 = sext i33 %add_ln1494_3 to i64" [cnn/src/pool.cpp:28]   --->   Operation 174 'sext' 'sext_ln1494_3' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 175 [1/1] (0.00ns)   --->   "%outputPool_V_addr_4 = getelementptr i8* %input_V, i64 %sext_ln1494_3" [cnn/src/pool.cpp:28]   --->   Operation 175 'getelementptr' 'outputPool_V_addr_4' <Predicate = true> <Delay = 0.00>

State 25 <SV = 24> <Delay = 8.75>
ST_25 : Operation 176 [7/7] (8.75ns)   --->   "%max_V_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %outputPool_V_addr_4, i32 1)" [cnn/src/pool.cpp:28]   --->   Operation 176 'readreq' 'max_V_2_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_25 : Operation 177 [1/1] (1.81ns)   --->   "%add_ln27_3 = add i14 %add_ln27_2, 1" [cnn/src/pool.cpp:27]   --->   Operation 177 'add' 'add_ln27_3' <Predicate = true> <Delay = 1.81> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 178 [1/1] (0.00ns)   --->   "%zext_ln1494_4 = zext i14 %add_ln27_3 to i33" [cnn/src/pool.cpp:28]   --->   Operation 178 'zext' 'zext_ln1494_4' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 179 [1/1] (2.55ns)   --->   "%add_ln1494_4 = add i33 %zext_ln1494_4, %sext_ln14" [cnn/src/pool.cpp:28]   --->   Operation 179 'add' 'add_ln1494_4' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 180 [1/1] (0.00ns)   --->   "%sext_ln1494_4 = sext i33 %add_ln1494_4 to i64" [cnn/src/pool.cpp:28]   --->   Operation 180 'sext' 'sext_ln1494_4' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 181 [1/1] (0.00ns)   --->   "%outputPool_V_addr_5 = getelementptr i8* %input_V, i64 %sext_ln1494_4" [cnn/src/pool.cpp:28]   --->   Operation 181 'getelementptr' 'outputPool_V_addr_5' <Predicate = true> <Delay = 0.00>

State 26 <SV = 25> <Delay = 8.75>
ST_26 : Operation 182 [6/7] (8.75ns)   --->   "%max_V_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %outputPool_V_addr_4, i32 1)" [cnn/src/pool.cpp:28]   --->   Operation 182 'readreq' 'max_V_2_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_26 : Operation 183 [7/7] (8.75ns)   --->   "%outputPool_V_load_4_s = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %outputPool_V_addr_5, i32 1)" [cnn/src/pool.cpp:28]   --->   Operation 183 'readreq' 'outputPool_V_load_4_s' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 27 <SV = 26> <Delay = 8.75>
ST_27 : Operation 184 [5/7] (8.75ns)   --->   "%max_V_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %outputPool_V_addr_4, i32 1)" [cnn/src/pool.cpp:28]   --->   Operation 184 'readreq' 'max_V_2_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_27 : Operation 185 [6/7] (8.75ns)   --->   "%outputPool_V_load_4_s = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %outputPool_V_addr_5, i32 1)" [cnn/src/pool.cpp:28]   --->   Operation 185 'readreq' 'outputPool_V_load_4_s' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 28 <SV = 27> <Delay = 8.75>
ST_28 : Operation 186 [4/7] (8.75ns)   --->   "%max_V_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %outputPool_V_addr_4, i32 1)" [cnn/src/pool.cpp:28]   --->   Operation 186 'readreq' 'max_V_2_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_28 : Operation 187 [5/7] (8.75ns)   --->   "%outputPool_V_load_4_s = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %outputPool_V_addr_5, i32 1)" [cnn/src/pool.cpp:28]   --->   Operation 187 'readreq' 'outputPool_V_load_4_s' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 29 <SV = 28> <Delay = 8.75>
ST_29 : Operation 188 [3/7] (8.75ns)   --->   "%max_V_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %outputPool_V_addr_4, i32 1)" [cnn/src/pool.cpp:28]   --->   Operation 188 'readreq' 'max_V_2_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_29 : Operation 189 [4/7] (8.75ns)   --->   "%outputPool_V_load_4_s = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %outputPool_V_addr_5, i32 1)" [cnn/src/pool.cpp:28]   --->   Operation 189 'readreq' 'outputPool_V_load_4_s' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 30 <SV = 29> <Delay = 8.75>
ST_30 : Operation 190 [2/7] (8.75ns)   --->   "%max_V_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %outputPool_V_addr_4, i32 1)" [cnn/src/pool.cpp:28]   --->   Operation 190 'readreq' 'max_V_2_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_30 : Operation 191 [3/7] (8.75ns)   --->   "%outputPool_V_load_4_s = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %outputPool_V_addr_5, i32 1)" [cnn/src/pool.cpp:28]   --->   Operation 191 'readreq' 'outputPool_V_load_4_s' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 31 <SV = 30> <Delay = 8.75>
ST_31 : Operation 192 [1/7] (8.75ns)   --->   "%max_V_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %outputPool_V_addr_4, i32 1)" [cnn/src/pool.cpp:28]   --->   Operation 192 'readreq' 'max_V_2_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_31 : Operation 193 [2/7] (8.75ns)   --->   "%outputPool_V_load_4_s = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %outputPool_V_addr_5, i32 1)" [cnn/src/pool.cpp:28]   --->   Operation 193 'readreq' 'outputPool_V_load_4_s' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 32 <SV = 31> <Delay = 8.75>
ST_32 : Operation 194 [1/1] (8.75ns)   --->   "%max_V_2 = call i8 @_ssdm_op_Read.m_axi.i8P(i8* %outputPool_V_addr_4)" [cnn/src/pool.cpp:28]   --->   Operation 194 'read' 'max_V_2' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_32 : Operation 195 [1/7] (8.75ns)   --->   "%outputPool_V_load_4_s = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %outputPool_V_addr_5, i32 1)" [cnn/src/pool.cpp:28]   --->   Operation 195 'readreq' 'outputPool_V_load_4_s' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 33 <SV = 32> <Delay = 8.75>
ST_33 : Operation 196 [1/1] (8.75ns)   --->   "%outputPool_V_addr_5_s = call i8 @_ssdm_op_Read.m_axi.i8P(i8* %outputPool_V_addr_5)" [cnn/src/pool.cpp:28]   --->   Operation 196 'read' 'outputPool_V_addr_5_s' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 34 <SV = 33> <Delay = 4.10>
ST_34 : Operation 197 [1/1] (1.55ns)   --->   "%icmp_ln1494_2 = icmp sgt i8 %outputPool_V_addr_5_s, %max_V_2" [cnn/src/pool.cpp:28]   --->   Operation 197 'icmp' 'icmp_ln1494_2' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 198 [1/1] (0.00ns) (grouped into LUT with out node add_ln1494_5)   --->   "%select_ln28_2 = select i1 %icmp_ln1494_2, i14 %add_ln27_3, i14 %select_ln28_1" [cnn/src/pool.cpp:28]   --->   Operation 198 'select' 'select_ln28_2' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_34 : Operation 199 [1/1] (0.00ns) (grouped into LUT with out node add_ln1494_5)   --->   "%zext_ln1494_5 = zext i14 %select_ln28_2 to i33" [cnn/src/pool.cpp:28]   --->   Operation 199 'zext' 'zext_ln1494_5' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 200 [1/1] (2.55ns) (out node of the LUT)   --->   "%add_ln1494_5 = add i33 %zext_ln1494_5, %sext_ln14" [cnn/src/pool.cpp:28]   --->   Operation 200 'add' 'add_ln1494_5' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 201 [1/1] (0.00ns)   --->   "%sext_ln1494_5 = sext i33 %add_ln1494_5 to i64" [cnn/src/pool.cpp:28]   --->   Operation 201 'sext' 'sext_ln1494_5' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 202 [1/1] (0.00ns)   --->   "%outputPool_V_addr_6 = getelementptr i8* %input_V, i64 %sext_ln1494_5" [cnn/src/pool.cpp:28]   --->   Operation 202 'getelementptr' 'outputPool_V_addr_6' <Predicate = true> <Delay = 0.00>

State 35 <SV = 34> <Delay = 8.75>
ST_35 : Operation 203 [7/7] (8.75ns)   --->   "%max_V_3_req = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %outputPool_V_addr_6, i32 1)" [cnn/src/pool.cpp:28]   --->   Operation 203 'readreq' 'max_V_3_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 36 <SV = 35> <Delay = 8.75>
ST_36 : Operation 204 [6/7] (8.75ns)   --->   "%max_V_3_req = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %outputPool_V_addr_6, i32 1)" [cnn/src/pool.cpp:28]   --->   Operation 204 'readreq' 'max_V_3_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 37 <SV = 36> <Delay = 8.75>
ST_37 : Operation 205 [5/7] (8.75ns)   --->   "%max_V_3_req = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %outputPool_V_addr_6, i32 1)" [cnn/src/pool.cpp:28]   --->   Operation 205 'readreq' 'max_V_3_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 38 <SV = 37> <Delay = 8.75>
ST_38 : Operation 206 [4/7] (8.75ns)   --->   "%max_V_3_req = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %outputPool_V_addr_6, i32 1)" [cnn/src/pool.cpp:28]   --->   Operation 206 'readreq' 'max_V_3_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 39 <SV = 38> <Delay = 8.75>
ST_39 : Operation 207 [3/7] (8.75ns)   --->   "%max_V_3_req = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %outputPool_V_addr_6, i32 1)" [cnn/src/pool.cpp:28]   --->   Operation 207 'readreq' 'max_V_3_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 40 <SV = 39> <Delay = 8.75>
ST_40 : Operation 208 [2/7] (8.75ns)   --->   "%max_V_3_req = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %outputPool_V_addr_6, i32 1)" [cnn/src/pool.cpp:28]   --->   Operation 208 'readreq' 'max_V_3_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 41 <SV = 40> <Delay = 8.75>
ST_41 : Operation 209 [1/7] (8.75ns)   --->   "%max_V_3_req = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %outputPool_V_addr_6, i32 1)" [cnn/src/pool.cpp:28]   --->   Operation 209 'readreq' 'max_V_3_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 42 <SV = 41> <Delay = 8.75>
ST_42 : Operation 210 [1/1] (8.75ns)   --->   "%max_V_3 = call i8 @_ssdm_op_Read.m_axi.i8P(i8* %outputPool_V_addr_6)" [cnn/src/pool.cpp:28]   --->   Operation 210 'read' 'max_V_3' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 43 <SV = 42> <Delay = 8.75>
ST_43 : Operation 211 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.i8P(i8* %outputPool_V_addr26, i8 %max_V_3, i1 true)" [cnn/src/pool.cpp:33]   --->   Operation 211 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 44 <SV = 43> <Delay = 8.75>
ST_44 : Operation 212 [5/5] (8.75ns)   --->   "%outputPool_V_addr26_1 = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %outputPool_V_addr26)" [cnn/src/pool.cpp:33]   --->   Operation 212 'writeresp' 'outputPool_V_addr26_1' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 45 <SV = 44> <Delay = 8.75>
ST_45 : Operation 213 [4/5] (8.75ns)   --->   "%outputPool_V_addr26_1 = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %outputPool_V_addr26)" [cnn/src/pool.cpp:33]   --->   Operation 213 'writeresp' 'outputPool_V_addr26_1' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 46 <SV = 45> <Delay = 8.75>
ST_46 : Operation 214 [3/5] (8.75ns)   --->   "%outputPool_V_addr26_1 = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %outputPool_V_addr26)" [cnn/src/pool.cpp:33]   --->   Operation 214 'writeresp' 'outputPool_V_addr26_1' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 47 <SV = 46> <Delay = 8.75>
ST_47 : Operation 215 [2/5] (8.75ns)   --->   "%outputPool_V_addr26_1 = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %outputPool_V_addr26)" [cnn/src/pool.cpp:33]   --->   Operation 215 'writeresp' 'outputPool_V_addr26_1' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 48 <SV = 47> <Delay = 8.75>
ST_48 : Operation 216 [1/5] (8.75ns)   --->   "%outputPool_V_addr26_1 = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %outputPool_V_addr26)" [cnn/src/pool.cpp:33]   --->   Operation 216 'writeresp' 'outputPool_V_addr26_1' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_48 : Operation 217 [1/1] (0.00ns)   --->   "br label %.preheader" [cnn/src/pool.cpp:16]   --->   Operation 217 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 3.52ns
The critical path consists of the following:
	wire read on port 'W' (cnn/src/pool.cpp:5) [9]  (0 ns)
	'add' operation ('add_ln12', cnn/src/pool.cpp:12) [20]  (1.78 ns)
	'add' operation ('Wout', cnn/src/pool.cpp:12) [22]  (1.74 ns)

 <State 2>: 3.49ns
The critical path consists of the following:
	'phi' operation ('co') with incoming values : ('co', cnn/src/pool.cpp:14) [30]  (0 ns)
	'mul' operation ('mul_ln15', cnn/src/pool.cpp:15) [40]  (3.49 ns)

 <State 3>: 8ns
The critical path consists of the following:
	'phi' operation ('h') with incoming values : ('h', cnn/src/pool.cpp:15) [43]  (0 ns)
	'add' operation ('in_h', cnn/src/pool.cpp:17) [52]  (1.82 ns)
	'add' operation ('add_ln27_1', cnn/src/pool.cpp:27) [58]  (1.82 ns)
	'mul' operation ('mul_ln27', cnn/src/pool.cpp:27) [60]  (4.35 ns)

 <State 4>: 4.36ns
The critical path consists of the following:
	'phi' operation ('w') with incoming values : ('w', cnn/src/pool.cpp:16) [63]  (0 ns)
	'add' operation ('add_ln17_1', cnn/src/pool.cpp:17) [72]  (1.81 ns)
	'add' operation ('add_ln17_2', cnn/src/pool.cpp:17) [74]  (2.55 ns)

 <State 5>: 8.75ns
The critical path consists of the following:
	bus request on port 'input_V' (cnn/src/pool.cpp:17) [77]  (8.75 ns)

 <State 6>: 8.75ns
The critical path consists of the following:
	bus request on port 'input_V' (cnn/src/pool.cpp:17) [77]  (8.75 ns)

 <State 7>: 8.75ns
The critical path consists of the following:
	bus request on port 'input_V' (cnn/src/pool.cpp:17) [77]  (8.75 ns)

 <State 8>: 8.75ns
The critical path consists of the following:
	bus request on port 'input_V' (cnn/src/pool.cpp:17) [77]  (8.75 ns)

 <State 9>: 8.75ns
The critical path consists of the following:
	bus request on port 'input_V' (cnn/src/pool.cpp:17) [77]  (8.75 ns)

 <State 10>: 8.75ns
The critical path consists of the following:
	bus request on port 'input_V' (cnn/src/pool.cpp:17) [77]  (8.75 ns)

 <State 11>: 8.75ns
The critical path consists of the following:
	bus request on port 'input_V' (cnn/src/pool.cpp:17) [77]  (8.75 ns)

 <State 12>: 8.75ns
The critical path consists of the following:
	bus read on port 'input_V' (cnn/src/pool.cpp:17) [78]  (8.75 ns)

 <State 13>: 8.75ns
The critical path consists of the following:
	bus read on port 'input_V' (cnn/src/pool.cpp:28) [85]  (8.75 ns)

 <State 14>: 4.8ns
The critical path consists of the following:
	'icmp' operation ('icmp_ln1494', cnn/src/pool.cpp:28) [86]  (1.55 ns)
	'select' operation ('select_ln28', cnn/src/pool.cpp:28) [87]  (0.702 ns)
	'add' operation ('add_ln1494_1', cnn/src/pool.cpp:28) [89]  (2.55 ns)

 <State 15>: 8.75ns
The critical path consists of the following:
	bus request on port 'input_V' (cnn/src/pool.cpp:28) [92]  (8.75 ns)

 <State 16>: 8.75ns
The critical path consists of the following:
	bus request on port 'input_V' (cnn/src/pool.cpp:28) [92]  (8.75 ns)

 <State 17>: 8.75ns
The critical path consists of the following:
	bus request on port 'input_V' (cnn/src/pool.cpp:28) [92]  (8.75 ns)

 <State 18>: 8.75ns
The critical path consists of the following:
	bus request on port 'input_V' (cnn/src/pool.cpp:28) [92]  (8.75 ns)

 <State 19>: 8.75ns
The critical path consists of the following:
	bus request on port 'input_V' (cnn/src/pool.cpp:28) [92]  (8.75 ns)

 <State 20>: 8.75ns
The critical path consists of the following:
	bus request on port 'input_V' (cnn/src/pool.cpp:28) [92]  (8.75 ns)

 <State 21>: 8.75ns
The critical path consists of the following:
	bus request on port 'input_V' (cnn/src/pool.cpp:28) [92]  (8.75 ns)

 <State 22>: 8.75ns
The critical path consists of the following:
	bus read on port 'input_V' (cnn/src/pool.cpp:28) [93]  (8.75 ns)

 <State 23>: 8.75ns
The critical path consists of the following:
	bus read on port 'input_V' (cnn/src/pool.cpp:28) [100]  (8.75 ns)

 <State 24>: 4.8ns
The critical path consists of the following:
	'icmp' operation ('icmp_ln1494_1', cnn/src/pool.cpp:28) [101]  (1.55 ns)
	'select' operation ('select_ln28_1', cnn/src/pool.cpp:28) [102]  (0.702 ns)
	'add' operation ('add_ln1494_3', cnn/src/pool.cpp:28) [104]  (2.55 ns)

 <State 25>: 8.75ns
The critical path consists of the following:
	bus request on port 'input_V' (cnn/src/pool.cpp:28) [107]  (8.75 ns)

 <State 26>: 8.75ns
The critical path consists of the following:
	bus request on port 'input_V' (cnn/src/pool.cpp:28) [107]  (8.75 ns)

 <State 27>: 8.75ns
The critical path consists of the following:
	bus request on port 'input_V' (cnn/src/pool.cpp:28) [107]  (8.75 ns)

 <State 28>: 8.75ns
The critical path consists of the following:
	bus request on port 'input_V' (cnn/src/pool.cpp:28) [107]  (8.75 ns)

 <State 29>: 8.75ns
The critical path consists of the following:
	bus request on port 'input_V' (cnn/src/pool.cpp:28) [107]  (8.75 ns)

 <State 30>: 8.75ns
The critical path consists of the following:
	bus request on port 'input_V' (cnn/src/pool.cpp:28) [107]  (8.75 ns)

 <State 31>: 8.75ns
The critical path consists of the following:
	bus request on port 'input_V' (cnn/src/pool.cpp:28) [107]  (8.75 ns)

 <State 32>: 8.75ns
The critical path consists of the following:
	bus read on port 'input_V' (cnn/src/pool.cpp:28) [108]  (8.75 ns)

 <State 33>: 8.75ns
The critical path consists of the following:
	bus read on port 'input_V' (cnn/src/pool.cpp:28) [115]  (8.75 ns)

 <State 34>: 4.1ns
The critical path consists of the following:
	'icmp' operation ('icmp_ln1494_2', cnn/src/pool.cpp:28) [116]  (1.55 ns)
	'select' operation ('select_ln28_2', cnn/src/pool.cpp:28) [117]  (0 ns)
	'add' operation ('add_ln1494_5', cnn/src/pool.cpp:28) [119]  (2.55 ns)

 <State 35>: 8.75ns
The critical path consists of the following:
	bus request on port 'input_V' (cnn/src/pool.cpp:28) [122]  (8.75 ns)

 <State 36>: 8.75ns
The critical path consists of the following:
	bus request on port 'input_V' (cnn/src/pool.cpp:28) [122]  (8.75 ns)

 <State 37>: 8.75ns
The critical path consists of the following:
	bus request on port 'input_V' (cnn/src/pool.cpp:28) [122]  (8.75 ns)

 <State 38>: 8.75ns
The critical path consists of the following:
	bus request on port 'input_V' (cnn/src/pool.cpp:28) [122]  (8.75 ns)

 <State 39>: 8.75ns
The critical path consists of the following:
	bus request on port 'input_V' (cnn/src/pool.cpp:28) [122]  (8.75 ns)

 <State 40>: 8.75ns
The critical path consists of the following:
	bus request on port 'input_V' (cnn/src/pool.cpp:28) [122]  (8.75 ns)

 <State 41>: 8.75ns
The critical path consists of the following:
	bus request on port 'input_V' (cnn/src/pool.cpp:28) [122]  (8.75 ns)

 <State 42>: 8.75ns
The critical path consists of the following:
	bus read on port 'input_V' (cnn/src/pool.cpp:28) [123]  (8.75 ns)

 <State 43>: 8.75ns
The critical path consists of the following:
	bus write on port 'input_V' (cnn/src/pool.cpp:33) [130]  (8.75 ns)

 <State 44>: 8.75ns
The critical path consists of the following:
	bus access on port 'input_V' (cnn/src/pool.cpp:33) [131]  (8.75 ns)

 <State 45>: 8.75ns
The critical path consists of the following:
	bus access on port 'input_V' (cnn/src/pool.cpp:33) [131]  (8.75 ns)

 <State 46>: 8.75ns
The critical path consists of the following:
	bus access on port 'input_V' (cnn/src/pool.cpp:33) [131]  (8.75 ns)

 <State 47>: 8.75ns
The critical path consists of the following:
	bus access on port 'input_V' (cnn/src/pool.cpp:33) [131]  (8.75 ns)

 <State 48>: 8.75ns
The critical path consists of the following:
	bus access on port 'input_V' (cnn/src/pool.cpp:33) [131]  (8.75 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42
	State 43
	State 44
	State 45
	State 46
	State 47
	State 48


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
